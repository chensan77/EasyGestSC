'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection
Imports System.Runtime.Serialization

Namespace Data.Context
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="EasyGest")>  _
	Partial Public Class EasyGestDataContext
		Inherits BaseDataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertCodigosBarra(instance As Data.Entity.CodigosBarra)
    End Sub
    Partial Private Sub UpdateCodigosBarra(instance As Data.Entity.CodigosBarra)
    End Sub
    Partial Private Sub DeleteCodigosBarra(instance As Data.Entity.CodigosBarra)
    End Sub
    Partial Private Sub InsertContactos(instance As Data.Entity.Contactos)
    End Sub
    Partial Private Sub UpdateContactos(instance As Data.Entity.Contactos)
    End Sub
    Partial Private Sub DeleteContactos(instance As Data.Entity.Contactos)
    End Sub
    Partial Private Sub InsertDatosBancario(instance As Data.Entity.DatosBancario)
    End Sub
    Partial Private Sub UpdateDatosBancario(instance As Data.Entity.DatosBancario)
    End Sub
    Partial Private Sub DeleteDatosBancario(instance As Data.Entity.DatosBancario)
    End Sub
    Partial Private Sub InsertFamilias(instance As Data.Entity.Familias)
    End Sub
    Partial Private Sub UpdateFamilias(instance As Data.Entity.Familias)
    End Sub
    Partial Private Sub DeleteFamilias(instance As Data.Entity.Familias)
    End Sub
    Partial Private Sub InsertFormasContacto(instance As Data.Entity.FormasContacto)
    End Sub
    Partial Private Sub UpdateFormasContacto(instance As Data.Entity.FormasContacto)
    End Sub
    Partial Private Sub DeleteFormasContacto(instance As Data.Entity.FormasContacto)
    End Sub
    Partial Private Sub InsertGalerias(instance As Data.Entity.Galerias)
    End Sub
    Partial Private Sub UpdateGalerias(instance As Data.Entity.Galerias)
    End Sub
    Partial Private Sub DeleteGalerias(instance As Data.Entity.Galerias)
    End Sub
    Partial Private Sub InsertImpuestos(instance As Data.Entity.Impuestos)
    End Sub
    Partial Private Sub UpdateImpuestos(instance As Data.Entity.Impuestos)
    End Sub
    Partial Private Sub DeleteImpuestos(instance As Data.Entity.Impuestos)
    End Sub
    Partial Private Sub InsertModosPago(instance As Data.Entity.ModosPago)
    End Sub
    Partial Private Sub UpdateModosPago(instance As Data.Entity.ModosPago)
    End Sub
    Partial Private Sub DeleteModosPago(instance As Data.Entity.ModosPago)
    End Sub
    Partial Private Sub InsertMunicipiosEspañolas(instance As Data.Entity.MunicipiosEspañolas)
    End Sub
    Partial Private Sub UpdateMunicipiosEspañolas(instance As Data.Entity.MunicipiosEspañolas)
    End Sub
    Partial Private Sub DeleteMunicipiosEspañolas(instance As Data.Entity.MunicipiosEspañolas)
    End Sub
    Partial Private Sub InsertProvinciasEspañolas(instance As Data.Entity.ProvinciasEspañolas)
    End Sub
    Partial Private Sub UpdateProvinciasEspañolas(instance As Data.Entity.ProvinciasEspañolas)
    End Sub
    Partial Private Sub DeleteProvinciasEspañolas(instance As Data.Entity.ProvinciasEspañolas)
    End Sub
    Partial Private Sub InsertTiposIdentificacion(instance As Data.Entity.TiposIdentificacion)
    End Sub
    Partial Private Sub UpdateTiposIdentificacion(instance As Data.Entity.TiposIdentificacion)
    End Sub
    Partial Private Sub DeleteTiposIdentificacion(instance As Data.Entity.TiposIdentificacion)
    End Sub
    Partial Private Sub InsertUbicaciones(instance As Data.Entity.Ubicaciones)
    End Sub
    Partial Private Sub UpdateUbicaciones(instance As Data.Entity.Ubicaciones)
    End Sub
    Partial Private Sub DeleteUbicaciones(instance As Data.Entity.Ubicaciones)
    End Sub
    Partial Private Sub InsertMarcas(instance As Data.Entity.Marcas)
    End Sub
    Partial Private Sub UpdateMarcas(instance As Data.Entity.Marcas)
    End Sub
    Partial Private Sub DeleteMarcas(instance As Data.Entity.Marcas)
    End Sub
    Partial Private Sub InsertVWDatosBancario(instance As Data.Entity.VWDatosBancario)
    End Sub
    Partial Private Sub UpdateVWDatosBancario(instance As Data.Entity.VWDatosBancario)
    End Sub
    Partial Private Sub DeleteVWDatosBancario(instance As Data.Entity.VWDatosBancario)
    End Sub
    Partial Private Sub InsertVWLineasPedido(instance As Data.Entity.VWLineasPedido)
    End Sub
    Partial Private Sub UpdateVWLineasPedido(instance As Data.Entity.VWLineasPedido)
    End Sub
    Partial Private Sub DeleteVWLineasPedido(instance As Data.Entity.VWLineasPedido)
    End Sub
    Partial Private Sub InsertVWPedidos(instance As Data.Entity.VWPedidos)
    End Sub
    Partial Private Sub UpdateVWPedidos(instance As Data.Entity.VWPedidos)
    End Sub
    Partial Private Sub DeleteVWPedidos(instance As Data.Entity.VWPedidos)
    End Sub
    Partial Private Sub InsertVWContactos(instance As Data.Entity.VWContactos)
    End Sub
    Partial Private Sub UpdateVWContactos(instance As Data.Entity.VWContactos)
    End Sub
    Partial Private Sub DeleteVWContactos(instance As Data.Entity.VWContactos)
    End Sub
    Partial Private Sub InsertVWProveedores(instance As Data.Entity.VWProveedores)
    End Sub
    Partial Private Sub UpdateVWProveedores(instance As Data.Entity.VWProveedores)
    End Sub
    Partial Private Sub DeleteVWProveedores(instance As Data.Entity.VWProveedores)
    End Sub
    Partial Private Sub InsertEmpresas(instance As Data.Entity.Empresas)
    End Sub
    Partial Private Sub UpdateEmpresas(instance As Data.Entity.Empresas)
    End Sub
    Partial Private Sub DeleteEmpresas(instance As Data.Entity.Empresas)
    End Sub
    Partial Private Sub InsertUnidadesMedida(instance As Data.Entity.UnidadesMedida)
    End Sub
    Partial Private Sub UpdateUnidadesMedida(instance As Data.Entity.UnidadesMedida)
    End Sub
    Partial Private Sub DeleteUnidadesMedida(instance As Data.Entity.UnidadesMedida)
    End Sub
    Partial Private Sub InsertFacturas(instance As Data.Entity.Facturas)
    End Sub
    Partial Private Sub UpdateFacturas(instance As Data.Entity.Facturas)
    End Sub
    Partial Private Sub DeleteFacturas(instance As Data.Entity.Facturas)
    End Sub
    Partial Private Sub InsertVWLineasAlbaran(instance As Data.Entity.VWLineasAlbaran)
    End Sub
    Partial Private Sub UpdateVWLineasAlbaran(instance As Data.Entity.VWLineasAlbaran)
    End Sub
    Partial Private Sub DeleteVWLineasAlbaran(instance As Data.Entity.VWLineasAlbaran)
    End Sub
    Partial Private Sub InsertVWLineasFactura(instance As Data.Entity.VWLineasFactura)
    End Sub
    Partial Private Sub UpdateVWLineasFactura(instance As Data.Entity.VWLineasFactura)
    End Sub
    Partial Private Sub DeleteVWLineasFactura(instance As Data.Entity.VWLineasFactura)
    End Sub
    Partial Private Sub InsertVWFacturas(instance As Data.Entity.VWFacturas)
    End Sub
    Partial Private Sub UpdateVWFacturas(instance As Data.Entity.VWFacturas)
    End Sub
    Partial Private Sub DeleteVWFacturas(instance As Data.Entity.VWFacturas)
    End Sub
    Partial Private Sub InsertOfertas(instance As Data.Entity.Ofertas)
    End Sub
    Partial Private Sub UpdateOfertas(instance As Data.Entity.Ofertas)
    End Sub
    Partial Private Sub DeleteOfertas(instance As Data.Entity.Ofertas)
    End Sub
    Partial Private Sub InsertVWAlbaranes(instance As Data.Entity.VWAlbaranes)
    End Sub
    Partial Private Sub UpdateVWAlbaranes(instance As Data.Entity.VWAlbaranes)
    End Sub
    Partial Private Sub DeleteVWAlbaranes(instance As Data.Entity.VWAlbaranes)
    End Sub
    Partial Private Sub InsertAlbaranes(instance As Data.Entity.Albaranes)
    End Sub
    Partial Private Sub UpdateAlbaranes(instance As Data.Entity.Albaranes)
    End Sub
    Partial Private Sub DeleteAlbaranes(instance As Data.Entity.Albaranes)
    End Sub
    Partial Private Sub InsertCaracteristicasProducto(instance As Data.Entity.CaracteristicasProducto)
    End Sub
    Partial Private Sub UpdateCaracteristicasProducto(instance As Data.Entity.CaracteristicasProducto)
    End Sub
    Partial Private Sub DeleteCaracteristicasProducto(instance As Data.Entity.CaracteristicasProducto)
    End Sub
    Partial Private Sub InsertMovimientosTarjeta(instance As Data.Entity.MovimientosTarjeta)
    End Sub
    Partial Private Sub UpdateMovimientosTarjeta(instance As Data.Entity.MovimientosTarjeta)
    End Sub
    Partial Private Sub DeleteMovimientosTarjeta(instance As Data.Entity.MovimientosTarjeta)
    End Sub
    Partial Private Sub InsertVWProductos(instance As Data.Entity.VWProductos)
    End Sub
    Partial Private Sub UpdateVWProductos(instance As Data.Entity.VWProductos)
    End Sub
    Partial Private Sub DeleteVWProductos(instance As Data.Entity.VWProductos)
    End Sub
    Partial Private Sub InsertTarjetasFidelizacion(instance As Data.Entity.TarjetasFidelizacion)
    End Sub
    Partial Private Sub UpdateTarjetasFidelizacion(instance As Data.Entity.TarjetasFidelizacion)
    End Sub
    Partial Private Sub DeleteTarjetasFidelizacion(instance As Data.Entity.TarjetasFidelizacion)
    End Sub
    Partial Private Sub InsertVWTarjetasFidelizacion(instance As Data.Entity.VWTarjetasFidelizacion)
    End Sub
    Partial Private Sub UpdateVWTarjetasFidelizacion(instance As Data.Entity.VWTarjetasFidelizacion)
    End Sub
    Partial Private Sub DeleteVWTarjetasFidelizacion(instance As Data.Entity.VWTarjetasFidelizacion)
    End Sub
    Partial Private Sub InsertEncargos(instance As Data.Entity.Encargos)
    End Sub
    Partial Private Sub UpdateEncargos(instance As Data.Entity.Encargos)
    End Sub
    Partial Private Sub DeleteEncargos(instance As Data.Entity.Encargos)
    End Sub
    Partial Private Sub InsertListasCompra(instance As Data.Entity.ListasCompra)
    End Sub
    Partial Private Sub UpdateListasCompra(instance As Data.Entity.ListasCompra)
    End Sub
    Partial Private Sub DeleteListasCompra(instance As Data.Entity.ListasCompra)
    End Sub
    Partial Private Sub InsertDiarios(instance As Data.Entity.Diarios)
    End Sub
    Partial Private Sub UpdateDiarios(instance As Data.Entity.Diarios)
    End Sub
    Partial Private Sub DeleteDiarios(instance As Data.Entity.Diarios)
    End Sub
    Partial Private Sub InsertVWDiarios(instance As Data.Entity.VWDiarios)
    End Sub
    Partial Private Sub UpdateVWDiarios(instance As Data.Entity.VWDiarios)
    End Sub
    Partial Private Sub DeleteVWDiarios(instance As Data.Entity.VWDiarios)
    End Sub
    Partial Private Sub InsertVWApuntesDiario(instance As Data.Entity.VWApuntesDiario)
    End Sub
    Partial Private Sub UpdateVWApuntesDiario(instance As Data.Entity.VWApuntesDiario)
    End Sub
    Partial Private Sub DeleteVWApuntesDiario(instance As Data.Entity.VWApuntesDiario)
    End Sub
    Partial Private Sub InsertApuntesDiario(instance As Data.Entity.ApuntesDiario)
    End Sub
    Partial Private Sub UpdateApuntesDiario(instance As Data.Entity.ApuntesDiario)
    End Sub
    Partial Private Sub DeleteApuntesDiario(instance As Data.Entity.ApuntesDiario)
    End Sub
    Partial Private Sub InsertMorosidades(instance As Data.Entity.Morosidades)
    End Sub
    Partial Private Sub UpdateMorosidades(instance As Data.Entity.Morosidades)
    End Sub
    Partial Private Sub DeleteMorosidades(instance As Data.Entity.Morosidades)
    End Sub
    Partial Private Sub InsertMovimientosMorosidad(instance As Data.Entity.MovimientosMorosidad)
    End Sub
    Partial Private Sub UpdateMovimientosMorosidad(instance As Data.Entity.MovimientosMorosidad)
    End Sub
    Partial Private Sub DeleteMovimientosMorosidad(instance As Data.Entity.MovimientosMorosidad)
    End Sub
    Partial Private Sub InsertVWCobros(instance As Data.Entity.VWCobros)
    End Sub
    Partial Private Sub UpdateVWCobros(instance As Data.Entity.VWCobros)
    End Sub
    Partial Private Sub DeleteVWCobros(instance As Data.Entity.VWCobros)
    End Sub
    Partial Private Sub InsertVWPagos(instance As Data.Entity.VWPagos)
    End Sub
    Partial Private Sub UpdateVWPagos(instance As Data.Entity.VWPagos)
    End Sub
    Partial Private Sub DeleteVWPagos(instance As Data.Entity.VWPagos)
    End Sub
    Partial Private Sub InsertVWCreditosCliente(instance As Data.Entity.VWCreditosCliente)
    End Sub
    Partial Private Sub UpdateVWCreditosCliente(instance As Data.Entity.VWCreditosCliente)
    End Sub
    Partial Private Sub DeleteVWCreditosCliente(instance As Data.Entity.VWCreditosCliente)
    End Sub
    Partial Private Sub InsertVWDeberesProveedor(instance As Data.Entity.VWDeberesProveedor)
    End Sub
    Partial Private Sub UpdateVWDeberesProveedor(instance As Data.Entity.VWDeberesProveedor)
    End Sub
    Partial Private Sub DeleteVWDeberesProveedor(instance As Data.Entity.VWDeberesProveedor)
    End Sub
    Partial Private Sub InsertPrioridadesTarea(instance As Data.Entity.PrioridadesTarea)
    End Sub
    Partial Private Sub UpdatePrioridadesTarea(instance As Data.Entity.PrioridadesTarea)
    End Sub
    Partial Private Sub DeletePrioridadesTarea(instance As Data.Entity.PrioridadesTarea)
    End Sub
    Partial Private Sub InsertTiposDatoCaractProducto(instance As Data.Entity.TiposDatoCaractProducto)
    End Sub
    Partial Private Sub UpdateTiposDatoCaractProducto(instance As Data.Entity.TiposDatoCaractProducto)
    End Sub
    Partial Private Sub DeleteTiposDatoCaractProducto(instance As Data.Entity.TiposDatoCaractProducto)
    End Sub
    Partial Private Sub InsertUsuarios(instance As Data.Entity.Usuarios)
    End Sub
    Partial Private Sub UpdateUsuarios(instance As Data.Entity.Usuarios)
    End Sub
    Partial Private Sub DeleteUsuarios(instance As Data.Entity.Usuarios)
    End Sub
    Partial Private Sub InsertVales(instance As Data.Entity.Vales)
    End Sub
    Partial Private Sub UpdateVales(instance As Data.Entity.Vales)
    End Sub
    Partial Private Sub DeleteVales(instance As Data.Entity.Vales)
    End Sub
    Partial Private Sub InsertVWVales(instance As Data.Entity.VWVales)
    End Sub
    Partial Private Sub UpdateVWVales(instance As Data.Entity.VWVales)
    End Sub
    Partial Private Sub DeleteVWVales(instance As Data.Entity.VWVales)
    End Sub
    Partial Private Sub InsertClientes(instance As Data.Entity.Clientes)
    End Sub
    Partial Private Sub UpdateClientes(instance As Data.Entity.Clientes)
    End Sub
    Partial Private Sub DeleteClientes(instance As Data.Entity.Clientes)
    End Sub
    Partial Private Sub InsertVWClientes(instance As Data.Entity.VWClientes)
    End Sub
    Partial Private Sub UpdateVWClientes(instance As Data.Entity.VWClientes)
    End Sub
    Partial Private Sub DeleteVWClientes(instance As Data.Entity.VWClientes)
    End Sub
    Partial Private Sub InsertTareas(instance As Data.Entity.Tareas)
    End Sub
    Partial Private Sub UpdateTareas(instance As Data.Entity.Tareas)
    End Sub
    Partial Private Sub DeleteTareas(instance As Data.Entity.Tareas)
    End Sub
    Partial Private Sub InsertVWTareas(instance As Data.Entity.VWTareas)
    End Sub
    Partial Private Sub UpdateVWTareas(instance As Data.Entity.VWTareas)
    End Sub
    Partial Private Sub DeleteVWTareas(instance As Data.Entity.VWTareas)
    End Sub
    Partial Private Sub InsertRevolucionPreciosCompra(instance As Data.Entity.RevolucionPreciosCompra)
    End Sub
    Partial Private Sub UpdateRevolucionPreciosCompra(instance As Data.Entity.RevolucionPreciosCompra)
    End Sub
    Partial Private Sub DeleteRevolucionPreciosCompra(instance As Data.Entity.RevolucionPreciosCompra)
    End Sub
    Partial Private Sub InsertLineasImpuestoAlbaran(instance As Data.Entity.LineasImpuestoAlbaran)
    End Sub
    Partial Private Sub UpdateLineasImpuestoAlbaran(instance As Data.Entity.LineasImpuestoAlbaran)
    End Sub
    Partial Private Sub DeleteLineasImpuestoAlbaran(instance As Data.Entity.LineasImpuestoAlbaran)
    End Sub
    Partial Private Sub InsertLineasImpuestoFactura(instance As Data.Entity.LineasImpuestoFactura)
    End Sub
    Partial Private Sub UpdateLineasImpuestoFactura(instance As Data.Entity.LineasImpuestoFactura)
    End Sub
    Partial Private Sub DeleteLineasImpuestoFactura(instance As Data.Entity.LineasImpuestoFactura)
    End Sub
    Partial Private Sub InsertProveedores(instance As Data.Entity.Proveedores)
    End Sub
    Partial Private Sub UpdateProveedores(instance As Data.Entity.Proveedores)
    End Sub
    Partial Private Sub DeleteProveedores(instance As Data.Entity.Proveedores)
    End Sub
    Partial Private Sub InsertLineasFactura(instance As Data.Entity.LineasFactura)
    End Sub
    Partial Private Sub UpdateLineasFactura(instance As Data.Entity.LineasFactura)
    End Sub
    Partial Private Sub DeleteLineasFactura(instance As Data.Entity.LineasFactura)
    End Sub
    Partial Private Sub InsertLineasAlbaran(instance As Data.Entity.LineasAlbaran)
    End Sub
    Partial Private Sub UpdateLineasAlbaran(instance As Data.Entity.LineasAlbaran)
    End Sub
    Partial Private Sub DeleteLineasAlbaran(instance As Data.Entity.LineasAlbaran)
    End Sub
    Partial Private Sub InsertLineasPedido(instance As Data.Entity.LineasPedido)
    End Sub
    Partial Private Sub UpdateLineasPedido(instance As Data.Entity.LineasPedido)
    End Sub
    Partial Private Sub DeleteLineasPedido(instance As Data.Entity.LineasPedido)
    End Sub
    Partial Private Sub InsertProductos(instance As Data.Entity.Productos)
    End Sub
    Partial Private Sub UpdateProductos(instance As Data.Entity.Productos)
    End Sub
    Partial Private Sub DeleteProductos(instance As Data.Entity.Productos)
    End Sub
    Partial Private Sub InsertPedidos(instance As Data.Entity.Pedidos)
    End Sub
    Partial Private Sub UpdatePedidos(instance As Data.Entity.Pedidos)
    End Sub
    Partial Private Sub DeletePedidos(instance As Data.Entity.Pedidos)
    End Sub
    Partial Private Sub InsertConfiguraciones(instance As Data.Entity.Configuraciones)
    End Sub
    Partial Private Sub UpdateConfiguraciones(instance As Data.Entity.Configuraciones)
    End Sub
    Partial Private Sub DeleteConfiguraciones(instance As Data.Entity.Configuraciones)
    End Sub
    Partial Private Sub InsertDiseñosEtiqueta(instance As Data.Entity.DiseñosEtiqueta)
    End Sub
    Partial Private Sub UpdateDiseñosEtiqueta(instance As Data.Entity.DiseñosEtiqueta)
    End Sub
    Partial Private Sub DeleteDiseñosEtiqueta(instance As Data.Entity.DiseñosEtiqueta)
    End Sub
    Partial Private Sub InsertEtiquetasEnHoja(instance As Data.Entity.EtiquetasEnHoja)
    End Sub
    Partial Private Sub UpdateEtiquetasEnHoja(instance As Data.Entity.EtiquetasEnHoja)
    End Sub
    Partial Private Sub DeleteEtiquetasEnHoja(instance As Data.Entity.EtiquetasEnHoja)
    End Sub
    Partial Private Sub InsertEtiquetasEnRollo(instance As Data.Entity.EtiquetasEnRollo)
    End Sub
    Partial Private Sub UpdateEtiquetasEnRollo(instance As Data.Entity.EtiquetasEnRollo)
    End Sub
    Partial Private Sub DeleteEtiquetasEnRollo(instance As Data.Entity.EtiquetasEnRollo)
    End Sub
    Partial Private Sub InsertPuestos(instance As Data.Entity.Puestos)
    End Sub
    Partial Private Sub UpdatePuestos(instance As Data.Entity.Puestos)
    End Sub
    Partial Private Sub DeletePuestos(instance As Data.Entity.Puestos)
    End Sub
    #End Region
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Friend ReadOnly Property CodigosBarra() As System.Data.Linq.Table(Of Data.Entity.CodigosBarra)
			Get
				Return Me.GetTable(Of Data.Entity.CodigosBarra)
			End Get
		End Property
		
		Friend ReadOnly Property Contactos() As System.Data.Linq.Table(Of Data.Entity.Contactos)
			Get
				Return Me.GetTable(Of Data.Entity.Contactos)
			End Get
		End Property
		
		Friend ReadOnly Property DatosBancario() As System.Data.Linq.Table(Of Data.Entity.DatosBancario)
			Get
				Return Me.GetTable(Of Data.Entity.DatosBancario)
			End Get
		End Property
		
		Friend ReadOnly Property Familias() As System.Data.Linq.Table(Of Data.Entity.Familias)
			Get
				Return Me.GetTable(Of Data.Entity.Familias)
			End Get
		End Property
		
		Friend ReadOnly Property FormasContacto() As System.Data.Linq.Table(Of Data.Entity.FormasContacto)
			Get
				Return Me.GetTable(Of Data.Entity.FormasContacto)
			End Get
		End Property
		
		Friend ReadOnly Property Galerias() As System.Data.Linq.Table(Of Data.Entity.Galerias)
			Get
				Return Me.GetTable(Of Data.Entity.Galerias)
			End Get
		End Property
		
		Friend ReadOnly Property Impuestos() As System.Data.Linq.Table(Of Data.Entity.Impuestos)
			Get
				Return Me.GetTable(Of Data.Entity.Impuestos)
			End Get
		End Property
		
		Friend ReadOnly Property ModosPago() As System.Data.Linq.Table(Of Data.Entity.ModosPago)
			Get
				Return Me.GetTable(Of Data.Entity.ModosPago)
			End Get
		End Property
		
		Friend ReadOnly Property MunicipiosEspañolas() As System.Data.Linq.Table(Of Data.Entity.MunicipiosEspañolas)
			Get
				Return Me.GetTable(Of Data.Entity.MunicipiosEspañolas)
			End Get
		End Property
		
		Friend ReadOnly Property ProvinciasEspañolas() As System.Data.Linq.Table(Of Data.Entity.ProvinciasEspañolas)
			Get
				Return Me.GetTable(Of Data.Entity.ProvinciasEspañolas)
			End Get
		End Property
		
		Friend ReadOnly Property TiposIdentificacion() As System.Data.Linq.Table(Of Data.Entity.TiposIdentificacion)
			Get
				Return Me.GetTable(Of Data.Entity.TiposIdentificacion)
			End Get
		End Property
		
		Friend ReadOnly Property Ubicaciones() As System.Data.Linq.Table(Of Data.Entity.Ubicaciones)
			Get
				Return Me.GetTable(Of Data.Entity.Ubicaciones)
			End Get
		End Property
		
		Friend ReadOnly Property Marcas() As System.Data.Linq.Table(Of Data.Entity.Marcas)
			Get
				Return Me.GetTable(Of Data.Entity.Marcas)
			End Get
		End Property
		
		Friend ReadOnly Property VWDatosBancario() As System.Data.Linq.Table(Of Data.Entity.VWDatosBancario)
			Get
				Return Me.GetTable(Of Data.Entity.VWDatosBancario)
			End Get
		End Property
		
		Friend ReadOnly Property VWLineasPedido() As System.Data.Linq.Table(Of Data.Entity.VWLineasPedido)
			Get
				Return Me.GetTable(Of Data.Entity.VWLineasPedido)
			End Get
		End Property
		
		Friend ReadOnly Property VWPedidos() As System.Data.Linq.Table(Of Data.Entity.VWPedidos)
			Get
				Return Me.GetTable(Of Data.Entity.VWPedidos)
			End Get
		End Property
		
		Public ReadOnly Property VWContactos() As System.Data.Linq.Table(Of Data.Entity.VWContactos)
			Get
				Return Me.GetTable(Of Data.Entity.VWContactos)
			End Get
		End Property
		
		Public ReadOnly Property VWProveedores() As System.Data.Linq.Table(Of Data.Entity.VWProveedores)
			Get
				Return Me.GetTable(Of Data.Entity.VWProveedores)
			End Get
		End Property
		
		Public ReadOnly Property Empresas() As System.Data.Linq.Table(Of Data.Entity.Empresas)
			Get
				Return Me.GetTable(Of Data.Entity.Empresas)
			End Get
		End Property
		
		Public ReadOnly Property UnidadesMedida() As System.Data.Linq.Table(Of Data.Entity.UnidadesMedida)
			Get
				Return Me.GetTable(Of Data.Entity.UnidadesMedida)
			End Get
		End Property
		
		Public ReadOnly Property Facturas() As System.Data.Linq.Table(Of Data.Entity.Facturas)
			Get
				Return Me.GetTable(Of Data.Entity.Facturas)
			End Get
		End Property
		
		Public ReadOnly Property VWLineasAlbaran() As System.Data.Linq.Table(Of Data.Entity.VWLineasAlbaran)
			Get
				Return Me.GetTable(Of Data.Entity.VWLineasAlbaran)
			End Get
		End Property
		
		Public ReadOnly Property VWLineasFactura() As System.Data.Linq.Table(Of Data.Entity.VWLineasFactura)
			Get
				Return Me.GetTable(Of Data.Entity.VWLineasFactura)
			End Get
		End Property
		
		Public ReadOnly Property VWFacturas() As System.Data.Linq.Table(Of Data.Entity.VWFacturas)
			Get
				Return Me.GetTable(Of Data.Entity.VWFacturas)
			End Get
		End Property
		
		Public ReadOnly Property Ofertas() As System.Data.Linq.Table(Of Data.Entity.Ofertas)
			Get
				Return Me.GetTable(Of Data.Entity.Ofertas)
			End Get
		End Property
		
		Public ReadOnly Property VWAlbaranes() As System.Data.Linq.Table(Of Data.Entity.VWAlbaranes)
			Get
				Return Me.GetTable(Of Data.Entity.VWAlbaranes)
			End Get
		End Property
		
		Public ReadOnly Property Albaranes() As System.Data.Linq.Table(Of Data.Entity.Albaranes)
			Get
				Return Me.GetTable(Of Data.Entity.Albaranes)
			End Get
		End Property
		
		Public ReadOnly Property CaracteristicasProducto() As System.Data.Linq.Table(Of Data.Entity.CaracteristicasProducto)
			Get
				Return Me.GetTable(Of Data.Entity.CaracteristicasProducto)
			End Get
		End Property
		
		Public ReadOnly Property MovimientosTarjeta() As System.Data.Linq.Table(Of Data.Entity.MovimientosTarjeta)
			Get
				Return Me.GetTable(Of Data.Entity.MovimientosTarjeta)
			End Get
		End Property
		
		Public ReadOnly Property VWProductos() As System.Data.Linq.Table(Of Data.Entity.VWProductos)
			Get
				Return Me.GetTable(Of Data.Entity.VWProductos)
			End Get
		End Property
		
		Public ReadOnly Property TarjetasFidelizacion() As System.Data.Linq.Table(Of Data.Entity.TarjetasFidelizacion)
			Get
				Return Me.GetTable(Of Data.Entity.TarjetasFidelizacion)
			End Get
		End Property
		
		Public ReadOnly Property VWTarjetasFidelizacion() As System.Data.Linq.Table(Of Data.Entity.VWTarjetasFidelizacion)
			Get
				Return Me.GetTable(Of Data.Entity.VWTarjetasFidelizacion)
			End Get
		End Property
		
		Public ReadOnly Property Encargos() As System.Data.Linq.Table(Of Data.Entity.Encargos)
			Get
				Return Me.GetTable(Of Data.Entity.Encargos)
			End Get
		End Property
		
		Public ReadOnly Property ListasCompra() As System.Data.Linq.Table(Of Data.Entity.ListasCompra)
			Get
				Return Me.GetTable(Of Data.Entity.ListasCompra)
			End Get
		End Property
		
		Public ReadOnly Property Diarios() As System.Data.Linq.Table(Of Data.Entity.Diarios)
			Get
				Return Me.GetTable(Of Data.Entity.Diarios)
			End Get
		End Property
		
		Public ReadOnly Property VWDiarios() As System.Data.Linq.Table(Of Data.Entity.VWDiarios)
			Get
				Return Me.GetTable(Of Data.Entity.VWDiarios)
			End Get
		End Property
		
		Public ReadOnly Property VWApuntesDiario() As System.Data.Linq.Table(Of Data.Entity.VWApuntesDiario)
			Get
				Return Me.GetTable(Of Data.Entity.VWApuntesDiario)
			End Get
		End Property
		
		Public ReadOnly Property ApuntesDiario() As System.Data.Linq.Table(Of Data.Entity.ApuntesDiario)
			Get
				Return Me.GetTable(Of Data.Entity.ApuntesDiario)
			End Get
		End Property
		
		Public ReadOnly Property Morosidades() As System.Data.Linq.Table(Of Data.Entity.Morosidades)
			Get
				Return Me.GetTable(Of Data.Entity.Morosidades)
			End Get
		End Property
		
		Public ReadOnly Property MovimientosMorosidad() As System.Data.Linq.Table(Of Data.Entity.MovimientosMorosidad)
			Get
				Return Me.GetTable(Of Data.Entity.MovimientosMorosidad)
			End Get
		End Property
		
		Public ReadOnly Property VWCobros() As System.Data.Linq.Table(Of Data.Entity.VWCobros)
			Get
				Return Me.GetTable(Of Data.Entity.VWCobros)
			End Get
		End Property
		
		Public ReadOnly Property VWPagos() As System.Data.Linq.Table(Of Data.Entity.VWPagos)
			Get
				Return Me.GetTable(Of Data.Entity.VWPagos)
			End Get
		End Property
		
		Public ReadOnly Property VWCreditosCliente() As System.Data.Linq.Table(Of Data.Entity.VWCreditosCliente)
			Get
				Return Me.GetTable(Of Data.Entity.VWCreditosCliente)
			End Get
		End Property
		
		Public ReadOnly Property VWDeberesProveedor() As System.Data.Linq.Table(Of Data.Entity.VWDeberesProveedor)
			Get
				Return Me.GetTable(Of Data.Entity.VWDeberesProveedor)
			End Get
		End Property
		
		Public ReadOnly Property PrioridadesTarea() As System.Data.Linq.Table(Of Data.Entity.PrioridadesTarea)
			Get
				Return Me.GetTable(Of Data.Entity.PrioridadesTarea)
			End Get
		End Property
		
		Public ReadOnly Property TiposDatoCaractProducto() As System.Data.Linq.Table(Of Data.Entity.TiposDatoCaractProducto)
			Get
				Return Me.GetTable(Of Data.Entity.TiposDatoCaractProducto)
			End Get
		End Property
		
		Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Data.Entity.Usuarios)
			Get
				Return Me.GetTable(Of Data.Entity.Usuarios)
			End Get
		End Property
		
		Public ReadOnly Property Vales() As System.Data.Linq.Table(Of Data.Entity.Vales)
			Get
				Return Me.GetTable(Of Data.Entity.Vales)
			End Get
		End Property
		
		Public ReadOnly Property VWVales() As System.Data.Linq.Table(Of Data.Entity.VWVales)
			Get
				Return Me.GetTable(Of Data.Entity.VWVales)
			End Get
		End Property
		
		Public ReadOnly Property Clientes() As System.Data.Linq.Table(Of Data.Entity.Clientes)
			Get
				Return Me.GetTable(Of Data.Entity.Clientes)
			End Get
		End Property
		
		Public ReadOnly Property VWClientes() As System.Data.Linq.Table(Of Data.Entity.VWClientes)
			Get
				Return Me.GetTable(Of Data.Entity.VWClientes)
			End Get
		End Property
		
		Public ReadOnly Property Tareas() As System.Data.Linq.Table(Of Data.Entity.Tareas)
			Get
				Return Me.GetTable(Of Data.Entity.Tareas)
			End Get
		End Property
		
		Public ReadOnly Property VWTareas() As System.Data.Linq.Table(Of Data.Entity.VWTareas)
			Get
				Return Me.GetTable(Of Data.Entity.VWTareas)
			End Get
		End Property
		
		Public ReadOnly Property RevolucionPreciosCompra() As System.Data.Linq.Table(Of Data.Entity.RevolucionPreciosCompra)
			Get
				Return Me.GetTable(Of Data.Entity.RevolucionPreciosCompra)
			End Get
		End Property
		
		Public ReadOnly Property LineasImpuestoAlbaran() As System.Data.Linq.Table(Of Data.Entity.LineasImpuestoAlbaran)
			Get
				Return Me.GetTable(Of Data.Entity.LineasImpuestoAlbaran)
			End Get
		End Property
		
		Public ReadOnly Property LineasImpuestoFactura() As System.Data.Linq.Table(Of Data.Entity.LineasImpuestoFactura)
			Get
				Return Me.GetTable(Of Data.Entity.LineasImpuestoFactura)
			End Get
		End Property
		
		Public ReadOnly Property Proveedores() As System.Data.Linq.Table(Of Data.Entity.Proveedores)
			Get
				Return Me.GetTable(Of Data.Entity.Proveedores)
			End Get
		End Property
		
		Public ReadOnly Property LineasFactura() As System.Data.Linq.Table(Of Data.Entity.LineasFactura)
			Get
				Return Me.GetTable(Of Data.Entity.LineasFactura)
			End Get
		End Property
		
		Public ReadOnly Property LineasAlbaran() As System.Data.Linq.Table(Of Data.Entity.LineasAlbaran)
			Get
				Return Me.GetTable(Of Data.Entity.LineasAlbaran)
			End Get
		End Property
		
		Public ReadOnly Property LineasPedido() As System.Data.Linq.Table(Of Data.Entity.LineasPedido)
			Get
				Return Me.GetTable(Of Data.Entity.LineasPedido)
			End Get
		End Property
		
		Public ReadOnly Property Productos() As System.Data.Linq.Table(Of Data.Entity.Productos)
			Get
				Return Me.GetTable(Of Data.Entity.Productos)
			End Get
		End Property
		
		Public ReadOnly Property Pedidos() As System.Data.Linq.Table(Of Data.Entity.Pedidos)
			Get
				Return Me.GetTable(Of Data.Entity.Pedidos)
			End Get
		End Property
		
		Public ReadOnly Property Configuraciones() As System.Data.Linq.Table(Of Data.Entity.Configuraciones)
			Get
				Return Me.GetTable(Of Data.Entity.Configuraciones)
			End Get
		End Property
		
		Public ReadOnly Property DiseñosEtiqueta() As System.Data.Linq.Table(Of Data.Entity.DiseñosEtiqueta)
			Get
				Return Me.GetTable(Of Data.Entity.DiseñosEtiqueta)
			End Get
		End Property
		
		Public ReadOnly Property EtiquetasEnHoja() As System.Data.Linq.Table(Of Data.Entity.EtiquetasEnHoja)
			Get
				Return Me.GetTable(Of Data.Entity.EtiquetasEnHoja)
			End Get
		End Property
		
		Public ReadOnly Property EtiquetasEnRollo() As System.Data.Linq.Table(Of Data.Entity.EtiquetasEnRollo)
			Get
				Return Me.GetTable(Of Data.Entity.EtiquetasEnRollo)
			End Get
		End Property
		
		Public ReadOnly Property Puestos() As System.Data.Linq.Table(Of Data.Entity.Puestos)
			Get
				Return Me.GetTable(Of Data.Entity.Puestos)
			End Get
		End Property
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SPInformeCompra")>  _
		Friend Function SPInformeCompra(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fechaINI As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal periodo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(200)")> ByVal nombre As String) As ISingleResult(Of Data.Entity.SPInformeCompraResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fechaINI, periodo, nombre)
			Return CType(result.ReturnValue,ISingleResult(Of Data.Entity.SPInformeCompraResult))
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SPInformeRevolucionPrecio", IsComposable:=true)>  _
		Friend Function SPInformeRevolucionPrecio(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(50)")> ByVal referencia As String) As Object
			Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), referencia).ReturnValue,Object)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SPActualizarCondicionTarjetaFidelizacion")>  _
		Friend Function SPActualizarCondicionTarjetaFidelizacion(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Real")> ByVal base As System.Nullable(Of Single), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Real")> ByVal beneficio As System.Nullable(Of Single), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Real")> ByVal basepunto As System.Nullable(Of Single), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Real")> ByVal equivalenciapunto As System.Nullable(Of Single), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal todo As System.Nullable(Of Boolean)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), base, beneficio, basepunto, equivalenciapunto, todo)
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SPResumenVentaXPuestoUsuario")>  _
		Friend Function SPResumenVentaXPuestoUsuario(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BigInt")> ByVal idEmpresa As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BigInt")> ByVal idPuesto As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BigInt")> ByVal idUsuario As System.Nullable(Of Long), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="DateTime")> ByVal fechaInicio As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByRef numVenta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Float")> ByRef totalVenta As System.Nullable(Of Double)) As Integer
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idEmpresa, idPuesto, idUsuario, fechaInicio, numVenta, totalVenta)
			numVenta = CType(result.GetParameterValue(4),System.Nullable(Of Integer))
			totalVenta = CType(result.GetParameterValue(5),System.Nullable(Of Double))
			Return CType(result.ReturnValue,Integer)
		End Function
		
		<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SPTareasRecientes")>  _
		Friend Function SPTareasRecientes(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal periodo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="BigInt")> ByVal idUsuario As System.Nullable(Of Long)) As ISingleResult(Of Data.Entity.VWTareas)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), periodo, idUsuario)
			Return CType(result.ReturnValue,ISingleResult(Of Data.Entity.VWTareas))
		End Function
	End Class
End Namespace

Namespace Data.Entity
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CodigosBarra"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class CodigosBarra
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCodigo As Long
		
		Private _idProducto As Long
		
		Private _CodigoBarra As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidCodigoChanging(value As Long)
    End Sub
    Partial Private Sub OnidCodigoChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnCodigoBarraChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoBarraChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCodigo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCodigo() As Long
			Get
				Return Me._idCodigo
			End Get
			Set
				If ((Me._idCodigo = value)  _
							= false) Then
					Me.OnidCodigoChanging(value)
					Me.SendPropertyChanging
					Me._idCodigo = value
					Me.SendPropertyChanged("idCodigo")
					Me.OnidCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoBarra", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CodigoBarra() As String
			Get
				Return Me._CodigoBarra
			End Get
			Set
				If (String.Equals(Me._CodigoBarra, value) = false) Then
					Me.OnCodigoBarraChanging(value)
					Me.SendPropertyChanging
					Me._CodigoBarra = value
					Me.SendPropertyChanged("CodigoBarra")
					Me.OnCodigoBarraChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Contactos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Contactos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idContacto As Long
		
		Private _idPropietario As Long
		
		Private _TipoPropietario As Char
		
		Private _idFormaContacto As Short
		
		Private _DatoContacto As String
		
		Private _Observacion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidContactoChanging(value As Long)
    End Sub
    Partial Private Sub OnidContactoChanged()
    End Sub
    Partial Private Sub OnidPropietarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidPropietarioChanged()
    End Sub
    Partial Private Sub OnTipoPropietarioChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoPropietarioChanged()
    End Sub
    Partial Private Sub OnidFormaContactoChanging(value As Short)
    End Sub
    Partial Private Sub OnidFormaContactoChanged()
    End Sub
    Partial Private Sub OnDatoContactoChanging(value As String)
    End Sub
    Partial Private Sub OnDatoContactoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idContacto", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idContacto() As Long
			Get
				Return Me._idContacto
			End Get
			Set
				If ((Me._idContacto = value)  _
							= false) Then
					Me.OnidContactoChanging(value)
					Me.SendPropertyChanging
					Me._idContacto = value
					Me.SendPropertyChanged("idContacto")
					Me.OnidContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPropietario", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPropietario() As Long
			Get
				Return Me._idPropietario
			End Get
			Set
				If ((Me._idPropietario = value)  _
							= false) Then
					Me.OnidPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._idPropietario = value
					Me.SendPropertyChanged("idPropietario")
					Me.OnidPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoPropietario", DbType:="Char(1) NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TipoPropietario() As Char
			Get
				Return Me._TipoPropietario
			End Get
			Set
				If ((Me._TipoPropietario = value)  _
							= false) Then
					Me.OnTipoPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._TipoPropietario = value
					Me.SendPropertyChanged("TipoPropietario")
					Me.OnTipoPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFormaContacto", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idFormaContacto() As Short
			Get
				Return Me._idFormaContacto
			End Get
			Set
				If ((Me._idFormaContacto = value)  _
							= false) Then
					Me.OnidFormaContactoChanging(value)
					Me.SendPropertyChanging
					Me._idFormaContacto = value
					Me.SendPropertyChanged("idFormaContacto")
					Me.OnidFormaContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatoContacto", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DatoContacto() As String
			Get
				Return Me._DatoContacto
			End Get
			Set
				If (String.Equals(Me._DatoContacto, value) = false) Then
					Me.OnDatoContactoChanging(value)
					Me.SendPropertyChanging
					Me._DatoContacto = value
					Me.SendPropertyChanged("DatoContacto")
					Me.OnDatoContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DatosBancario"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class DatosBancario
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCuenta As Long
		
		Private _idPropietario As Long
		
		Private _TipoPropietario As Char
		
		Private _Titular As String
		
		Private _Banco As String
		
		Private _CCC As String
		
		Private _IBAN As String
		
		Private _Switch As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidCuentaChanging(value As Long)
    End Sub
    Partial Private Sub OnidCuentaChanged()
    End Sub
    Partial Private Sub OnidPropietarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidPropietarioChanged()
    End Sub
    Partial Private Sub OnTipoPropietarioChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoPropietarioChanged()
    End Sub
    Partial Private Sub OnTitularChanging(value As String)
    End Sub
    Partial Private Sub OnTitularChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnCCCChanging(value As String)
    End Sub
    Partial Private Sub OnCCCChanged()
    End Sub
    Partial Private Sub OnIBANChanging(value As String)
    End Sub
    Partial Private Sub OnIBANChanged()
    End Sub
    Partial Private Sub OnSwitchChanging(value As String)
    End Sub
    Partial Private Sub OnSwitchChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCuenta", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCuenta() As Long
			Get
				Return Me._idCuenta
			End Get
			Set
				If ((Me._idCuenta = value)  _
							= false) Then
					Me.OnidCuentaChanging(value)
					Me.SendPropertyChanging
					Me._idCuenta = value
					Me.SendPropertyChanged("idCuenta")
					Me.OnidCuentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPropietario", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPropietario() As Long
			Get
				Return Me._idPropietario
			End Get
			Set
				If ((Me._idPropietario = value)  _
							= false) Then
					Me.OnidPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._idPropietario = value
					Me.SendPropertyChanged("idPropietario")
					Me.OnidPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoPropietario", DbType:="Char(1) NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TipoPropietario() As Char
			Get
				Return Me._TipoPropietario
			End Get
			Set
				If ((Me._TipoPropietario = value)  _
							= false) Then
					Me.OnTipoPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._TipoPropietario = value
					Me.SendPropertyChanged("TipoPropietario")
					Me.OnTipoPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titular", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Titular() As String
			Get
				Return Me._Titular
			End Get
			Set
				If (String.Equals(Me._Titular, value) = false) Then
					Me.OnTitularChanging(value)
					Me.SendPropertyChanging
					Me._Titular = value
					Me.SendPropertyChanged("Titular")
					Me.OnTitularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Banco() As String
			Get
				Return Me._Banco
			End Get
			Set
				If (String.Equals(Me._Banco, value) = false) Then
					Me.OnBancoChanging(value)
					Me.SendPropertyChanging
					Me._Banco = value
					Me.SendPropertyChanged("Banco")
					Me.OnBancoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCC", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property CCC() As String
			Get
				Return Me._CCC
			End Get
			Set
				If (String.Equals(Me._CCC, value) = false) Then
					Me.OnCCCChanging(value)
					Me.SendPropertyChanging
					Me._CCC = value
					Me.SendPropertyChanged("CCC")
					Me.OnCCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IBAN", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property IBAN() As String
			Get
				Return Me._IBAN
			End Get
			Set
				If (String.Equals(Me._IBAN, value) = false) Then
					Me.OnIBANChanging(value)
					Me.SendPropertyChanging
					Me._IBAN = value
					Me.SendPropertyChanged("IBAN")
					Me.OnIBANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Switch", DbType:="VarChar(10)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Switch() As String
			Get
				Return Me._Switch
			End Get
			Set
				If (String.Equals(Me._Switch, value) = false) Then
					Me.OnSwitchChanging(value)
					Me.SendPropertyChanging
					Me._Switch = value
					Me.SendPropertyChanged("Switch")
					Me.OnSwitchChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Familias"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Familias
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idFamilia As Long
		
		Private _Familia As String
		
		Private _idFamiliaPadre As System.Nullable(Of Long)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidFamiliaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFamiliaChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As String)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnidFamiliaPadreChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidFamiliaPadreChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFamilia", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idFamilia() As Long
			Get
				Return Me._idFamilia
			End Get
			Set
				If ((Me._idFamilia = value)  _
							= false) Then
					Me.OnidFamiliaChanging(value)
					Me.SendPropertyChanging
					Me._idFamilia = value
					Me.SendPropertyChanged("idFamilia")
					Me.OnidFamiliaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Familia() As String
			Get
				Return Me._Familia
			End Get
			Set
				If (String.Equals(Me._Familia, value) = false) Then
					Me.OnFamiliaChanging(value)
					Me.SendPropertyChanging
					Me._Familia = value
					Me.SendPropertyChanged("Familia")
					Me.OnFamiliaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFamiliaPadre", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idFamiliaPadre() As System.Nullable(Of Long)
			Get
				Return Me._idFamiliaPadre
			End Get
			Set
				If (Me._idFamiliaPadre.Equals(value) = false) Then
					Me.OnidFamiliaPadreChanging(value)
					Me.SendPropertyChanging
					Me._idFamiliaPadre = value
					Me.SendPropertyChanged("idFamiliaPadre")
					Me.OnidFamiliaPadreChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FormasContacto"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class FormasContacto
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idForma As Short
		
		Private _FormaContactoChn As String
		
		Private _FormaContactoEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidFormaChanging(value As Short)
    End Sub
    Partial Private Sub OnidFormaChanged()
    End Sub
    Partial Private Sub OnFormaContactoChnChanging(value As String)
    End Sub
    Partial Private Sub OnFormaContactoChnChanged()
    End Sub
    Partial Private Sub OnFormaContactoEspChanging(value As String)
    End Sub
    Partial Private Sub OnFormaContactoEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idForma", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idForma() As Short
			Get
				Return Me._idForma
			End Get
			Set
				If ((Me._idForma = value)  _
							= false) Then
					Me.OnidFormaChanging(value)
					Me.SendPropertyChanging
					Me._idForma = value
					Me.SendPropertyChanged("idForma")
					Me.OnidFormaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaContactoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property FormaContactoChn() As String
			Get
				Return Me._FormaContactoChn
			End Get
			Set
				If (String.Equals(Me._FormaContactoChn, value) = false) Then
					Me.OnFormaContactoChnChanging(value)
					Me.SendPropertyChanging
					Me._FormaContactoChn = value
					Me.SendPropertyChanged("FormaContactoChn")
					Me.OnFormaContactoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaContactoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FormaContactoEsp() As String
			Get
				Return Me._FormaContactoEsp
			End Get
			Set
				If (String.Equals(Me._FormaContactoEsp, value) = false) Then
					Me.OnFormaContactoEspChanging(value)
					Me.SendPropertyChanging
					Me._FormaContactoEsp = value
					Me.SendPropertyChanged("FormaContactoEsp")
					Me.OnFormaContactoEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Galerias"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Galerias
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idGaleria As Long
		
		Private _idProducto As Long
		
		Private _Tipo As Short
		
		Private _Descripcion As String
		
		Private _Origen As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidGaleriaChanging(value As Long)
    End Sub
    Partial Private Sub OnidGaleriaChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As Short)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnOrigenChanging(value As String)
    End Sub
    Partial Private Sub OnOrigenChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idGaleria", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idGaleria() As Long
			Get
				Return Me._idGaleria
			End Get
			Set
				If ((Me._idGaleria = value)  _
							= false) Then
					Me.OnidGaleriaChanging(value)
					Me.SendPropertyChanging
					Me._idGaleria = value
					Me.SendPropertyChanged("idGaleria")
					Me.OnidGaleriaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Tipo() As Short
			Get
				Return Me._Tipo
			End Get
			Set
				If ((Me._Tipo = value)  _
							= false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Origen", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Origen() As String
			Get
				Return Me._Origen
			End Get
			Set
				If (String.Equals(Me._Origen, value) = false) Then
					Me.OnOrigenChanging(value)
					Me.SendPropertyChanging
					Me._Origen = value
					Me.SendPropertyChanged("Origen")
					Me.OnOrigenChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Impuestos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Impuestos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idImpuesto As Short
		
		Private _Impuesto As Short
		
		Private _RE As Double
		
		Private _PorDefecto As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidImpuestoChanging(value As Short)
    End Sub
    Partial Private Sub OnidImpuestoChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As Short)
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnREChanging(value As Double)
    End Sub
    Partial Private Sub OnREChanged()
    End Sub
    Partial Private Sub OnPorDefectoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPorDefectoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idImpuesto", AutoSync:=AutoSync.OnInsert, DbType:="SmallInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idImpuesto() As Short
			Get
				Return Me._idImpuesto
			End Get
			Set
				If ((Me._idImpuesto = value)  _
							= false) Then
					Me.OnidImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._idImpuesto = value
					Me.SendPropertyChanged("idImpuesto")
					Me.OnidImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Impuesto() As Short
			Get
				Return Me._Impuesto
			End Get
			Set
				If ((Me._Impuesto = value)  _
							= false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RE", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property RE() As Double
			Get
				Return Me._RE
			End Get
			Set
				If ((Me._RE = value)  _
							= false) Then
					Me.OnREChanging(value)
					Me.SendPropertyChanging
					Me._RE = value
					Me.SendPropertyChanged("RE")
					Me.OnREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorDefecto", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property PorDefecto() As Boolean
			Get
				Return Me._PorDefecto
			End Get
			Set
				If ((Me._PorDefecto = value)  _
							= false) Then
					Me.OnPorDefectoChanging(value)
					Me.SendPropertyChanging
					Me._PorDefecto = value
					Me.SendPropertyChanged("PorDefecto")
					Me.OnPorDefectoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ModosPago"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class ModosPago
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idModo As Short
		
		Private _ModoPagoChn As String
		
		Private _ModoPagoEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnModoPagoChnChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoChnChanged()
    End Sub
    Partial Private Sub OnModoPagoEspChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ModoPagoChn() As String
			Get
				Return Me._ModoPagoChn
			End Get
			Set
				If (String.Equals(Me._ModoPagoChn, value) = false) Then
					Me.OnModoPagoChnChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoChn = value
					Me.SendPropertyChanged("ModoPagoChn")
					Me.OnModoPagoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ModoPagoEsp() As String
			Get
				Return Me._ModoPagoEsp
			End Get
			Set
				If (String.Equals(Me._ModoPagoEsp, value) = false) Then
					Me.OnModoPagoEspChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoEsp = value
					Me.SendPropertyChanged("ModoPagoEsp")
					Me.OnModoPagoEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MunicipiosEspañolas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class MunicipiosEspañolas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMunicpio As Long
		
		Private _CodMunicipio As String
		
		Private _CodProvincia As String
		
		Private _Municipio As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMunicpioChanging(value As Long)
    End Sub
    Partial Private Sub OnidMunicpioChanged()
    End Sub
    Partial Private Sub OnCodMunicipioChanging(value As String)
    End Sub
    Partial Private Sub OnCodMunicipioChanged()
    End Sub
    Partial Private Sub OnCodProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnCodProvinciaChanged()
    End Sub
    Partial Private Sub OnMunicipioChanging(value As String)
    End Sub
    Partial Private Sub OnMunicipioChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMunicpio", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMunicpio() As Long
			Get
				Return Me._idMunicpio
			End Get
			Set
				If ((Me._idMunicpio = value)  _
							= false) Then
					Me.OnidMunicpioChanging(value)
					Me.SendPropertyChanging
					Me._idMunicpio = value
					Me.SendPropertyChanged("idMunicpio")
					Me.OnidMunicpioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodMunicipio", DbType:="VarChar(10) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property CodMunicipio() As String
			Get
				Return Me._CodMunicipio
			End Get
			Set
				If (String.Equals(Me._CodMunicipio, value) = false) Then
					Me.OnCodMunicipioChanging(value)
					Me.SendPropertyChanging
					Me._CodMunicipio = value
					Me.SendPropertyChanged("CodMunicipio")
					Me.OnCodMunicipioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodProvincia", DbType:="VarChar(10) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CodProvincia() As String
			Get
				Return Me._CodProvincia
			End Get
			Set
				If (String.Equals(Me._CodProvincia, value) = false) Then
					Me.OnCodProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._CodProvincia = value
					Me.SendPropertyChanged("CodProvincia")
					Me.OnCodProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Municipio", DbType:="VarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Municipio() As String
			Get
				Return Me._Municipio
			End Get
			Set
				If (String.Equals(Me._Municipio, value) = false) Then
					Me.OnMunicipioChanging(value)
					Me.SendPropertyChanging
					Me._Municipio = value
					Me.SendPropertyChanged("Municipio")
					Me.OnMunicipioChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProvinciasEspañolas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class ProvinciasEspañolas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CodProvincia As String
		
		Private _Provincia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnCodProvinciaChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodProvincia", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property CodProvincia() As String
			Get
				Return Me._CodProvincia
			End Get
			Set
				If (String.Equals(Me._CodProvincia, value) = false) Then
					Me.OnCodProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._CodProvincia = value
					Me.SendPropertyChanged("CodProvincia")
					Me.OnCodProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TiposIdentificacion"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class TiposIdentificacion
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTipo As Short
		
		Private _TipoIdentificacionChn As String
		
		Private _TipoIdentificacionEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTipoChanging(value As Short)
    End Sub
    Partial Private Sub OnidTipoChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipo", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Friend Property idTipo() As Short
			Get
				Return Me._idTipo
			End Get
			Set
				If ((Me._idTipo = value)  _
							= false) Then
					Me.OnidTipoChanging(value)
					Me.SendPropertyChanging
					Me._idTipo = value
					Me.SendPropertyChanged("idTipo")
					Me.OnidTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property TipoIdentificacionChn() As String
			Get
				Return Me._TipoIdentificacionChn
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionChn, value) = false) Then
					Me.OnTipoIdentificacionChnChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionChn = value
					Me.SendPropertyChanged("TipoIdentificacionChn")
					Me.OnTipoIdentificacionChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property TipoIdentificacionEsp() As String
			Get
				Return Me._TipoIdentificacionEsp
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionEsp, value) = false) Then
					Me.OnTipoIdentificacionEspChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionEsp = value
					Me.SendPropertyChanged("TipoIdentificacionEsp")
					Me.OnTipoIdentificacionEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ubicaciones"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Ubicaciones
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idUbicacion As Long
		
		Private _Ubicacion As String
		
		Private _Descripcion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidUbicacionChanging(value As Long)
    End Sub
    Partial Private Sub OnidUbicacionChanged()
    End Sub
    Partial Private Sub OnUbicacionChanging(value As String)
    End Sub
    Partial Private Sub OnUbicacionChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUbicacion", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idUbicacion() As Long
			Get
				Return Me._idUbicacion
			End Get
			Set
				If ((Me._idUbicacion = value)  _
							= false) Then
					Me.OnidUbicacionChanging(value)
					Me.SendPropertyChanging
					Me._idUbicacion = value
					Me.SendPropertyChanged("idUbicacion")
					Me.OnidUbicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ubicacion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Ubicacion() As String
			Get
				Return Me._Ubicacion
			End Get
			Set
				If (String.Equals(Me._Ubicacion, value) = false) Then
					Me.OnUbicacionChanging(value)
					Me.SendPropertyChanging
					Me._Ubicacion = value
					Me.SendPropertyChanged("Ubicacion")
					Me.OnUbicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Marcas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Marcas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMarca As Long
		
		Private _Marca As String
		
		Private _CodigoEAN As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMarcaChanging(value As Long)
    End Sub
    Partial Private Sub OnidMarcaChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnCodigoEANChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoEANChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMarca", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMarca() As Long
			Get
				Return Me._idMarca
			End Get
			Set
				If ((Me._idMarca = value)  _
							= false) Then
					Me.OnidMarcaChanging(value)
					Me.SendPropertyChanging
					Me._idMarca = value
					Me.SendPropertyChanged("idMarca")
					Me.OnidMarcaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Marca() As String
			Get
				Return Me._Marca
			End Get
			Set
				If (String.Equals(Me._Marca, value) = false) Then
					Me.OnMarcaChanging(value)
					Me.SendPropertyChanging
					Me._Marca = value
					Me.SendPropertyChanged("Marca")
					Me.OnMarcaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoEAN", DbType:="NVarChar(15)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CodigoEAN() As String
			Get
				Return Me._CodigoEAN
			End Get
			Set
				If (String.Equals(Me._CodigoEAN, value) = false) Then
					Me.OnCodigoEANChanging(value)
					Me.SendPropertyChanging
					Me._CodigoEAN = value
					Me.SendPropertyChanged("CodigoEAN")
					Me.OnCodigoEANChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWDatosBancario"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWDatosBancario
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCuenta As Long
		
		Private _idPropietario As Long
		
		Private _TipoPropietario As Char
		
		Private _Titular As String
		
		Private _Banco As String
		
		Private _CCC As String
		
		Private _IBAN As String
		
		Private _Switch As String
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidCuentaChanging(value As Long)
    End Sub
    Partial Private Sub OnidCuentaChanged()
    End Sub
    Partial Private Sub OnidPropietarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidPropietarioChanged()
    End Sub
    Partial Private Sub OnTipoPropietarioChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoPropietarioChanged()
    End Sub
    Partial Private Sub OnTitularChanging(value As String)
    End Sub
    Partial Private Sub OnTitularChanged()
    End Sub
    Partial Private Sub OnBancoChanging(value As String)
    End Sub
    Partial Private Sub OnBancoChanged()
    End Sub
    Partial Private Sub OnCCCChanging(value As String)
    End Sub
    Partial Private Sub OnCCCChanged()
    End Sub
    Partial Private Sub OnIBANChanging(value As String)
    End Sub
    Partial Private Sub OnIBANChanged()
    End Sub
    Partial Private Sub OnSwitchChanging(value As String)
    End Sub
    Partial Private Sub OnSwitchChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCuenta", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCuenta() As Long
			Get
				Return Me._idCuenta
			End Get
			Set
				If ((Me._idCuenta = value)  _
							= false) Then
					Me.OnidCuentaChanging(value)
					Me.SendPropertyChanging
					Me._idCuenta = value
					Me.SendPropertyChanged("idCuenta")
					Me.OnidCuentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPropietario", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPropietario() As Long
			Get
				Return Me._idPropietario
			End Get
			Set
				If ((Me._idPropietario = value)  _
							= false) Then
					Me.OnidPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._idPropietario = value
					Me.SendPropertyChanged("idPropietario")
					Me.OnidPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoPropietario", DbType:="Char(1) NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TipoPropietario() As Char
			Get
				Return Me._TipoPropietario
			End Get
			Set
				If ((Me._TipoPropietario = value)  _
							= false) Then
					Me.OnTipoPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._TipoPropietario = value
					Me.SendPropertyChanged("TipoPropietario")
					Me.OnTipoPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titular", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Titular() As String
			Get
				Return Me._Titular
			End Get
			Set
				If (String.Equals(Me._Titular, value) = false) Then
					Me.OnTitularChanging(value)
					Me.SendPropertyChanging
					Me._Titular = value
					Me.SendPropertyChanged("Titular")
					Me.OnTitularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Banco", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Banco() As String
			Get
				Return Me._Banco
			End Get
			Set
				If (String.Equals(Me._Banco, value) = false) Then
					Me.OnBancoChanging(value)
					Me.SendPropertyChanging
					Me._Banco = value
					Me.SendPropertyChanged("Banco")
					Me.OnBancoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CCC", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property CCC() As String
			Get
				Return Me._CCC
			End Get
			Set
				If (String.Equals(Me._CCC, value) = false) Then
					Me.OnCCCChanging(value)
					Me.SendPropertyChanging
					Me._CCC = value
					Me.SendPropertyChanged("CCC")
					Me.OnCCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IBAN", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property IBAN() As String
			Get
				Return Me._IBAN
			End Get
			Set
				If (String.Equals(Me._IBAN, value) = false) Then
					Me.OnIBANChanging(value)
					Me.SendPropertyChanging
					Me._IBAN = value
					Me.SendPropertyChanged("IBAN")
					Me.OnIBANChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Switch", DbType:="VarChar(10)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Switch() As String
			Get
				Return Me._Switch
			End Get
			Set
				If (String.Equals(Me._Switch, value) = false) Then
					Me.OnSwitchChanging(value)
					Me.SendPropertyChanging
					Me._Switch = value
					Me.SendPropertyChanged("Switch")
					Me.OnSwitchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWLineasPedido"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWLineasPedido
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idPedido As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Importe As Single
		
		Private _idProveedor As System.Nullable(Of Long)
		
		Private _NumPedido As String
		
		Private _FPedido As Date
		
		Private _Referencia As String
		
		Private _DescripcionProducto As String
		
		Private _Impuesto As System.Nullable(Of Short)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnNumPedidoChanging(value As String)
    End Sub
    Partial Private Sub OnNumPedidoChanged()
    End Sub
    Partial Private Sub OnFPedidoChanging(value As Date)
    End Sub
    Partial Private Sub OnFPedidoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPedido() As Long
			Get
				Return Me._idPedido
			End Get
			Set
				If ((Me._idPedido = value)  _
							= false) Then
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Precio() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idProveedor() As System.Nullable(Of Long)
			Get
				Return Me._idProveedor
			End Get
			Set
				If (Me._idProveedor.Equals(value) = false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumPedido", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NumPedido() As String
			Get
				Return Me._NumPedido
			End Get
			Set
				If (String.Equals(Me._NumPedido, value) = false) Then
					Me.OnNumPedidoChanging(value)
					Me.SendPropertyChanging
					Me._NumPedido = value
					Me.SendPropertyChanged("NumPedido")
					Me.OnNumPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPedido", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property FPedido() As Date
			Get
				Return Me._FPedido
			End Get
			Set
				If ((Me._FPedido = value)  _
							= false) Then
					Me.OnFPedidoChanging(value)
					Me.SendPropertyChanging
					Me._FPedido = value
					Me.SendPropertyChanged("FPedido")
					Me.OnFPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Impuesto() As System.Nullable(Of Short)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWPedidos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWPedidos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idPedido As Long
		
		Private _idProveedor As System.Nullable(Of Long)
		
		Private _NumPedido As String
		
		Private _FPedido As Date
		
		Private _Pago As Single
		
		Private _Pagado As Boolean
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _TotalPedido As System.Nullable(Of Double)
		
		Private _FCreacion As Date
		
		Private _Usuario As String
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnNumPedidoChanging(value As String)
    End Sub
    Partial Private Sub OnNumPedidoChanged()
    End Sub
    Partial Private Sub OnFPedidoChanging(value As Date)
    End Sub
    Partial Private Sub OnFPedidoChanged()
    End Sub
    Partial Private Sub OnPagoChanging(value As Single)
    End Sub
    Partial Private Sub OnPagoChanged()
    End Sub
    Partial Private Sub OnPagadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPagadoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnTotalPedidoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalPedidoChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idPedido() As Long
			Get
				Return Me._idPedido
			End Get
			Set
				If ((Me._idPedido = value)  _
							= false) Then
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProveedor() As System.Nullable(Of Long)
			Get
				Return Me._idProveedor
			End Get
			Set
				If (Me._idProveedor.Equals(value) = false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumPedido", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NumPedido() As String
			Get
				Return Me._NumPedido
			End Get
			Set
				If (String.Equals(Me._NumPedido, value) = false) Then
					Me.OnNumPedidoChanging(value)
					Me.SendPropertyChanging
					Me._NumPedido = value
					Me.SendPropertyChanged("NumPedido")
					Me.OnNumPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPedido", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FPedido() As Date
			Get
				Return Me._FPedido
			End Get
			Set
				If ((Me._FPedido = value)  _
							= false) Then
					Me.OnFPedidoChanging(value)
					Me.SendPropertyChanging
					Me._FPedido = value
					Me.SendPropertyChanged("FPedido")
					Me.OnFPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pago", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Pago() As Single
			Get
				Return Me._Pago
			End Get
			Set
				If ((Me._Pago = value)  _
							= false) Then
					Me.OnPagoChanging(value)
					Me.SendPropertyChanging
					Me._Pago = value
					Me.SendPropertyChanged("Pago")
					Me.OnPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagado", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Pagado() As Boolean
			Get
				Return Me._Pagado
			End Get
			Set
				If ((Me._Pagado = value)  _
							= false) Then
					Me.OnPagadoChanging(value)
					Me.SendPropertyChanging
					Me._Pagado = value
					Me.SendPropertyChanged("Pagado")
					Me.OnPagadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPedido", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property TotalPedido() As System.Nullable(Of Double)
			Get
				Return Me._TotalPedido
			End Get
			Set
				If (Me._TotalPedido.Equals(value) = false) Then
					Me.OnTotalPedidoChanging(value)
					Me.SendPropertyChanging
					Me._TotalPedido = value
					Me.SendPropertyChanged("TotalPedido")
					Me.OnTotalPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWContactos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWContactos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idContacto As Long
		
		Private _idPropietario As Long
		
		Private _TipoPropietario As Char
		
		Private _idFormaContacto As Short
		
		Private _DatoContacto As String
		
		Private _Observacion As String
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _FormaContactoChn As String
		
		Private _FormaContactoEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidContactoChanging(value As Long)
    End Sub
    Partial Private Sub OnidContactoChanged()
    End Sub
    Partial Private Sub OnidPropietarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidPropietarioChanged()
    End Sub
    Partial Private Sub OnTipoPropietarioChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoPropietarioChanged()
    End Sub
    Partial Private Sub OnidFormaContactoChanging(value As Short)
    End Sub
    Partial Private Sub OnidFormaContactoChanged()
    End Sub
    Partial Private Sub OnDatoContactoChanging(value As String)
    End Sub
    Partial Private Sub OnDatoContactoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnFormaContactoChnChanging(value As String)
    End Sub
    Partial Private Sub OnFormaContactoChnChanged()
    End Sub
    Partial Private Sub OnFormaContactoEspChanging(value As String)
    End Sub
    Partial Private Sub OnFormaContactoEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idContacto", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idContacto() As Long
			Get
				Return Me._idContacto
			End Get
			Set
				If ((Me._idContacto = value)  _
							= false) Then
					Me.OnidContactoChanging(value)
					Me.SendPropertyChanging
					Me._idContacto = value
					Me.SendPropertyChanged("idContacto")
					Me.OnidContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPropietario", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPropietario() As Long
			Get
				Return Me._idPropietario
			End Get
			Set
				If ((Me._idPropietario = value)  _
							= false) Then
					Me.OnidPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._idPropietario = value
					Me.SendPropertyChanged("idPropietario")
					Me.OnidPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoPropietario", DbType:="Char(1) NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TipoPropietario() As Char
			Get
				Return Me._TipoPropietario
			End Get
			Set
				If ((Me._TipoPropietario = value)  _
							= false) Then
					Me.OnTipoPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._TipoPropietario = value
					Me.SendPropertyChanged("TipoPropietario")
					Me.OnTipoPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFormaContacto", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idFormaContacto() As Short
			Get
				Return Me._idFormaContacto
			End Get
			Set
				If ((Me._idFormaContacto = value)  _
							= false) Then
					Me.OnidFormaContactoChanging(value)
					Me.SendPropertyChanging
					Me._idFormaContacto = value
					Me.SendPropertyChanged("idFormaContacto")
					Me.OnidFormaContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatoContacto", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DatoContacto() As String
			Get
				Return Me._DatoContacto
			End Get
			Set
				If (String.Equals(Me._DatoContacto, value) = false) Then
					Me.OnDatoContactoChanging(value)
					Me.SendPropertyChanging
					Me._DatoContacto = value
					Me.SendPropertyChanged("DatoContacto")
					Me.OnDatoContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaContactoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property FormaContactoChn() As String
			Get
				Return Me._FormaContactoChn
			End Get
			Set
				If (String.Equals(Me._FormaContactoChn, value) = false) Then
					Me.OnFormaContactoChnChanging(value)
					Me.SendPropertyChanging
					Me._FormaContactoChn = value
					Me.SendPropertyChanged("FormaContactoChn")
					Me.OnFormaContactoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaContactoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property FormaContactoEsp() As String
			Get
				Return Me._FormaContactoEsp
			End Get
			Set
				If (String.Equals(Me._FormaContactoEsp, value) = false) Then
					Me.OnFormaContactoEspChanging(value)
					Me.SendPropertyChanging
					Me._FormaContactoEsp = value
					Me.SendPropertyChanged("FormaContactoEsp")
					Me.OnFormaContactoEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWProveedores"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWProveedores
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idProveedor As Long
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _Identificacion As String
		
		Private _idTipo As System.Nullable(Of Short)
		
		Private _NombreContacto As String
		
		Private _Direccion As String
		
		Private _CodigoPostal As String
		
		Private _Localidad As String
		
		Private _Provincia As String
		
		Private _Pais As String
		
		Private _Observacion As String
		
		Private _FCreacion As Date
		
		Private _TipoIdentificacionChn As String
		
		Private _TipoIdentificacionEsp As String
		
		Private _Pendiente As System.Nullable(Of Double)
		
		Private _Activo As Boolean
		
		Private _Email As String
		
		Private _Movil As String
		
		Private _Fax As String
		
		Private _Telefono As String
		
		Private _FModificacion As System.Nullable(Of Date)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As Long)
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionChanged()
    End Sub
    Partial Private Sub OnidTipoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidTipoChanged()
    End Sub
    Partial Private Sub OnNombreContactoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreContactoChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCodigoPostalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoPostalChanged()
    End Sub
    Partial Private Sub OnLocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnLocalidadChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanged()
    End Sub
    Partial Private Sub OnPendienteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPendienteChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As String)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idProveedor() As Long
			Get
				Return Me._idProveedor
			End Get
			Set
				If ((Me._idProveedor = value)  _
							= false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identificacion", DbType:="VarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Identificacion() As String
			Get
				Return Me._Identificacion
			End Get
			Set
				If (String.Equals(Me._Identificacion, value) = false) Then
					Me.OnIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._Identificacion = value
					Me.SendPropertyChanged("Identificacion")
					Me.OnIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipo", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idTipo() As System.Nullable(Of Short)
			Get
				Return Me._idTipo
			End Get
			Set
				If (Me._idTipo.Equals(value) = false) Then
					Me.OnidTipoChanging(value)
					Me.SendPropertyChanging
					Me._idTipo = value
					Me.SendPropertyChanged("idTipo")
					Me.OnidTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreContacto", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property NombreContacto() As String
			Get
				Return Me._NombreContacto
			End Get
			Set
				If (String.Equals(Me._NombreContacto, value) = false) Then
					Me.OnNombreContactoChanging(value)
					Me.SendPropertyChanging
					Me._NombreContacto = value
					Me.SendPropertyChanged("NombreContacto")
					Me.OnNombreContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoPostal", DbType:="VarChar(20)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property CodigoPostal() As String
			Get
				Return Me._CodigoPostal
			End Get
			Set
				If (String.Equals(Me._CodigoPostal, value) = false) Then
					Me.OnCodigoPostalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoPostal = value
					Me.SendPropertyChanged("CodigoPostal")
					Me.OnCodigoPostalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Localidad", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Localidad() As String
			Get
				Return Me._Localidad
			End Get
			Set
				If (String.Equals(Me._Localidad, value) = false) Then
					Me.OnLocalidadChanging(value)
					Me.SendPropertyChanging
					Me._Localidad = value
					Me.SendPropertyChanged("Localidad")
					Me.OnLocalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Pais() As String
			Get
				Return Me._Pais
			End Get
			Set
				If (String.Equals(Me._Pais, value) = false) Then
					Me.OnPaisChanging(value)
					Me.SendPropertyChanging
					Me._Pais = value
					Me.SendPropertyChanged("Pais")
					Me.OnPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionChn", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
		Friend Property TipoIdentificacionChn() As String
			Get
				Return Me._TipoIdentificacionChn
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionChn, value) = false) Then
					Me.OnTipoIdentificacionChnChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionChn = value
					Me.SendPropertyChanged("TipoIdentificacionChn")
					Me.OnTipoIdentificacionChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionEsp", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
		Friend Property TipoIdentificacionEsp() As String
			Get
				Return Me._TipoIdentificacionEsp
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionEsp, value) = false) Then
					Me.OnTipoIdentificacionEspChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionEsp = value
					Me.SendPropertyChanged("TipoIdentificacionEsp")
					Me.OnTipoIdentificacionEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pendiente", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Pendiente() As System.Nullable(Of Double)
			Get
				Return Me._Pendiente
			End Get
			Set
				If (Me._Pendiente.Equals(value) = false) Then
					Me.OnPendienteChanging(value)
					Me.SendPropertyChanging
					Me._Pendiente = value
					Me.SendPropertyChanged("Pendiente")
					Me.OnPendienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Movil() As String
			Get
				Return Me._Movil
			End Get
			Set
				If (String.Equals(Me._Movil, value) = false) Then
					Me.OnMovilChanging(value)
					Me.SendPropertyChanging
					Me._Movil = value
					Me.SendPropertyChanged("Movil")
					Me.OnMovilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Empresas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Empresas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idEmpresa As Long
		
		Private _Empresa As String
		
		Private _NIF As String
		
		Private _Direccion As String
		
		Private _Localidad As String
		
		Private _Provincia As String
		
		Private _CodigoPostal As String
		
		Private _Telefono As String
		
		Private _Movil As String
		
		Private _Fax As String
		
		Private _Email As String
		
		Private _Web As String
		
		Private _Logo As System.Data.Linq.Binary
		
		Private _NombreComercial As String
		
		Private _CuentaBanco As String
		
		Private _Series As String
		
		Private _Activo As Boolean
		
		Private _FormatoNumeracion As String
		
		Private _Configuraciones As EntitySet(Of Configuraciones)
		
		Private serializing As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnEmpresaChanging(value As String)
    End Sub
    Partial Private Sub OnEmpresaChanged()
    End Sub
    Partial Private Sub OnNIFChanging(value As String)
    End Sub
    Partial Private Sub OnNIFChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnLocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnLocalidadChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    Partial Private Sub OnCodigoPostalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoPostalChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As String)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnWebChanging(value As String)
    End Sub
    Partial Private Sub OnWebChanged()
    End Sub
    Partial Private Sub OnLogoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLogoChanged()
    End Sub
    Partial Private Sub OnNombreComercialChanging(value As String)
    End Sub
    Partial Private Sub OnNombreComercialChanged()
    End Sub
    Partial Private Sub OnCuentaBancoChanging(value As String)
    End Sub
    Partial Private Sub OnCuentaBancoChanged()
    End Sub
    Partial Private Sub OnSeriesChanging(value As String)
    End Sub
    Partial Private Sub OnSeriesChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnFormatoNumeracionChanging(value As String)
    End Sub
    Partial Private Sub OnFormatoNumeracionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Empresa", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Empresa() As String
			Get
				Return Me._Empresa
			End Get
			Set
				If (String.Equals(Me._Empresa, value) = false) Then
					Me.OnEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._Empresa = value
					Me.SendPropertyChanged("Empresa")
					Me.OnEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIF", DbType:="VarChar(20) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NIF() As String
			Get
				Return Me._NIF
			End Get
			Set
				If (String.Equals(Me._NIF, value) = false) Then
					Me.OnNIFChanging(value)
					Me.SendPropertyChanging
					Me._NIF = value
					Me.SendPropertyChanged("NIF")
					Me.OnNIFChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Localidad", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Localidad() As String
			Get
				Return Me._Localidad
			End Get
			Set
				If (String.Equals(Me._Localidad, value) = false) Then
					Me.OnLocalidadChanging(value)
					Me.SendPropertyChanging
					Me._Localidad = value
					Me.SendPropertyChanged("Localidad")
					Me.OnLocalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoPostal", DbType:="VarChar(10)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property CodigoPostal() As String
			Get
				Return Me._CodigoPostal
			End Get
			Set
				If (String.Equals(Me._CodigoPostal, value) = false) Then
					Me.OnCodigoPostalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoPostal = value
					Me.SendPropertyChanged("CodigoPostal")
					Me.OnCodigoPostalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Movil() As String
			Get
				Return Me._Movil
			End Get
			Set
				If (String.Equals(Me._Movil, value) = false) Then
					Me.OnMovilChanging(value)
					Me.SendPropertyChanging
					Me._Movil = value
					Me.SendPropertyChanged("Movil")
					Me.OnMovilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Web", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Web() As String
			Get
				Return Me._Web
			End Get
			Set
				If (String.Equals(Me._Web, value) = false) Then
					Me.OnWebChanging(value)
					Me.SendPropertyChanging
					Me._Web = value
					Me.SendPropertyChanged("Web")
					Me.OnWebChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logo", DbType:="Image", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Logo() As System.Data.Linq.Binary
			Get
				Return Me._Logo
			End Get
			Set
				If (Object.Equals(Me._Logo, value) = false) Then
					Me.OnLogoChanging(value)
					Me.SendPropertyChanging
					Me._Logo = value
					Me.SendPropertyChanged("Logo")
					Me.OnLogoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreComercial", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property NombreComercial() As String
			Get
				Return Me._NombreComercial
			End Get
			Set
				If (String.Equals(Me._NombreComercial, value) = false) Then
					Me.OnNombreComercialChanging(value)
					Me.SendPropertyChanging
					Me._NombreComercial = value
					Me.SendPropertyChanged("NombreComercial")
					Me.OnNombreComercialChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CuentaBanco", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property CuentaBanco() As String
			Get
				Return Me._CuentaBanco
			End Get
			Set
				If (String.Equals(Me._CuentaBanco, value) = false) Then
					Me.OnCuentaBancoChanging(value)
					Me.SendPropertyChanging
					Me._CuentaBanco = value
					Me.SendPropertyChanged("CuentaBanco")
					Me.OnCuentaBancoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Series", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Series() As String
			Get
				Return Me._Series
			End Get
			Set
				If (String.Equals(Me._Series, value) = false) Then
					Me.OnSeriesChanging(value)
					Me.SendPropertyChanging
					Me._Series = value
					Me.SendPropertyChanged("Series")
					Me.OnSeriesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormatoNumeracion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property FormatoNumeracion() As String
			Get
				Return Me._FormatoNumeracion
			End Get
			Set
				If (String.Equals(Me._FormatoNumeracion, value) = false) Then
					Me.OnFormatoNumeracionChanging(value)
					Me.SendPropertyChanging
					Me._FormatoNumeracion = value
					Me.SendPropertyChanged("FormatoNumeracion")
					Me.OnFormatoNumeracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Empresas_Configuraciones", Storage:="_Configuraciones", ThisKey:="idEmpresa", OtherKey:="idEmpresa"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19, EmitDefaultValue:=false)>  _
		Public Property Configuraciones() As EntitySet(Of Configuraciones)
			Get
				If (Me.serializing  _
							AndAlso (Me._Configuraciones.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Configuraciones
			End Get
			Set
				Me._Configuraciones.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Configuraciones(ByVal entity As Configuraciones)
			Me.SendPropertyChanging
			entity.Empresa = Me
		End Sub
		
		Private Sub detach_Configuraciones(ByVal entity As Configuraciones)
			Me.SendPropertyChanging
			entity.Empresa = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Configuraciones = New EntitySet(Of Configuraciones)(AddressOf Me.attach_Configuraciones, AddressOf Me.detach_Configuraciones)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UnidadesMedida"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class UnidadesMedida
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idUnidadMedida As Long
		
		Private _Medida As String
		
		Private _Abreviatura As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidUnidadMedidaChanging(value As Long)
    End Sub
    Partial Private Sub OnidUnidadMedidaChanged()
    End Sub
    Partial Private Sub OnMedidaChanging(value As String)
    End Sub
    Partial Private Sub OnMedidaChanged()
    End Sub
    Partial Private Sub OnAbreviaturaChanging(value As String)
    End Sub
    Partial Private Sub OnAbreviaturaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUnidadMedida", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idUnidadMedida() As Long
			Get
				Return Me._idUnidadMedida
			End Get
			Set
				If ((Me._idUnidadMedida = value)  _
							= false) Then
					Me.OnidUnidadMedidaChanging(value)
					Me.SendPropertyChanging
					Me._idUnidadMedida = value
					Me.SendPropertyChanged("idUnidadMedida")
					Me.OnidUnidadMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medida", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Medida() As String
			Get
				Return Me._Medida
			End Get
			Set
				If (String.Equals(Me._Medida, value) = false) Then
					Me.OnMedidaChanging(value)
					Me.SendPropertyChanging
					Me._Medida = value
					Me.SendPropertyChanged("Medida")
					Me.OnMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abreviatura", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Abreviatura() As String
			Get
				Return Me._Abreviatura
			End Get
			Set
				If (String.Equals(Me._Abreviatura, value) = false) Then
					Me.OnAbreviaturaChanging(value)
					Me.SendPropertyChanging
					Me._Abreviatura = value
					Me.SendPropertyChanged("Abreviatura")
					Me.OnAbreviaturaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Facturas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Facturas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idFactura As Long
		
		Private _idCliente As Long
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
		Private _idEmpresa As Long
		
		Private _NumFactura As String
		
		Private _FFactura As Date
		
		Private _SerieFactura As String
		
		Private _NumeracionFactura As Long
		
		Private _FCreacion As Date
		
		Private _LineasImpuestoFactura As EntitySet(Of LineasImpuestoFactura)
		
		Private _LineasFactura As EntitySet(Of LineasFactura)
		
		Private serializing As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnNumFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnNumFacturaChanged()
    End Sub
    Partial Private Sub OnFFacturaChanging(value As Date)
    End Sub
    Partial Private Sub OnFFacturaChanged()
    End Sub
    Partial Private Sub OnSerieFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnSerieFacturaChanged()
    End Sub
    Partial Private Sub OnNumeracionFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeracionFacturaChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idFactura() As Long
			Get
				Return Me._idFactura
			End Get
			Set
				If ((Me._idFactura = value)  _
							= false) Then
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumFactura", AutoSync:=AutoSync.OnInsert, DbType:="VarChar(50)", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property NumFactura() As String
			Get
				Return Me._NumFactura
			End Get
			Set
				If (String.Equals(Me._NumFactura, value) = false) Then
					Me.OnNumFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumFactura = value
					Me.SendPropertyChanged("NumFactura")
					Me.OnNumFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFactura", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FFactura() As Date
			Get
				Return Me._FFactura
			End Get
			Set
				If ((Me._FFactura = value)  _
							= false) Then
					Me.OnFFacturaChanging(value)
					Me.SendPropertyChanging
					Me._FFactura = value
					Me.SendPropertyChanged("FFactura")
					Me.OnFFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieFactura", DbType:="VarChar(5) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property SerieFactura() As String
			Get
				Return Me._SerieFactura
			End Get
			Set
				If (String.Equals(Me._SerieFactura, value) = false) Then
					Me.OnSerieFacturaChanging(value)
					Me.SendPropertyChanging
					Me._SerieFactura = value
					Me.SendPropertyChanged("SerieFactura")
					Me.OnSerieFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeracionFactura", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL")>  _
		Protected Friend Property NumeracionFactura() As Long
			Get
				Return Me._NumeracionFactura
			End Get
			Set
				If ((Me._NumeracionFactura = value)  _
							= false) Then
					Me.OnNumeracionFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumeracionFactura = value
					Me.SendPropertyChanged("NumeracionFactura")
					Me.OnNumeracionFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", AutoSync:=AutoSync.OnInsert, DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Facturas_LineasImpuestoFactura", Storage:="_LineasImpuestoFactura", ThisKey:="idFactura", OtherKey:="idFactura"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9, EmitDefaultValue:=false)>  _
		Public Property LineasImpuestoFactura() As EntitySet(Of LineasImpuestoFactura)
			Get
				If (Me.serializing  _
							AndAlso (Me._LineasImpuestoFactura.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._LineasImpuestoFactura
			End Get
			Set
				Me._LineasImpuestoFactura.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Facturas_LineasFactura", Storage:="_LineasFactura", ThisKey:="idFactura", OtherKey:="idFactura"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10, EmitDefaultValue:=false)>  _
		Public Property LineasFactura() As EntitySet(Of LineasFactura)
			Get
				If (Me.serializing  _
							AndAlso (Me._LineasFactura.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._LineasFactura
			End Get
			Set
				Me._LineasFactura.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_LineasImpuestoFactura(ByVal entity As LineasImpuestoFactura)
			Me.SendPropertyChanging
			entity.Factura = Me
		End Sub
		
		Private Sub detach_LineasImpuestoFactura(ByVal entity As LineasImpuestoFactura)
			Me.SendPropertyChanging
			entity.Factura = Nothing
		End Sub
		
		Private Sub attach_LineasFactura(ByVal entity As LineasFactura)
			Me.SendPropertyChanging
			entity.Factura = Me
		End Sub
		
		Private Sub detach_LineasFactura(ByVal entity As LineasFactura)
			Me.SendPropertyChanging
			entity.Factura = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._LineasImpuestoFactura = New EntitySet(Of LineasImpuestoFactura)(AddressOf Me.attach_LineasImpuestoFactura, AddressOf Me.detach_LineasImpuestoFactura)
			Me._LineasFactura = New EntitySet(Of LineasFactura)(AddressOf Me.attach_LineasFactura, AddressOf Me.detach_LineasFactura)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWLineasAlbaran"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWLineasAlbaran
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idAlbaran As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _Referencia As String
		
		Private _DescripcionProducto As String
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Descuento As Single
		
		Private _Importe As System.Nullable(Of Single)
		
		Private _Descripcion As String
		
		Private _DescripcionCN As String
		
		Private _idCliente As System.Nullable(Of Long)
		
		Private _NumAlbaran As String
		
		Private _FAlbaran As Date
		
		Private _NumFactura As String
		
		Private _FFactura As System.Nullable(Of Date)
		
		Private _Impuesto As System.Nullable(Of Single)
		
		Private _RE As System.Nullable(Of Single)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Single)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnDescripcionCNChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionCNChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnNumAlbaranChanged()
    End Sub
    Partial Private Sub OnFAlbaranChanging(value As Date)
    End Sub
    Partial Private Sub OnFAlbaranChanged()
    End Sub
    Partial Private Sub OnNumFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnNumFacturaChanged()
    End Sub
    Partial Private Sub OnFFacturaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFFacturaChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnREChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnREChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idAlbaran() As Long
			Get
				Return Me._idAlbaran
			End Get
			Set
				If ((Me._idAlbaran = value)  _
							= false) Then
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Precio() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Descuento() As Single
			Get
				Return Me._Descuento
			End Get
			Set
				If ((Me._Descuento = value)  _
							= false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Importe() As System.Nullable(Of Single)
			Get
				Return Me._Importe
			End Get
			Set
				If (Me._Importe.Equals(value) = false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionCN", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property DescripcionCN() As String
			Get
				Return Me._DescripcionCN
			End Get
			Set
				If (String.Equals(Me._DescripcionCN, value) = false) Then
					Me.OnDescripcionCNChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionCN = value
					Me.SendPropertyChanged("DescripcionCN")
					Me.OnDescripcionCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property idCliente() As System.Nullable(Of Long)
			Get
				Return Me._idCliente
			End Get
			Set
				If (Me._idCliente.Equals(value) = false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumAlbaran", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property NumAlbaran() As String
			Get
				Return Me._NumAlbaran
			End Get
			Set
				If (String.Equals(Me._NumAlbaran, value) = false) Then
					Me.OnNumAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumAlbaran = value
					Me.SendPropertyChanged("NumAlbaran")
					Me.OnNumAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAlbaran", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property FAlbaran() As Date
			Get
				Return Me._FAlbaran
			End Get
			Set
				If ((Me._FAlbaran = value)  _
							= false) Then
					Me.OnFAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._FAlbaran = value
					Me.SendPropertyChanged("FAlbaran")
					Me.OnFAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumFactura", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property NumFactura() As String
			Get
				Return Me._NumFactura
			End Get
			Set
				If (String.Equals(Me._NumFactura, value) = false) Then
					Me.OnNumFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumFactura = value
					Me.SendPropertyChanged("NumFactura")
					Me.OnNumFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFactura", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property FFactura() As System.Nullable(Of Date)
			Get
				Return Me._FFactura
			End Get
			Set
				If (Me._FFactura.Equals(value) = false) Then
					Me.OnFFacturaChanging(value)
					Me.SendPropertyChanging
					Me._FFactura = value
					Me.SendPropertyChanged("FFactura")
					Me.OnFFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Impuesto() As System.Nullable(Of Single)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RE", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property RE() As System.Nullable(Of Single)
			Get
				Return Me._RE
			End Get
			Set
				If (Me._RE.Equals(value) = false) Then
					Me.OnREChanging(value)
					Me.SendPropertyChanging
					Me._RE = value
					Me.SendPropertyChanged("RE")
					Me.OnREChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWLineasFactura"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWLineasFactura
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idFactura As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _Referencia As String
		
		Private _DescripcionProducto As String
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Descuento As Single
		
		Private _Impuesto As System.Nullable(Of Single)
		
		Private _RE As System.Nullable(Of Single)
		
		Private _Importe As System.Nullable(Of Single)
		
		Private _idCliente As Long
		
		Private _NumFactura As String
		
		Private _FFactura As System.Nullable(Of Date)
		
		Private _Descripcion As String
		
		Private _DescripcionCN As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Single)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnREChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnREChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnNumFacturaChanged()
    End Sub
    Partial Private Sub OnFFacturaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFFacturaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnDescripcionCNChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionCNChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idFactura() As Long
			Get
				Return Me._idFactura
			End Get
			Set
				If ((Me._idFactura = value)  _
							= false) Then
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Precio() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("Precio")
					Me.OnPrecioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Descuento() As Single
			Get
				Return Me._Descuento
			End Get
			Set
				If ((Me._Descuento = value)  _
							= false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Impuesto() As System.Nullable(Of Single)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RE", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property RE() As System.Nullable(Of Single)
			Get
				Return Me._RE
			End Get
			Set
				If (Me._RE.Equals(value) = false) Then
					Me.OnREChanging(value)
					Me.SendPropertyChanging
					Me._RE = value
					Me.SendPropertyChanged("RE")
					Me.OnREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Importe() As System.Nullable(Of Single)
			Get
				Return Me._Importe
			End Get
			Set
				If (Me._Importe.Equals(value) = false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumFactura", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property NumFactura() As String
			Get
				Return Me._NumFactura
			End Get
			Set
				If (String.Equals(Me._NumFactura, value) = false) Then
					Me.OnNumFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumFactura = value
					Me.SendPropertyChanged("NumFactura")
					Me.OnNumFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFactura", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property FFactura() As System.Nullable(Of Date)
			Get
				Return Me._FFactura
			End Get
			Set
				If (Me._FFactura.Equals(value) = false) Then
					Me.OnFFacturaChanging(value)
					Me.SendPropertyChanging
					Me._FFactura = value
					Me.SendPropertyChanged("FFactura")
					Me.OnFFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionCN", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property DescripcionCN() As String
			Get
				Return Me._DescripcionCN
			End Get
			Set
				If (String.Equals(Me._DescripcionCN, value) = false) Then
					Me.OnDescripcionCNChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionCN = value
					Me.SendPropertyChanged("DescripcionCN")
					Me.OnDescripcionCNChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWFacturas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWFacturas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idFactura As Long
		
		Private _idCliente As Long
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
		Private _idEmpresa As Long
		
		Private _NumFactura As String
		
		Private _FFactura As System.Nullable(Of Date)
		
		Private _SerieFactura As String
		
		Private _NumeracionFactura As Long
		
		Private _FCreacion As Date
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _Usuario As String
		
		Private _TotalFactura As System.Nullable(Of Double)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnNumFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnNumFacturaChanged()
    End Sub
    Partial Private Sub OnFFacturaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFFacturaChanged()
    End Sub
    Partial Private Sub OnSerieFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnSerieFacturaChanged()
    End Sub
    Partial Private Sub OnNumeracionFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeracionFacturaChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnTotalFacturaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalFacturaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idFactura() As Long
			Get
				Return Me._idFactura
			End Get
			Set
				If ((Me._idFactura = value)  _
							= false) Then
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumFactura", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property NumFactura() As String
			Get
				Return Me._NumFactura
			End Get
			Set
				If (String.Equals(Me._NumFactura, value) = false) Then
					Me.OnNumFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumFactura = value
					Me.SendPropertyChanged("NumFactura")
					Me.OnNumFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFactura", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FFactura() As System.Nullable(Of Date)
			Get
				Return Me._FFactura
			End Get
			Set
				If (Me._FFactura.Equals(value) = false) Then
					Me.OnFFacturaChanging(value)
					Me.SendPropertyChanging
					Me._FFactura = value
					Me.SendPropertyChanged("FFactura")
					Me.OnFFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieFactura", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property SerieFactura() As String
			Get
				Return Me._SerieFactura
			End Get
			Set
				If (String.Equals(Me._SerieFactura, value) = false) Then
					Me.OnSerieFacturaChanging(value)
					Me.SendPropertyChanging
					Me._SerieFactura = value
					Me.SendPropertyChanged("SerieFactura")
					Me.OnSerieFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeracionFactura", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NumeracionFactura() As Long
			Get
				Return Me._NumeracionFactura
			End Get
			Set
				If ((Me._NumeracionFactura = value)  _
							= false) Then
					Me.OnNumeracionFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumeracionFactura = value
					Me.SendPropertyChanged("NumeracionFactura")
					Me.OnNumeracionFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalFactura", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property TotalFactura() As System.Nullable(Of Double)
			Get
				Return Me._TotalFactura
			End Get
			Set
				If (Me._TotalFactura.Equals(value) = false) Then
					Me.OnTotalFacturaChanging(value)
					Me.SendPropertyChanging
					Me._TotalFactura = value
					Me.SendPropertyChanged("TotalFactura")
					Me.OnTotalFacturaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ofertas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Ofertas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idOferta As Long
		
		Private _NumeroOferta As String
		
		Private _FInicio As Date
		
		Private _FFinalizacion As Date
		
		Private _FCreacion As Date
		
		Private _Activo As Boolean
		
		Private _Descripcion As String
		
		Private _Forma As Integer
		
		Private _Vigente As System.Nullable(Of Boolean)
		
		Private _Valor1 As Double
		
		Private _Valor2 As Double
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidOfertaChanging(value As Long)
    End Sub
    Partial Private Sub OnidOfertaChanged()
    End Sub
    Partial Private Sub OnNumeroOfertaChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroOfertaChanged()
    End Sub
    Partial Private Sub OnFInicioChanging(value As Date)
    End Sub
    Partial Private Sub OnFInicioChanged()
    End Sub
    Partial Private Sub OnFFinalizacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFFinalizacionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnFormaChanging(value As Integer)
    End Sub
    Partial Private Sub OnFormaChanged()
    End Sub
    Partial Private Sub OnVigenteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnVigenteChanged()
    End Sub
    Partial Private Sub OnValor1Changing(value As Double)
    End Sub
    Partial Private Sub OnValor1Changed()
    End Sub
    Partial Private Sub OnValor2Changing(value As Double)
    End Sub
    Partial Private Sub OnValor2Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idOferta", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idOferta() As Long
			Get
				Return Me._idOferta
			End Get
			Set
				If ((Me._idOferta = value)  _
							= false) Then
					Me.OnidOfertaChanging(value)
					Me.SendPropertyChanging
					Me._idOferta = value
					Me.SendPropertyChanged("idOferta")
					Me.OnidOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroOferta", AutoSync:=AutoSync.OnInsert, DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property NumeroOferta() As String
			Get
				Return Me._NumeroOferta
			End Get
			Set
				If (String.Equals(Me._NumeroOferta, value) = false) Then
					Me.OnNumeroOfertaChanging(value)
					Me.SendPropertyChanging
					Me._NumeroOferta = value
					Me.SendPropertyChanged("NumeroOferta")
					Me.OnNumeroOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FInicio", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FInicio() As Date
			Get
				Return Me._FInicio
			End Get
			Set
				If ((Me._FInicio = value)  _
							= false) Then
					Me.OnFInicioChanging(value)
					Me.SendPropertyChanging
					Me._FInicio = value
					Me.SendPropertyChanged("FInicio")
					Me.OnFInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFinalizacion", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FFinalizacion() As Date
			Get
				Return Me._FFinalizacion
			End Get
			Set
				If ((Me._FFinalizacion = value)  _
							= false) Then
					Me.OnFFinalizacionChanging(value)
					Me.SendPropertyChanging
					Me._FFinalizacion = value
					Me.SendPropertyChanged("FFinalizacion")
					Me.OnFFinalizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", AutoSync:=AutoSync.OnInsert, DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Forma", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Forma() As Integer
			Get
				Return Me._Forma
			End Get
			Set
				If ((Me._Forma = value)  _
							= false) Then
					Me.OnFormaChanging(value)
					Me.SendPropertyChanging
					Me._Forma = value
					Me.SendPropertyChanged("Forma")
					Me.OnFormaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vigente", AutoSync:=AutoSync.Always, DbType:="Bit", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Vigente() As System.Nullable(Of Boolean)
			Get
				Return Me._Vigente
			End Get
			Set
				If (Me._Vigente.Equals(value) = false) Then
					Me.OnVigenteChanging(value)
					Me.SendPropertyChanging
					Me._Vigente = value
					Me.SendPropertyChanged("Vigente")
					Me.OnVigenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor1", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Valor1() As Double
			Get
				Return Me._Valor1
			End Get
			Set
				If ((Me._Valor1 = value)  _
							= false) Then
					Me.OnValor1Changing(value)
					Me.SendPropertyChanging
					Me._Valor1 = value
					Me.SendPropertyChanged("Valor1")
					Me.OnValor1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor2", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Valor2() As Double
			Get
				Return Me._Valor2
			End Get
			Set
				If ((Me._Valor2 = value)  _
							= false) Then
					Me.OnValor2Changing(value)
					Me.SendPropertyChanging
					Me._Valor2 = value
					Me.SendPropertyChanged("Valor2")
					Me.OnValor2Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWAlbaranes"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWAlbaranes
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idAlbaran As Long
		
		Private _idCliente As System.Nullable(Of Long)
		
		Private _NumAlbaran As String
		
		Private _FAlbaran As Date
		
		Private _Pendiente As Single
		
		Private _Cobrado As Boolean
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _TotalAlbaran As System.Nullable(Of Double)
		
		Private _idModo As Short
		
		Private _ModoPagoChn As String
		
		Private _ModoPagoEsp As String
		
		Private _FCreacion As Date
		
		Private _Usuario As String
		
		Private _Puesto As String
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
		Private _idPuestoEmitido As Long
		
		Private _SerieAlbaran As String
		
		Private _NumeracionAlbaran As Long
		
		Private _idEmpresa As Long
		
		Private _Contable As Boolean
		
		Private _idFactura As System.Nullable(Of Long)
		
		Private _NumFactura As String
		
		Private _FFactura As System.Nullable(Of Date)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnNumAlbaranChanged()
    End Sub
    Partial Private Sub OnFAlbaranChanging(value As Date)
    End Sub
    Partial Private Sub OnFAlbaranChanged()
    End Sub
    Partial Private Sub OnPendienteChanging(value As Single)
    End Sub
    Partial Private Sub OnPendienteChanged()
    End Sub
    Partial Private Sub OnCobradoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCobradoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnTotalAlbaranChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalAlbaranChanged()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnModoPagoChnChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoChnChanged()
    End Sub
    Partial Private Sub OnModoPagoEspChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoEspChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    Partial Private Sub OnidPuestoEmitidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoEmitidoChanged()
    End Sub
    Partial Private Sub OnSerieAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnSerieAlbaranChanged()
    End Sub
    Partial Private Sub OnNumeracionAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeracionAlbaranChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnContableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnContableChanged()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnNumFacturaChanging(value As String)
    End Sub
    Partial Private Sub OnNumFacturaChanged()
    End Sub
    Partial Private Sub OnFFacturaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFFacturaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idAlbaran() As Long
			Get
				Return Me._idAlbaran
			End Get
			Set
				If ((Me._idAlbaran = value)  _
							= false) Then
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As System.Nullable(Of Long)
			Get
				Return Me._idCliente
			End Get
			Set
				If (Me._idCliente.Equals(value) = false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumAlbaran", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NumAlbaran() As String
			Get
				Return Me._NumAlbaran
			End Get
			Set
				If (String.Equals(Me._NumAlbaran, value) = false) Then
					Me.OnNumAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumAlbaran = value
					Me.SendPropertyChanged("NumAlbaran")
					Me.OnNumAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAlbaran", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FAlbaran() As Date
			Get
				Return Me._FAlbaran
			End Get
			Set
				If ((Me._FAlbaran = value)  _
							= false) Then
					Me.OnFAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._FAlbaran = value
					Me.SendPropertyChanged("FAlbaran")
					Me.OnFAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pendiente", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Pendiente() As Single
			Get
				Return Me._Pendiente
			End Get
			Set
				If ((Me._Pendiente = value)  _
							= false) Then
					Me.OnPendienteChanging(value)
					Me.SendPropertyChanging
					Me._Pendiente = value
					Me.SendPropertyChanged("Pendiente")
					Me.OnPendienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cobrado", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Cobrado() As Boolean
			Get
				Return Me._Cobrado
			End Get
			Set
				If ((Me._Cobrado = value)  _
							= false) Then
					Me.OnCobradoChanging(value)
					Me.SendPropertyChanging
					Me._Cobrado = value
					Me.SendPropertyChanged("Cobrado")
					Me.OnCobradoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalAlbaran", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property TotalAlbaran() As System.Nullable(Of Double)
			Get
				Return Me._TotalAlbaran
			End Get
			Set
				If (Me._TotalAlbaran.Equals(value) = false) Then
					Me.OnTotalAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._TotalAlbaran = value
					Me.SendPropertyChanged("TotalAlbaran")
					Me.OnTotalAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property ModoPagoChn() As String
			Get
				Return Me._ModoPagoChn
			End Get
			Set
				If (String.Equals(Me._ModoPagoChn, value) = false) Then
					Me.OnModoPagoChnChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoChn = value
					Me.SendPropertyChanged("ModoPagoChn")
					Me.OnModoPagoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property ModoPagoEsp() As String
			Get
				Return Me._ModoPagoEsp
			End Get
			Set
				If (String.Equals(Me._ModoPagoEsp, value) = false) Then
					Me.OnModoPagoEspChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoEsp = value
					Me.SendPropertyChanged("ModoPagoEsp")
					Me.OnModoPagoEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Usuario() As String
			Get
				Return Me._Usuario
			End Get
			Set
				If (String.Equals(Me._Usuario, value) = false) Then
					Me.OnUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._Usuario = value
					Me.SendPropertyChanged("Usuario")
					Me.OnUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuestoEmitido", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property idPuestoEmitido() As Long
			Get
				Return Me._idPuestoEmitido
			End Get
			Set
				If ((Me._idPuestoEmitido = value)  _
							= false) Then
					Me.OnidPuestoEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idPuestoEmitido = value
					Me.SendPropertyChanged("idPuestoEmitido")
					Me.OnidPuestoEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieAlbaran", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property SerieAlbaran() As String
			Get
				Return Me._SerieAlbaran
			End Get
			Set
				If (String.Equals(Me._SerieAlbaran, value) = false) Then
					Me.OnSerieAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._SerieAlbaran = value
					Me.SendPropertyChanged("SerieAlbaran")
					Me.OnSerieAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeracionAlbaran", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property NumeracionAlbaran() As Long
			Get
				Return Me._NumeracionAlbaran
			End Get
			Set
				If ((Me._NumeracionAlbaran = value)  _
							= false) Then
					Me.OnNumeracionAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumeracionAlbaran = value
					Me.SendPropertyChanged("NumeracionAlbaran")
					Me.OnNumeracionAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contable", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property Contable() As Boolean
			Get
				Return Me._Contable
			End Get
			Set
				If ((Me._Contable = value)  _
							= false) Then
					Me.OnContableChanging(value)
					Me.SendPropertyChanging
					Me._Contable = value
					Me.SendPropertyChanged("Contable")
					Me.OnContableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property idFactura() As System.Nullable(Of Long)
			Get
				Return Me._idFactura
			End Get
			Set
				If (Me._idFactura.Equals(value) = false) Then
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumFactura", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property NumFactura() As String
			Get
				Return Me._NumFactura
			End Get
			Set
				If (String.Equals(Me._NumFactura, value) = false) Then
					Me.OnNumFacturaChanging(value)
					Me.SendPropertyChanging
					Me._NumFactura = value
					Me.SendPropertyChanged("NumFactura")
					Me.OnNumFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FFactura", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property FFactura() As System.Nullable(Of Date)
			Get
				Return Me._FFactura
			End Get
			Set
				If (Me._FFactura.Equals(value) = false) Then
					Me.OnFFacturaChanging(value)
					Me.SendPropertyChanging
					Me._FFactura = value
					Me.SendPropertyChanged("FFactura")
					Me.OnFFacturaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Albaranes"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Albaranes
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idAlbaran As Long
		
		Private _idCliente As System.Nullable(Of Long)
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
		Private _idPuestoEmitido As Long
		
		Private _idModo As Short
		
		Private _idEmpresa As Long
		
		Private _idFactura As System.Nullable(Of Long)
		
		Private _NumAlbaran As String
		
		Private _FAlbaran As Date
		
		Private _Pendiente As Single
		
		Private _Cobrado As Boolean
		
		Private _SerieAlbaran As String
		
		Private _NumeracionAlbaran As Long
		
		Private _FCreacion As Date
		
		Private _Contable As Boolean
		
		Private _LineasImpuestoAlbaran As EntitySet(Of LineasImpuestoAlbaran)
		
		Private _LineasAlbaran As EntitySet(Of LineasAlbaran)
		
		Private serializing As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    Partial Private Sub OnidPuestoEmitidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoEmitidoChanged()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnNumAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnNumAlbaranChanged()
    End Sub
    Partial Private Sub OnFAlbaranChanging(value As Date)
    End Sub
    Partial Private Sub OnFAlbaranChanged()
    End Sub
    Partial Private Sub OnPendienteChanging(value As Single)
    End Sub
    Partial Private Sub OnPendienteChanged()
    End Sub
    Partial Private Sub OnCobradoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCobradoChanged()
    End Sub
    Partial Private Sub OnSerieAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnSerieAlbaranChanged()
    End Sub
    Partial Private Sub OnNumeracionAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeracionAlbaranChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnContableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnContableChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idAlbaran() As Long
			Get
				Return Me._idAlbaran
			End Get
			Set
				If ((Me._idAlbaran = value)  _
							= false) Then
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As System.Nullable(Of Long)
			Get
				Return Me._idCliente
			End Get
			Set
				If (Me._idCliente.Equals(value) = false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuestoEmitido", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idPuestoEmitido() As Long
			Get
				Return Me._idPuestoEmitido
			End Get
			Set
				If ((Me._idPuestoEmitido = value)  _
							= false) Then
					Me.OnidPuestoEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idPuestoEmitido = value
					Me.SendPropertyChanged("idPuestoEmitido")
					Me.OnidPuestoEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idFactura() As System.Nullable(Of Long)
			Get
				Return Me._idFactura
			End Get
			Set
				If (Me._idFactura.Equals(value) = false) Then
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumAlbaran", AutoSync:=AutoSync.OnInsert, DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property NumAlbaran() As String
			Get
				Return Me._NumAlbaran
			End Get
			Set
				If (String.Equals(Me._NumAlbaran, value) = false) Then
					Me.OnNumAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumAlbaran = value
					Me.SendPropertyChanged("NumAlbaran")
					Me.OnNumAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAlbaran", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property FAlbaran() As Date
			Get
				Return Me._FAlbaran
			End Get
			Set
				If ((Me._FAlbaran = value)  _
							= false) Then
					Me.OnFAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._FAlbaran = value
					Me.SendPropertyChanged("FAlbaran")
					Me.OnFAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pendiente", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Pendiente() As Single
			Get
				Return Me._Pendiente
			End Get
			Set
				If ((Me._Pendiente = value)  _
							= false) Then
					Me.OnPendienteChanging(value)
					Me.SendPropertyChanging
					Me._Pendiente = value
					Me.SendPropertyChanged("Pendiente")
					Me.OnPendienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cobrado", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Cobrado() As Boolean
			Get
				Return Me._Cobrado
			End Get
			Set
				If ((Me._Cobrado = value)  _
							= false) Then
					Me.OnCobradoChanging(value)
					Me.SendPropertyChanging
					Me._Cobrado = value
					Me.SendPropertyChanged("Cobrado")
					Me.OnCobradoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieAlbaran", DbType:="VarChar(5) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property SerieAlbaran() As String
			Get
				Return Me._SerieAlbaran
			End Get
			Set
				If (String.Equals(Me._SerieAlbaran, value) = false) Then
					Me.OnSerieAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._SerieAlbaran = value
					Me.SendPropertyChanged("SerieAlbaran")
					Me.OnSerieAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeracionAlbaran", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL")>  _
		Protected Friend Property NumeracionAlbaran() As Long
			Get
				Return Me._NumeracionAlbaran
			End Get
			Set
				If ((Me._NumeracionAlbaran = value)  _
							= false) Then
					Me.OnNumeracionAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumeracionAlbaran = value
					Me.SendPropertyChanged("NumeracionAlbaran")
					Me.OnNumeracionAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", AutoSync:=AutoSync.OnInsert, DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contable", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Contable() As Boolean
			Get
				Return Me._Contable
			End Get
			Set
				If ((Me._Contable = value)  _
							= false) Then
					Me.OnContableChanging(value)
					Me.SendPropertyChanging
					Me._Contable = value
					Me.SendPropertyChanged("Contable")
					Me.OnContableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Albaranes_LineasImpuestoAlbaran", Storage:="_LineasImpuestoAlbaran", ThisKey:="idAlbaran", OtherKey:="idAlbaran"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15, EmitDefaultValue:=false)>  _
		Public Property LineasImpuestoAlbaran() As EntitySet(Of LineasImpuestoAlbaran)
			Get
				If (Me.serializing  _
							AndAlso (Me._LineasImpuestoAlbaran.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._LineasImpuestoAlbaran
			End Get
			Set
				Me._LineasImpuestoAlbaran.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Albaranes_LineasAlbaran", Storage:="_LineasAlbaran", ThisKey:="idAlbaran", OtherKey:="idAlbaran"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16, EmitDefaultValue:=false)>  _
		Public Property LineasAlbaran() As EntitySet(Of LineasAlbaran)
			Get
				If (Me.serializing  _
							AndAlso (Me._LineasAlbaran.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._LineasAlbaran
			End Get
			Set
				Me._LineasAlbaran.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_LineasImpuestoAlbaran(ByVal entity As LineasImpuestoAlbaran)
			Me.SendPropertyChanging
			entity.Albaran = Me
		End Sub
		
		Private Sub detach_LineasImpuestoAlbaran(ByVal entity As LineasImpuestoAlbaran)
			Me.SendPropertyChanging
			entity.Albaran = Nothing
		End Sub
		
		Private Sub attach_LineasAlbaran(ByVal entity As LineasAlbaran)
			Me.SendPropertyChanging
			entity.Albaran = Me
		End Sub
		
		Private Sub detach_LineasAlbaran(ByVal entity As LineasAlbaran)
			Me.SendPropertyChanging
			entity.Albaran = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._LineasImpuestoAlbaran = New EntitySet(Of LineasImpuestoAlbaran)(AddressOf Me.attach_LineasImpuestoAlbaran, AddressOf Me.detach_LineasImpuestoAlbaran)
			Me._LineasAlbaran = New EntitySet(Of LineasAlbaran)(AddressOf Me.attach_LineasAlbaran, AddressOf Me.detach_LineasAlbaran)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CaracteristicasProducto"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class CaracteristicasProducto
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCaracteristica As Long
		
		Private _idProducto As Long
		
		Private _Caracteristica As String
		
		Private _Valor As String
		
		Private _Tipo As Short
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidCaracteristicaChanging(value As Long)
    End Sub
    Partial Private Sub OnidCaracteristicaChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnCaracteristicaChanging(value As String)
    End Sub
    Partial Private Sub OnCaracteristicaChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As Short)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCaracteristica", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCaracteristica() As Long
			Get
				Return Me._idCaracteristica
			End Get
			Set
				If ((Me._idCaracteristica = value)  _
							= false) Then
					Me.OnidCaracteristicaChanging(value)
					Me.SendPropertyChanging
					Me._idCaracteristica = value
					Me.SendPropertyChanged("idCaracteristica")
					Me.OnidCaracteristicaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Caracteristica", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Caracteristica() As String
			Get
				Return Me._Caracteristica
			End Get
			Set
				If (String.Equals(Me._Caracteristica, value) = false) Then
					Me.OnCaracteristicaChanging(value)
					Me.SendPropertyChanging
					Me._Caracteristica = value
					Me.SendPropertyChanged("Caracteristica")
					Me.OnCaracteristicaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Tipo() As Short
			Get
				Return Me._Tipo
			End Get
			Set
				If ((Me._Tipo = value)  _
							= false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MovimientosTarjeta"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class MovimientosTarjeta
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMovimiento As Long
		
		Private _idTarjeta As Long
		
		Private _FMovimiento As Date
		
		Private _Saldo As Single
		
		Private _Descripcion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMovimientoChanging(value As Long)
    End Sub
    Partial Private Sub OnidMovimientoChanged()
    End Sub
    Partial Private Sub OnidTarjetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidTarjetaChanged()
    End Sub
    Partial Private Sub OnFMovimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnFMovimientoChanged()
    End Sub
    Partial Private Sub OnSaldoChanging(value As Single)
    End Sub
    Partial Private Sub OnSaldoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMovimiento", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMovimiento() As Long
			Get
				Return Me._idMovimiento
			End Get
			Set
				If ((Me._idMovimiento = value)  _
							= false) Then
					Me.OnidMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._idMovimiento = value
					Me.SendPropertyChanged("idMovimiento")
					Me.OnidMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTarjeta", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idTarjeta() As Long
			Get
				Return Me._idTarjeta
			End Get
			Set
				If ((Me._idTarjeta = value)  _
							= false) Then
					Me.OnidTarjetaChanging(value)
					Me.SendPropertyChanging
					Me._idTarjeta = value
					Me.SendPropertyChanged("idTarjeta")
					Me.OnidTarjetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FMovimiento", AutoSync:=AutoSync.OnInsert, DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FMovimiento() As Date
			Get
				Return Me._FMovimiento
			End Get
			Set
				If ((Me._FMovimiento = value)  _
							= false) Then
					Me.OnFMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._FMovimiento = value
					Me.SendPropertyChanged("FMovimiento")
					Me.OnFMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Saldo() As Single
			Get
				Return Me._Saldo
			End Get
			Set
				If ((Me._Saldo = value)  _
							= false) Then
					Me.OnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._Saldo = value
					Me.SendPropertyChanged("Saldo")
					Me.OnSaldoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWProductos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWProductos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idProducto As Long
		
		Private _Referencia As String
		
		Private _Descripcion As String
		
		Private _DescripcionLarga As String
		
		Private _PrecioVenta As Single
		
		Private _UnidadVenta As Single
		
		Private _UltimoPrecioEntrada As System.Nullable(Of Single)
		
		Private _UltimoProveedor As String
		
		Private _Coste As Single
		
		Private _Descuento As System.Nullable(Of Single)
		
		Private _UnidadXCaja As System.Nullable(Of Single)
		
		Private _StockSuelto As System.Nullable(Of Single)
		
		Private _StockCaja As System.Nullable(Of Single)
		
		Private _Activo As Boolean
		
		Private _ControlStock As Boolean
		
		Private _PrecioVariable As Boolean
		
		Private _Familia As String
		
		Private _Ubicacion As String
		
		Private _Marca As String
		
		Private _Observacion As String
		
		Private _idUnidadMedida As System.Nullable(Of Long)
		
		Private _idFamilia As System.Nullable(Of Long)
		
		Private _idMarca As System.Nullable(Of Long)
		
		Private _idUbicacion As System.Nullable(Of Long)
		
		Private _FModificacion As System.Nullable(Of Date)
		
		Private _FCreacion As Date
		
		Private _Medida As String
		
		Private _Abreviatura As String
		
		Private _FormaOferta As System.Nullable(Of Integer)
		
		Private _OfertaVigente As System.Nullable(Of Boolean)
		
		Private _idOferta As System.Nullable(Of Long)
		
		Private _OfertaFormula1 As System.Nullable(Of Double)
		
		Private _OfertaFormula2 As System.Nullable(Of Double)
		
		Private _Impuesto As System.Nullable(Of Short)
		
		Private _RE As System.Nullable(Of Double)
		
		Private _PrecioImpInc As Boolean
		
		Private _Fidelizable As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnDescripcionLargaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionLargaChanged()
    End Sub
    Partial Private Sub OnPrecioVentaChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioVentaChanged()
    End Sub
    Partial Private Sub OnUnidadVentaChanging(value As Single)
    End Sub
    Partial Private Sub OnUnidadVentaChanged()
    End Sub
    Partial Private Sub OnUltimoPrecioEntradaChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnUltimoPrecioEntradaChanged()
    End Sub
    Partial Private Sub OnUltimoProveedorChanging(value As String)
    End Sub
    Partial Private Sub OnUltimoProveedorChanged()
    End Sub
    Partial Private Sub OnCosteChanging(value As Single)
    End Sub
    Partial Private Sub OnCosteChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnUnidadXCajaChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnUnidadXCajaChanged()
    End Sub
    Partial Private Sub OnStockSueltoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnStockSueltoChanged()
    End Sub
    Partial Private Sub OnStockCajaChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnStockCajaChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnControlStockChanging(value As Boolean)
    End Sub
    Partial Private Sub OnControlStockChanged()
    End Sub
    Partial Private Sub OnPrecioVariableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrecioVariableChanged()
    End Sub
    Partial Private Sub OnFamiliaChanging(value As String)
    End Sub
    Partial Private Sub OnFamiliaChanged()
    End Sub
    Partial Private Sub OnUbicacionChanging(value As String)
    End Sub
    Partial Private Sub OnUbicacionChanged()
    End Sub
    Partial Private Sub OnMarcaChanging(value As String)
    End Sub
    Partial Private Sub OnMarcaChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnidUnidadMedidaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUnidadMedidaChanged()
    End Sub
    Partial Private Sub OnidFamiliaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidFamiliaChanged()
    End Sub
    Partial Private Sub OnidMarcaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidMarcaChanged()
    End Sub
    Partial Private Sub OnidUbicacionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUbicacionChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnMedidaChanging(value As String)
    End Sub
    Partial Private Sub OnMedidaChanged()
    End Sub
    Partial Private Sub OnAbreviaturaChanging(value As String)
    End Sub
    Partial Private Sub OnAbreviaturaChanged()
    End Sub
    Partial Private Sub OnFormaOfertaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFormaOfertaChanged()
    End Sub
    Partial Private Sub OnOfertaVigenteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOfertaVigenteChanged()
    End Sub
    Partial Private Sub OnidOfertaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidOfertaChanged()
    End Sub
    Partial Private Sub OnOfertaFormula1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOfertaFormula1Changed()
    End Sub
    Partial Private Sub OnOfertaFormula2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOfertaFormula2Changed()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnREChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnREChanged()
    End Sub
    Partial Private Sub OnPrecioImpIncChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrecioImpIncChanged()
    End Sub
    Partial Private Sub OnFidelizableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFidelizableChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionLarga", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property DescripcionLarga() As String
			Get
				Return Me._DescripcionLarga
			End Get
			Set
				If (String.Equals(Me._DescripcionLarga, value) = false) Then
					Me.OnDescripcionLargaChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionLarga = value
					Me.SendPropertyChanged("DescripcionLarga")
					Me.OnDescripcionLargaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioVenta", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property PrecioVenta() As Single
			Get
				Return Me._PrecioVenta
			End Get
			Set
				If ((Me._PrecioVenta = value)  _
							= false) Then
					Me.OnPrecioVentaChanging(value)
					Me.SendPropertyChanging
					Me._PrecioVenta = value
					Me.SendPropertyChanged("PrecioVenta")
					Me.OnPrecioVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadVenta", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property UnidadVenta() As Single
			Get
				Return Me._UnidadVenta
			End Get
			Set
				If ((Me._UnidadVenta = value)  _
							= false) Then
					Me.OnUnidadVentaChanging(value)
					Me.SendPropertyChanging
					Me._UnidadVenta = value
					Me.SendPropertyChanged("UnidadVenta")
					Me.OnUnidadVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UltimoPrecioEntrada", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property UltimoPrecioEntrada() As System.Nullable(Of Single)
			Get
				Return Me._UltimoPrecioEntrada
			End Get
			Set
				If (Me._UltimoPrecioEntrada.Equals(value) = false) Then
					Me.OnUltimoPrecioEntradaChanging(value)
					Me.SendPropertyChanging
					Me._UltimoPrecioEntrada = value
					Me.SendPropertyChanged("UltimoPrecioEntrada")
					Me.OnUltimoPrecioEntradaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UltimoProveedor", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property UltimoProveedor() As String
			Get
				Return Me._UltimoProveedor
			End Get
			Set
				If (String.Equals(Me._UltimoProveedor, value) = false) Then
					Me.OnUltimoProveedorChanging(value)
					Me.SendPropertyChanging
					Me._UltimoProveedor = value
					Me.SendPropertyChanged("UltimoProveedor")
					Me.OnUltimoProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coste", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Coste() As Single
			Get
				Return Me._Coste
			End Get
			Set
				If ((Me._Coste = value)  _
							= false) Then
					Me.OnCosteChanging(value)
					Me.SendPropertyChanging
					Me._Coste = value
					Me.SendPropertyChanged("Coste")
					Me.OnCosteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Descuento() As System.Nullable(Of Single)
			Get
				Return Me._Descuento
			End Get
			Set
				If (Me._Descuento.Equals(value) = false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadXCaja", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property UnidadXCaja() As System.Nullable(Of Single)
			Get
				Return Me._UnidadXCaja
			End Get
			Set
				If (Me._UnidadXCaja.Equals(value) = false) Then
					Me.OnUnidadXCajaChanging(value)
					Me.SendPropertyChanging
					Me._UnidadXCaja = value
					Me.SendPropertyChanged("UnidadXCaja")
					Me.OnUnidadXCajaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockSuelto", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property StockSuelto() As System.Nullable(Of Single)
			Get
				Return Me._StockSuelto
			End Get
			Set
				If (Me._StockSuelto.Equals(value) = false) Then
					Me.OnStockSueltoChanging(value)
					Me.SendPropertyChanging
					Me._StockSuelto = value
					Me.SendPropertyChanged("StockSuelto")
					Me.OnStockSueltoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockCaja", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property StockCaja() As System.Nullable(Of Single)
			Get
				Return Me._StockCaja
			End Get
			Set
				If (Me._StockCaja.Equals(value) = false) Then
					Me.OnStockCajaChanging(value)
					Me.SendPropertyChanging
					Me._StockCaja = value
					Me.SendPropertyChanged("StockCaja")
					Me.OnStockCajaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlStock", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property ControlStock() As Boolean
			Get
				Return Me._ControlStock
			End Get
			Set
				If ((Me._ControlStock = value)  _
							= false) Then
					Me.OnControlStockChanging(value)
					Me.SendPropertyChanging
					Me._ControlStock = value
					Me.SendPropertyChanged("ControlStock")
					Me.OnControlStockChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioVariable", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property PrecioVariable() As Boolean
			Get
				Return Me._PrecioVariable
			End Get
			Set
				If ((Me._PrecioVariable = value)  _
							= false) Then
					Me.OnPrecioVariableChanging(value)
					Me.SendPropertyChanging
					Me._PrecioVariable = value
					Me.SendPropertyChanged("PrecioVariable")
					Me.OnPrecioVariableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Familia", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Familia() As String
			Get
				Return Me._Familia
			End Get
			Set
				If (String.Equals(Me._Familia, value) = false) Then
					Me.OnFamiliaChanging(value)
					Me.SendPropertyChanging
					Me._Familia = value
					Me.SendPropertyChanged("Familia")
					Me.OnFamiliaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ubicacion", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property Ubicacion() As String
			Get
				Return Me._Ubicacion
			End Get
			Set
				If (String.Equals(Me._Ubicacion, value) = false) Then
					Me.OnUbicacionChanging(value)
					Me.SendPropertyChanging
					Me._Ubicacion = value
					Me.SendPropertyChanged("Ubicacion")
					Me.OnUbicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Marca", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Marca() As String
			Get
				Return Me._Marca
			End Get
			Set
				If (String.Equals(Me._Marca, value) = false) Then
					Me.OnMarcaChanging(value)
					Me.SendPropertyChanging
					Me._Marca = value
					Me.SendPropertyChanged("Marca")
					Me.OnMarcaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUnidadMedida", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property idUnidadMedida() As System.Nullable(Of Long)
			Get
				Return Me._idUnidadMedida
			End Get
			Set
				If (Me._idUnidadMedida.Equals(value) = false) Then
					Me.OnidUnidadMedidaChanging(value)
					Me.SendPropertyChanging
					Me._idUnidadMedida = value
					Me.SendPropertyChanged("idUnidadMedida")
					Me.OnidUnidadMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFamilia", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property idFamilia() As System.Nullable(Of Long)
			Get
				Return Me._idFamilia
			End Get
			Set
				If (Me._idFamilia.Equals(value) = false) Then
					Me.OnidFamiliaChanging(value)
					Me.SendPropertyChanging
					Me._idFamilia = value
					Me.SendPropertyChanged("idFamilia")
					Me.OnidFamiliaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMarca", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property idMarca() As System.Nullable(Of Long)
			Get
				Return Me._idMarca
			End Get
			Set
				If (Me._idMarca.Equals(value) = false) Then
					Me.OnidMarcaChanging(value)
					Me.SendPropertyChanging
					Me._idMarca = value
					Me.SendPropertyChanged("idMarca")
					Me.OnidMarcaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUbicacion", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property idUbicacion() As System.Nullable(Of Long)
			Get
				Return Me._idUbicacion
			End Get
			Set
				If (Me._idUbicacion.Equals(value) = false) Then
					Me.OnidUbicacionChanging(value)
					Me.SendPropertyChanging
					Me._idUbicacion = value
					Me.SendPropertyChanged("idUbicacion")
					Me.OnidUbicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medida", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
		Public Property Medida() As String
			Get
				Return Me._Medida
			End Get
			Set
				If (String.Equals(Me._Medida, value) = false) Then
					Me.OnMedidaChanging(value)
					Me.SendPropertyChanging
					Me._Medida = value
					Me.SendPropertyChanged("Medida")
					Me.OnMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abreviatura", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
		Public Property Abreviatura() As String
			Get
				Return Me._Abreviatura
			End Get
			Set
				If (String.Equals(Me._Abreviatura, value) = false) Then
					Me.OnAbreviaturaChanging(value)
					Me.SendPropertyChanging
					Me._Abreviatura = value
					Me.SendPropertyChanged("Abreviatura")
					Me.OnAbreviaturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FormaOferta", DbType:="Int", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
		Public Property FormaOferta() As System.Nullable(Of Integer)
			Get
				Return Me._FormaOferta
			End Get
			Set
				If (Me._FormaOferta.Equals(value) = false) Then
					Me.OnFormaOfertaChanging(value)
					Me.SendPropertyChanging
					Me._FormaOferta = value
					Me.SendPropertyChanged("FormaOferta")
					Me.OnFormaOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfertaVigente", DbType:="Bit", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=30)>  _
		Public Property OfertaVigente() As System.Nullable(Of Boolean)
			Get
				Return Me._OfertaVigente
			End Get
			Set
				If (Me._OfertaVigente.Equals(value) = false) Then
					Me.OnOfertaVigenteChanging(value)
					Me.SendPropertyChanging
					Me._OfertaVigente = value
					Me.SendPropertyChanged("OfertaVigente")
					Me.OnOfertaVigenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idOferta", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=31)>  _
		Public Property idOferta() As System.Nullable(Of Long)
			Get
				Return Me._idOferta
			End Get
			Set
				If (Me._idOferta.Equals(value) = false) Then
					Me.OnidOfertaChanging(value)
					Me.SendPropertyChanging
					Me._idOferta = value
					Me.SendPropertyChanged("idOferta")
					Me.OnidOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfertaFormula1", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=32)>  _
		Public Property OfertaFormula1() As System.Nullable(Of Double)
			Get
				Return Me._OfertaFormula1
			End Get
			Set
				If (Me._OfertaFormula1.Equals(value) = false) Then
					Me.OnOfertaFormula1Changing(value)
					Me.SendPropertyChanging
					Me._OfertaFormula1 = value
					Me.SendPropertyChanged("OfertaFormula1")
					Me.OnOfertaFormula1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OfertaFormula2", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=33)>  _
		Public Property OfertaFormula2() As System.Nullable(Of Double)
			Get
				Return Me._OfertaFormula2
			End Get
			Set
				If (Me._OfertaFormula2.Equals(value) = false) Then
					Me.OnOfertaFormula2Changing(value)
					Me.SendPropertyChanging
					Me._OfertaFormula2 = value
					Me.SendPropertyChanged("OfertaFormula2")
					Me.OnOfertaFormula2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=34)>  _
		Public Property Impuesto() As System.Nullable(Of Short)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RE", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=35)>  _
		Public Property RE() As System.Nullable(Of Double)
			Get
				Return Me._RE
			End Get
			Set
				If (Me._RE.Equals(value) = false) Then
					Me.OnREChanging(value)
					Me.SendPropertyChanging
					Me._RE = value
					Me.SendPropertyChanged("RE")
					Me.OnREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioImpInc", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=36)>  _
		Public Property PrecioImpInc() As Boolean
			Get
				Return Me._PrecioImpInc
			End Get
			Set
				If ((Me._PrecioImpInc = value)  _
							= false) Then
					Me.OnPrecioImpIncChanging(value)
					Me.SendPropertyChanging
					Me._PrecioImpInc = value
					Me.SendPropertyChanged("PrecioImpInc")
					Me.OnPrecioImpIncChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fidelizable", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=37)>  _
		Public Property Fidelizable() As Boolean
			Get
				Return Me._Fidelizable
			End Get
			Set
				If ((Me._Fidelizable = value)  _
							= false) Then
					Me.OnFidelizableChanging(value)
					Me.SendPropertyChanging
					Me._Fidelizable = value
					Me.SendPropertyChanged("Fidelizable")
					Me.OnFidelizableChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TarjetasFidelizacion"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class TarjetasFidelizacion
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTarjeta As Long
		
		Private _idCliente As Long
		
		Private _NumeroTarjeta As String
		
		Private _EnSaldo As Boolean
		
		Private _Base As Single
		
		Private _Beneficio As Single
		
		Private _BasePunto As Single
		
		Private _EquivalenciaPunto As Single
		
		Private _FCreacion As Date
		
		Private _Saldo As Single
		
		Private _CondicionParticular As Boolean
		
		Private _Activo As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTarjetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidTarjetaChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumeroTarjetaChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroTarjetaChanged()
    End Sub
    Partial Private Sub OnEnSaldoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnSaldoChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Single)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBeneficioChanging(value As Single)
    End Sub
    Partial Private Sub OnBeneficioChanged()
    End Sub
    Partial Private Sub OnBasePuntoChanging(value As Single)
    End Sub
    Partial Private Sub OnBasePuntoChanged()
    End Sub
    Partial Private Sub OnEquivalenciaPuntoChanging(value As Single)
    End Sub
    Partial Private Sub OnEquivalenciaPuntoChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnSaldoChanging(value As Single)
    End Sub
    Partial Private Sub OnSaldoChanged()
    End Sub
    Partial Private Sub OnCondicionParticularChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCondicionParticularChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTarjeta", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idTarjeta() As Long
			Get
				Return Me._idTarjeta
			End Get
			Set
				If ((Me._idTarjeta = value)  _
							= false) Then
					Me.OnidTarjetaChanging(value)
					Me.SendPropertyChanging
					Me._idTarjeta = value
					Me.SendPropertyChanged("idTarjeta")
					Me.OnidTarjetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroTarjeta", DbType:="VarChar(20) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NumeroTarjeta() As String
			Get
				Return Me._NumeroTarjeta
			End Get
			Set
				If (String.Equals(Me._NumeroTarjeta, value) = false) Then
					Me.OnNumeroTarjetaChanging(value)
					Me.SendPropertyChanging
					Me._NumeroTarjeta = value
					Me.SendPropertyChanged("NumeroTarjeta")
					Me.OnNumeroTarjetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnSaldo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property EnSaldo() As Boolean
			Get
				Return Me._EnSaldo
			End Get
			Set
				If ((Me._EnSaldo = value)  _
							= false) Then
					Me.OnEnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._EnSaldo = value
					Me.SendPropertyChanged("EnSaldo")
					Me.OnEnSaldoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Base() As Single
			Get
				Return Me._Base
			End Get
			Set
				If ((Me._Base = value)  _
							= false) Then
					Me.OnBaseChanging(value)
					Me.SendPropertyChanging
					Me._Base = value
					Me.SendPropertyChanged("Base")
					Me.OnBaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficio", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Beneficio() As Single
			Get
				Return Me._Beneficio
			End Get
			Set
				If ((Me._Beneficio = value)  _
							= false) Then
					Me.OnBeneficioChanging(value)
					Me.SendPropertyChanging
					Me._Beneficio = value
					Me.SendPropertyChanged("Beneficio")
					Me.OnBeneficioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BasePunto", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property BasePunto() As Single
			Get
				Return Me._BasePunto
			End Get
			Set
				If ((Me._BasePunto = value)  _
							= false) Then
					Me.OnBasePuntoChanging(value)
					Me.SendPropertyChanging
					Me._BasePunto = value
					Me.SendPropertyChanged("BasePunto")
					Me.OnBasePuntoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EquivalenciaPunto", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property EquivalenciaPunto() As Single
			Get
				Return Me._EquivalenciaPunto
			End Get
			Set
				If ((Me._EquivalenciaPunto = value)  _
							= false) Then
					Me.OnEquivalenciaPuntoChanging(value)
					Me.SendPropertyChanging
					Me._EquivalenciaPunto = value
					Me.SendPropertyChanged("EquivalenciaPunto")
					Me.OnEquivalenciaPuntoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", AutoSync:=AutoSync.OnUpdate, DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Saldo() As Single
			Get
				Return Me._Saldo
			End Get
			Set
				If ((Me._Saldo = value)  _
							= false) Then
					Me.OnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._Saldo = value
					Me.SendPropertyChanged("Saldo")
					Me.OnSaldoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CondicionParticular", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property CondicionParticular() As Boolean
			Get
				Return Me._CondicionParticular
			End Get
			Set
				If ((Me._CondicionParticular = value)  _
							= false) Then
					Me.OnCondicionParticularChanging(value)
					Me.SendPropertyChanging
					Me._CondicionParticular = value
					Me.SendPropertyChanged("CondicionParticular")
					Me.OnCondicionParticularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWTarjetasFidelizacion"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWTarjetasFidelizacion
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTarjeta As Long
		
		Private _idCliente As Long
		
		Private _NumeroTarjeta As String
		
		Private _EnSaldo As Boolean
		
		Private _FCreacion As Date
		
		Private _Saldo As Single
		
		Private _CondicionParticular As Boolean
		
		Private _Activo As Boolean
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _Base As Single
		
		Private _Beneficio As Single
		
		Private _BasePunto As Single
		
		Private _EquivalenciaPunto As Single
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTarjetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidTarjetaChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumeroTarjetaChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroTarjetaChanged()
    End Sub
    Partial Private Sub OnEnSaldoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEnSaldoChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnSaldoChanging(value As Single)
    End Sub
    Partial Private Sub OnSaldoChanged()
    End Sub
    Partial Private Sub OnCondicionParticularChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCondicionParticularChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Single)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnBeneficioChanging(value As Single)
    End Sub
    Partial Private Sub OnBeneficioChanged()
    End Sub
    Partial Private Sub OnBasePuntoChanging(value As Single)
    End Sub
    Partial Private Sub OnBasePuntoChanged()
    End Sub
    Partial Private Sub OnEquivalenciaPuntoChanging(value As Single)
    End Sub
    Partial Private Sub OnEquivalenciaPuntoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTarjeta", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idTarjeta() As Long
			Get
				Return Me._idTarjeta
			End Get
			Set
				If ((Me._idTarjeta = value)  _
							= false) Then
					Me.OnidTarjetaChanging(value)
					Me.SendPropertyChanging
					Me._idTarjeta = value
					Me.SendPropertyChanged("idTarjeta")
					Me.OnidTarjetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroTarjeta", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NumeroTarjeta() As String
			Get
				Return Me._NumeroTarjeta
			End Get
			Set
				If (String.Equals(Me._NumeroTarjeta, value) = false) Then
					Me.OnNumeroTarjetaChanging(value)
					Me.SendPropertyChanging
					Me._NumeroTarjeta = value
					Me.SendPropertyChanged("NumeroTarjeta")
					Me.OnNumeroTarjetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EnSaldo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property EnSaldo() As Boolean
			Get
				Return Me._EnSaldo
			End Get
			Set
				If ((Me._EnSaldo = value)  _
							= false) Then
					Me.OnEnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._EnSaldo = value
					Me.SendPropertyChanged("EnSaldo")
					Me.OnEnSaldoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Saldo() As Single
			Get
				Return Me._Saldo
			End Get
			Set
				If ((Me._Saldo = value)  _
							= false) Then
					Me.OnSaldoChanging(value)
					Me.SendPropertyChanging
					Me._Saldo = value
					Me.SendPropertyChanged("Saldo")
					Me.OnSaldoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CondicionParticular", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property CondicionParticular() As Boolean
			Get
				Return Me._CondicionParticular
			End Get
			Set
				If ((Me._CondicionParticular = value)  _
							= false) Then
					Me.OnCondicionParticularChanging(value)
					Me.SendPropertyChanging
					Me._CondicionParticular = value
					Me.SendPropertyChanged("CondicionParticular")
					Me.OnCondicionParticularChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Protected Friend Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
		Protected Friend Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Base() As Single
			Get
				Return Me._Base
			End Get
			Set
				If ((Me._Base = value)  _
							= false) Then
					Me.OnBaseChanging(value)
					Me.SendPropertyChanging
					Me._Base = value
					Me.SendPropertyChanged("Base")
					Me.OnBaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Beneficio", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Beneficio() As Single
			Get
				Return Me._Beneficio
			End Get
			Set
				If ((Me._Beneficio = value)  _
							= false) Then
					Me.OnBeneficioChanging(value)
					Me.SendPropertyChanging
					Me._Beneficio = value
					Me.SendPropertyChanged("Beneficio")
					Me.OnBeneficioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BasePunto", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property BasePunto() As Single
			Get
				Return Me._BasePunto
			End Get
			Set
				If ((Me._BasePunto = value)  _
							= false) Then
					Me.OnBasePuntoChanging(value)
					Me.SendPropertyChanging
					Me._BasePunto = value
					Me.SendPropertyChanged("BasePunto")
					Me.OnBasePuntoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EquivalenciaPunto", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property EquivalenciaPunto() As Single
			Get
				Return Me._EquivalenciaPunto
			End Get
			Set
				If ((Me._EquivalenciaPunto = value)  _
							= false) Then
					Me.OnEquivalenciaPuntoChanging(value)
					Me.SendPropertyChanging
					Me._EquivalenciaPunto = value
					Me.SendPropertyChanged("EquivalenciaPunto")
					Me.OnEquivalenciaPuntoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Encargos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Encargos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idEncargo As Long
		
		Private _FechaEncargo As Date
		
		Private _FechaRecogidaPrevista As System.Nullable(Of Date)
		
		Private _Descripcion As String
		
		Private _Referencia As String
		
		Private _Cantidad As Single
		
		Private _Fianza As Single
		
		Private _Cliente As String
		
		Private _Telefono As String
		
		Private _Recogido As Boolean
		
		Private _Suspendido As Boolean
		
		Private _Observacion As String
		
		Private _Imagen As System.Data.Linq.Binary
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidEncargoChanging(value As Long)
    End Sub
    Partial Private Sub OnidEncargoChanged()
    End Sub
    Partial Private Sub OnFechaEncargoChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaEncargoChanged()
    End Sub
    Partial Private Sub OnFechaRecogidaPrevistaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaRecogidaPrevistaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnFianzaChanging(value As Single)
    End Sub
    Partial Private Sub OnFianzaChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnRecogidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRecogidoChanged()
    End Sub
    Partial Private Sub OnSuspendidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSuspendidoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnImagenChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagenChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEncargo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idEncargo() As Long
			Get
				Return Me._idEncargo
			End Get
			Set
				If ((Me._idEncargo = value)  _
							= false) Then
					Me.OnidEncargoChanging(value)
					Me.SendPropertyChanging
					Me._idEncargo = value
					Me.SendPropertyChanged("idEncargo")
					Me.OnidEncargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaEncargo", DbType:="Date NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property FechaEncargo() As Date
			Get
				Return Me._FechaEncargo
			End Get
			Set
				If ((Me._FechaEncargo = value)  _
							= false) Then
					Me.OnFechaEncargoChanging(value)
					Me.SendPropertyChanging
					Me._FechaEncargo = value
					Me.SendPropertyChanged("FechaEncargo")
					Me.OnFechaEncargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRecogidaPrevista", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FechaRecogidaPrevista() As System.Nullable(Of Date)
			Get
				Return Me._FechaRecogidaPrevista
			End Get
			Set
				If (Me._FechaRecogidaPrevista.Equals(value) = false) Then
					Me.OnFechaRecogidaPrevistaChanging(value)
					Me.SendPropertyChanging
					Me._FechaRecogidaPrevista = value
					Me.SendPropertyChanged("FechaRecogidaPrevista")
					Me.OnFechaRecogidaPrevistaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fianza", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Fianza() As Single
			Get
				Return Me._Fianza
			End Get
			Set
				If ((Me._Fianza = value)  _
							= false) Then
					Me.OnFianzaChanging(value)
					Me.SendPropertyChanging
					Me._Fianza = value
					Me.SendPropertyChanged("Fianza")
					Me.OnFianzaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Cliente() As String
			Get
				Return Me._Cliente
			End Get
			Set
				If (String.Equals(Me._Cliente, value) = false) Then
					Me.OnClienteChanging(value)
					Me.SendPropertyChanging
					Me._Cliente = value
					Me.SendPropertyChanged("Cliente")
					Me.OnClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recogido", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Recogido() As Boolean
			Get
				Return Me._Recogido
			End Get
			Set
				If ((Me._Recogido = value)  _
							= false) Then
					Me.OnRecogidoChanging(value)
					Me.SendPropertyChanging
					Me._Recogido = value
					Me.SendPropertyChanged("Recogido")
					Me.OnRecogidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Suspendido", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Suspendido() As Boolean
			Get
				Return Me._Suspendido
			End Get
			Set
				If ((Me._Suspendido = value)  _
							= false) Then
					Me.OnSuspendidoChanging(value)
					Me.SendPropertyChanging
					Me._Suspendido = value
					Me.SendPropertyChanged("Suspendido")
					Me.OnSuspendidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imagen", DbType:="Image", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Imagen() As System.Data.Linq.Binary
			Get
				Return Me._Imagen
			End Get
			Set
				If (Object.Equals(Me._Imagen, value) = false) Then
					Me.OnImagenChanging(value)
					Me.SendPropertyChanging
					Me._Imagen = value
					Me.SendPropertyChanged("Imagen")
					Me.OnImagenChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ListasCompra"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class ListasCompra
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCompra As Long
		
		Private _Descripcion As String
		
		Private _Referencia As String
		
		Private _FechaCreacion As Date
		
		Private _idEncargo As System.Nullable(Of Long)
		
		Private _Observacion As String
		
		Private _Imagen As System.Data.Linq.Binary
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidCompraChanging(value As Long)
    End Sub
    Partial Private Sub OnidCompraChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnFechaCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaCreacionChanged()
    End Sub
    Partial Private Sub OnidEncargoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidEncargoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnImagenChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagenChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCompra", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCompra() As Long
			Get
				Return Me._idCompra
			End Get
			Set
				If ((Me._idCompra = value)  _
							= false) Then
					Me.OnidCompraChanging(value)
					Me.SendPropertyChanging
					Me._idCompra = value
					Me.SendPropertyChanged("idCompra")
					Me.OnidCompraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaCreacion", DbType:="Date NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FechaCreacion() As Date
			Get
				Return Me._FechaCreacion
			End Get
			Set
				If ((Me._FechaCreacion = value)  _
							= false) Then
					Me.OnFechaCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FechaCreacion = value
					Me.SendPropertyChanged("FechaCreacion")
					Me.OnFechaCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEncargo", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idEncargo() As System.Nullable(Of Long)
			Get
				Return Me._idEncargo
			End Get
			Set
				If (Me._idEncargo.Equals(value) = false) Then
					Me.OnidEncargoChanging(value)
					Me.SendPropertyChanging
					Me._idEncargo = value
					Me.SendPropertyChanged("idEncargo")
					Me.OnidEncargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imagen", DbType:="Image", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Imagen() As System.Data.Linq.Binary
			Get
				Return Me._Imagen
			End Get
			Set
				If (Object.Equals(Me._Imagen, value) = false) Then
					Me.OnImagenChanging(value)
					Me.SendPropertyChanging
					Me._Imagen = value
					Me.SendPropertyChanged("Imagen")
					Me.OnImagenChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Diarios"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Diarios
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idDiario As Long
		
		Private _idPuesto As Long
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _Apertura As Date
		
		Private _Cierre As System.Nullable(Of Date)
		
		Private _DepositoInicio As Single
		
		Private _CierreSupuesto As System.Nullable(Of Single)
		
		Private _CierreReal As System.Nullable(Of Single)
		
		Private _Incidencia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidDiarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidDiarioChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnAperturaChanging(value As Date)
    End Sub
    Partial Private Sub OnAperturaChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    Partial Private Sub OnDepositoInicioChanging(value As Single)
    End Sub
    Partial Private Sub OnDepositoInicioChanged()
    End Sub
    Partial Private Sub OnCierreSupuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnCierreSupuestoChanged()
    End Sub
    Partial Private Sub OnCierreRealChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnCierreRealChanged()
    End Sub
    Partial Private Sub OnIncidenciaChanging(value As String)
    End Sub
    Partial Private Sub OnIncidenciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idDiario", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idDiario() As Long
			Get
				Return Me._idDiario
			End Get
			Set
				If ((Me._idDiario = value)  _
							= false) Then
					Me.OnidDiarioChanging(value)
					Me.SendPropertyChanging
					Me._idDiario = value
					Me.SendPropertyChanged("idDiario")
					Me.OnidDiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPuesto() As Long
			Get
				Return Me._idPuesto
			End Get
			Set
				If ((Me._idPuesto = value)  _
							= false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apertura", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Apertura() As Date
			Get
				Return Me._Apertura
			End Get
			Set
				If ((Me._Apertura = value)  _
							= false) Then
					Me.OnAperturaChanging(value)
					Me.SendPropertyChanging
					Me._Apertura = value
					Me.SendPropertyChanged("Apertura")
					Me.OnAperturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cierre", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Cierre() As System.Nullable(Of Date)
			Get
				Return Me._Cierre
			End Get
			Set
				If (Me._Cierre.Equals(value) = false) Then
					Me.OnCierreChanging(value)
					Me.SendPropertyChanging
					Me._Cierre = value
					Me.SendPropertyChanged("Cierre")
					Me.OnCierreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepositoInicio", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property DepositoInicio() As Single
			Get
				Return Me._DepositoInicio
			End Get
			Set
				If ((Me._DepositoInicio = value)  _
							= false) Then
					Me.OnDepositoInicioChanging(value)
					Me.SendPropertyChanging
					Me._DepositoInicio = value
					Me.SendPropertyChanged("DepositoInicio")
					Me.OnDepositoInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CierreSupuesto", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property CierreSupuesto() As System.Nullable(Of Single)
			Get
				Return Me._CierreSupuesto
			End Get
			Set
				If (Me._CierreSupuesto.Equals(value) = false) Then
					Me.OnCierreSupuestoChanging(value)
					Me.SendPropertyChanging
					Me._CierreSupuesto = value
					Me.SendPropertyChanged("CierreSupuesto")
					Me.OnCierreSupuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CierreReal", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property CierreReal() As System.Nullable(Of Single)
			Get
				Return Me._CierreReal
			End Get
			Set
				If (Me._CierreReal.Equals(value) = false) Then
					Me.OnCierreRealChanging(value)
					Me.SendPropertyChanging
					Me._CierreReal = value
					Me.SendPropertyChanged("CierreReal")
					Me.OnCierreRealChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Incidencia", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Incidencia() As String
			Get
				Return Me._Incidencia
			End Get
			Set
				If (String.Equals(Me._Incidencia, value) = false) Then
					Me.OnIncidenciaChanging(value)
					Me.SendPropertyChanging
					Me._Incidencia = value
					Me.SendPropertyChanged("Incidencia")
					Me.OnIncidenciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWDiarios"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWDiarios
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idDiario As Long
		
		Private _Apertura As Date
		
		Private _Cierre As System.Nullable(Of Date)
		
		Private _DepositoInicio As Single
		
		Private _CierreSupuesto As System.Nullable(Of Single)
		
		Private _CierreReal As System.Nullable(Of Single)
		
		Private _DiferenciaCierre As System.Nullable(Of Single)
		
		Private _Puesto As String
		
		Private _Duracion As System.Nullable(Of Integer)
		
		Private _Nombre As String
		
		Private _Incidencia As String
		
		Private _idPuesto As Long
		
		Private _idUsuario As System.Nullable(Of Long)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidDiarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidDiarioChanged()
    End Sub
    Partial Private Sub OnAperturaChanging(value As Date)
    End Sub
    Partial Private Sub OnAperturaChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    Partial Private Sub OnDepositoInicioChanging(value As Single)
    End Sub
    Partial Private Sub OnDepositoInicioChanged()
    End Sub
    Partial Private Sub OnCierreSupuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnCierreSupuestoChanged()
    End Sub
    Partial Private Sub OnCierreRealChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnCierreRealChanged()
    End Sub
    Partial Private Sub OnDiferenciaCierreChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnDiferenciaCierreChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnDuracionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDuracionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnIncidenciaChanging(value As String)
    End Sub
    Partial Private Sub OnIncidenciaChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idDiario", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idDiario() As Long
			Get
				Return Me._idDiario
			End Get
			Set
				If ((Me._idDiario = value)  _
							= false) Then
					Me.OnidDiarioChanging(value)
					Me.SendPropertyChanging
					Me._idDiario = value
					Me.SendPropertyChanged("idDiario")
					Me.OnidDiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apertura", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Apertura() As Date
			Get
				Return Me._Apertura
			End Get
			Set
				If ((Me._Apertura = value)  _
							= false) Then
					Me.OnAperturaChanging(value)
					Me.SendPropertyChanging
					Me._Apertura = value
					Me.SendPropertyChanged("Apertura")
					Me.OnAperturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cierre", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Cierre() As System.Nullable(Of Date)
			Get
				Return Me._Cierre
			End Get
			Set
				If (Me._Cierre.Equals(value) = false) Then
					Me.OnCierreChanging(value)
					Me.SendPropertyChanging
					Me._Cierre = value
					Me.SendPropertyChanged("Cierre")
					Me.OnCierreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepositoInicio", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property DepositoInicio() As Single
			Get
				Return Me._DepositoInicio
			End Get
			Set
				If ((Me._DepositoInicio = value)  _
							= false) Then
					Me.OnDepositoInicioChanging(value)
					Me.SendPropertyChanging
					Me._DepositoInicio = value
					Me.SendPropertyChanged("DepositoInicio")
					Me.OnDepositoInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CierreSupuesto", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property CierreSupuesto() As System.Nullable(Of Single)
			Get
				Return Me._CierreSupuesto
			End Get
			Set
				If (Me._CierreSupuesto.Equals(value) = false) Then
					Me.OnCierreSupuestoChanging(value)
					Me.SendPropertyChanging
					Me._CierreSupuesto = value
					Me.SendPropertyChanged("CierreSupuesto")
					Me.OnCierreSupuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CierreReal", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property CierreReal() As System.Nullable(Of Single)
			Get
				Return Me._CierreReal
			End Get
			Set
				If (Me._CierreReal.Equals(value) = false) Then
					Me.OnCierreRealChanging(value)
					Me.SendPropertyChanging
					Me._CierreReal = value
					Me.SendPropertyChanged("CierreReal")
					Me.OnCierreRealChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiferenciaCierre", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property DiferenciaCierre() As System.Nullable(Of Single)
			Get
				Return Me._DiferenciaCierre
			End Get
			Set
				If (Me._DiferenciaCierre.Equals(value) = false) Then
					Me.OnDiferenciaCierreChanging(value)
					Me.SendPropertyChanging
					Me._DiferenciaCierre = value
					Me.SendPropertyChanged("DiferenciaCierre")
					Me.OnDiferenciaCierreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Duracion", DbType:="Int", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Duracion() As System.Nullable(Of Integer)
			Get
				Return Me._Duracion
			End Get
			Set
				If (Me._Duracion.Equals(value) = false) Then
					Me.OnDuracionChanging(value)
					Me.SendPropertyChanging
					Me._Duracion = value
					Me.SendPropertyChanged("Duracion")
					Me.OnDuracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Incidencia", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Incidencia() As String
			Get
				Return Me._Incidencia
			End Get
			Set
				If (String.Equals(Me._Incidencia, value) = false) Then
					Me.OnIncidenciaChanging(value)
					Me.SendPropertyChanging
					Me._Incidencia = value
					Me.SendPropertyChanged("Incidencia")
					Me.OnIncidenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property idPuesto() As Long
			Get
				Return Me._idPuesto
			End Get
			Set
				If ((Me._idPuesto = value)  _
							= false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWApuntesDiario"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWApuntesDiario
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idApunte As Long
		
		Private _idDiario As Long
		
		Private _Concepto As String
		
		Private _Importe As Single
		
		Private _Apertura As Date
		
		Private _Cierre As System.Nullable(Of Date)
		
		Private _idPuesto As Long
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _Nombre As String
		
		Private _Puesto As String
		
		Private _FApunte As Date
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidApunteChanging(value As Long)
    End Sub
    Partial Private Sub OnidApunteChanged()
    End Sub
    Partial Private Sub OnidDiarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidDiarioChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnAperturaChanging(value As Date)
    End Sub
    Partial Private Sub OnAperturaChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnFApunteChanging(value As Date)
    End Sub
    Partial Private Sub OnFApunteChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idApunte", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idApunte() As Long
			Get
				Return Me._idApunte
			End Get
			Set
				If ((Me._idApunte = value)  _
							= false) Then
					Me.OnidApunteChanging(value)
					Me.SendPropertyChanging
					Me._idApunte = value
					Me.SendPropertyChanged("idApunte")
					Me.OnidApunteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idDiario", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idDiario() As Long
			Get
				Return Me._idDiario
			End Get
			Set
				If ((Me._idDiario = value)  _
							= false) Then
					Me.OnidDiarioChanging(value)
					Me.SendPropertyChanging
					Me._idDiario = value
					Me.SendPropertyChanged("idDiario")
					Me.OnidDiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Concepto() As String
			Get
				Return Me._Concepto
			End Get
			Set
				If (String.Equals(Me._Concepto, value) = false) Then
					Me.OnConceptoChanging(value)
					Me.SendPropertyChanging
					Me._Concepto = value
					Me.SendPropertyChanged("Concepto")
					Me.OnConceptoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apertura", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Apertura() As Date
			Get
				Return Me._Apertura
			End Get
			Set
				If ((Me._Apertura = value)  _
							= false) Then
					Me.OnAperturaChanging(value)
					Me.SendPropertyChanging
					Me._Apertura = value
					Me.SendPropertyChanged("Apertura")
					Me.OnAperturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cierre", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Cierre() As System.Nullable(Of Date)
			Get
				Return Me._Cierre
			End Get
			Set
				If (Me._Cierre.Equals(value) = false) Then
					Me.OnCierreChanging(value)
					Me.SendPropertyChanging
					Me._Cierre = value
					Me.SendPropertyChanged("Cierre")
					Me.OnCierreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idPuesto() As Long
			Get
				Return Me._idPuesto
			End Get
			Set
				If ((Me._idPuesto = value)  _
							= false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FApunte", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property FApunte() As Date
			Get
				Return Me._FApunte
			End Get
			Set
				If ((Me._FApunte = value)  _
							= false) Then
					Me.OnFApunteChanging(value)
					Me.SendPropertyChanging
					Me._FApunte = value
					Me.SendPropertyChanged("FApunte")
					Me.OnFApunteChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ApuntesDiario"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class ApuntesDiario
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idApunte As Long
		
		Private _idDiario As Long
		
		Private _Concepto As String
		
		Private _Importe As Single
		
		Private _FApunte As Date
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidApunteChanging(value As Long)
    End Sub
    Partial Private Sub OnidApunteChanged()
    End Sub
    Partial Private Sub OnidDiarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidDiarioChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnFApunteChanging(value As Date)
    End Sub
    Partial Private Sub OnFApunteChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idApunte", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idApunte() As Long
			Get
				Return Me._idApunte
			End Get
			Set
				If ((Me._idApunte = value)  _
							= false) Then
					Me.OnidApunteChanging(value)
					Me.SendPropertyChanging
					Me._idApunte = value
					Me.SendPropertyChanged("idApunte")
					Me.OnidApunteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idDiario", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idDiario() As Long
			Get
				Return Me._idDiario
			End Get
			Set
				If ((Me._idDiario = value)  _
							= false) Then
					Me.OnidDiarioChanging(value)
					Me.SendPropertyChanging
					Me._idDiario = value
					Me.SendPropertyChanged("idDiario")
					Me.OnidDiarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Concepto() As String
			Get
				Return Me._Concepto
			End Get
			Set
				If (String.Equals(Me._Concepto, value) = false) Then
					Me.OnConceptoChanging(value)
					Me.SendPropertyChanging
					Me._Concepto = value
					Me.SendPropertyChanged("Concepto")
					Me.OnConceptoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FApunte", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FApunte() As Date
			Get
				Return Me._FApunte
			End Get
			Set
				If ((Me._FApunte = value)  _
							= false) Then
					Me.OnFApunteChanging(value)
					Me.SendPropertyChanging
					Me._FApunte = value
					Me.SendPropertyChanged("FApunte")
					Me.OnFApunteChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Morosidades"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Morosidades
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMorosidad As Long
		
		Private _idEmpresa As Long
		
		Private _idPropietario As Long
		
		Private _TipoMorosidad As Char
		
		Private _idUsuarioCreacion As System.Nullable(Of Long)
		
		Private _idAlbaran As System.Nullable(Of Long)
		
		Private _idPedido As System.Nullable(Of Long)
		
		Private _Importe As Single
		
		Private _ImporteGestionado As Single
		
		Private _Observacion As String
		
		Private _FUltimaGestion As System.Nullable(Of Date)
		
		Private _FCreacion As Date
		
		Private _Referencia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnidPropietarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidPropietarioChanged()
    End Sub
    Partial Private Sub OnTipoMorosidadChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoMorosidadChanged()
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanged()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnImporteGestionadoChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteGestionadoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFUltimaGestionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFUltimaGestionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPropietario", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idPropietario() As Long
			Get
				Return Me._idPropietario
			End Get
			Set
				If ((Me._idPropietario = value)  _
							= false) Then
					Me.OnidPropietarioChanging(value)
					Me.SendPropertyChanging
					Me._idPropietario = value
					Me.SendPropertyChanged("idPropietario")
					Me.OnidPropietarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoMorosidad", DbType:="Char(1) NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property TipoMorosidad() As Char
			Get
				Return Me._TipoMorosidad
			End Get
			Set
				If ((Me._TipoMorosidad = value)  _
							= false) Then
					Me.OnTipoMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._TipoMorosidad = value
					Me.SendPropertyChanged("TipoMorosidad")
					Me.OnTipoMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioCreacion", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idUsuarioCreacion() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioCreacion
			End Get
			Set
				If (Me._idUsuarioCreacion.Equals(value) = false) Then
					Me.OnidUsuarioCreacionChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioCreacion = value
					Me.SendPropertyChanged("idUsuarioCreacion")
					Me.OnidUsuarioCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property idAlbaran() As System.Nullable(Of Long)
			Get
				Return Me._idAlbaran
			End Get
			Set
				If (Me._idAlbaran.Equals(value) = false) Then
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idPedido() As System.Nullable(Of Long)
			Get
				Return Me._idPedido
			End Get
			Set
				If (Me._idPedido.Equals(value) = false) Then
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteGestionado", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property ImporteGestionado() As Single
			Get
				Return Me._ImporteGestionado
			End Get
			Set
				If ((Me._ImporteGestionado = value)  _
							= false) Then
					Me.OnImporteGestionadoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteGestionado = value
					Me.SendPropertyChanged("ImporteGestionado")
					Me.OnImporteGestionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUltimaGestion", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property FUltimaGestion() As System.Nullable(Of Date)
			Get
				Return Me._FUltimaGestion
			End Get
			Set
				If (Me._FUltimaGestion.Equals(value) = false) Then
					Me.OnFUltimaGestionChanging(value)
					Me.SendPropertyChanging
					Me._FUltimaGestion = value
					Me.SendPropertyChanged("FUltimaGestion")
					Me.OnFUltimaGestionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", AutoSync:=AutoSync.Always, DbType:="VarChar(8000)", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MovimientosMorosidad"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class MovimientosMorosidad
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMovimiento As Long
		
		Private _idModo As Short
		
		Private _idMorosidad As Long
		
		Private _idPuesto As System.Nullable(Of Long)
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _FMovimiento As Date
		
		Private _Importe As Single
		
		Private _Observacion As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMovimientoChanging(value As Long)
    End Sub
    Partial Private Sub OnidMovimientoChanged()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnFMovimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnFMovimientoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMovimiento", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMovimiento() As Long
			Get
				Return Me._idMovimiento
			End Get
			Set
				If ((Me._idMovimiento = value)  _
							= false) Then
					Me.OnidMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._idMovimiento = value
					Me.SendPropertyChanged("idMovimiento")
					Me.OnidMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idPuesto() As System.Nullable(Of Long)
			Get
				Return Me._idPuesto
			End Get
			Set
				If (Me._idPuesto.Equals(value) = false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FMovimiento", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FMovimiento() As Date
			Get
				Return Me._FMovimiento
			End Get
			Set
				If ((Me._FMovimiento = value)  _
							= false) Then
					Me.OnFMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._FMovimiento = value
					Me.SendPropertyChanged("FMovimiento")
					Me.OnFMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWCobros"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWCobros
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ModoPagoChn As String
		
		Private _ModoPagoEsp As String
		
		Private _Puesto As String
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _UsuarioCobro As String
		
		Private _idMovimiento As Long
		
		Private _idModo As Short
		
		Private _idMorosidad As Long
		
		Private _idPuesto As System.Nullable(Of Long)
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _FMovimiento As Date
		
		Private _Importe As Single
		
		Private _Observacion As String
		
		Private _Referencia As String
		
		Private _TotalPediente As Single
		
		Private _FCreacion As Date
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModoPagoChnChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoChnChanged()
    End Sub
    Partial Private Sub OnModoPagoEspChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoEspChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnUsuarioCobroChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioCobroChanged()
    End Sub
    Partial Private Sub OnidMovimientoChanging(value As Long)
    End Sub
    Partial Private Sub OnidMovimientoChanged()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnFMovimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnFMovimientoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnTotalPedienteChanging(value As Single)
    End Sub
    Partial Private Sub OnTotalPedienteChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ModoPagoChn() As String
			Get
				Return Me._ModoPagoChn
			End Get
			Set
				If (String.Equals(Me._ModoPagoChn, value) = false) Then
					Me.OnModoPagoChnChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoChn = value
					Me.SendPropertyChanged("ModoPagoChn")
					Me.OnModoPagoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ModoPagoEsp() As String
			Get
				Return Me._ModoPagoEsp
			End Get
			Set
				If (String.Equals(Me._ModoPagoEsp, value) = false) Then
					Me.OnModoPagoEspChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoEsp = value
					Me.SendPropertyChanged("ModoPagoEsp")
					Me.OnModoPagoEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioCobro", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property UsuarioCobro() As String
			Get
				Return Me._UsuarioCobro
			End Get
			Set
				If (String.Equals(Me._UsuarioCobro, value) = false) Then
					Me.OnUsuarioCobroChanging(value)
					Me.SendPropertyChanging
					Me._UsuarioCobro = value
					Me.SendPropertyChanged("UsuarioCobro")
					Me.OnUsuarioCobroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMovimiento", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idMovimiento() As Long
			Get
				Return Me._idMovimiento
			End Get
			Set
				If ((Me._idMovimiento = value)  _
							= false) Then
					Me.OnidMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._idMovimiento = value
					Me.SendPropertyChanged("idMovimiento")
					Me.OnidMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property idPuesto() As System.Nullable(Of Long)
			Get
				Return Me._idPuesto
			End Get
			Set
				If (Me._idPuesto.Equals(value) = false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FMovimiento", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property FMovimiento() As Date
			Get
				Return Me._FMovimiento
			End Get
			Set
				If ((Me._FMovimiento = value)  _
							= false) Then
					Me.OnFMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._FMovimiento = value
					Me.SendPropertyChanged("FMovimiento")
					Me.OnFMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPediente", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property TotalPediente() As Single
			Get
				Return Me._TotalPediente
			End Get
			Set
				If ((Me._TotalPediente = value)  _
							= false) Then
					Me.OnTotalPedienteChanging(value)
					Me.SendPropertyChanging
					Me._TotalPediente = value
					Me.SendPropertyChanged("TotalPediente")
					Me.OnTotalPedienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWPagos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWPagos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ModoPagoChn As String
		
		Private _ModoPagoEsp As String
		
		Private _Puesto As String
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _UsuarioPago As String
		
		Private _idMovimiento As Long
		
		Private _idModo As Short
		
		Private _idMorosidad As Long
		
		Private _idPuesto As System.Nullable(Of Long)
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _FMovimiento As Date
		
		Private _Importe As Single
		
		Private _Observacion As String
		
		Private _Referencia As String
		
		Private _TotalPediente As Single
		
		Private _FCreacion As Date
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModoPagoChnChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoChnChanged()
    End Sub
    Partial Private Sub OnModoPagoEspChanging(value As String)
    End Sub
    Partial Private Sub OnModoPagoEspChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnUsuarioPagoChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioPagoChanged()
    End Sub
    Partial Private Sub OnidMovimientoChanging(value As Long)
    End Sub
    Partial Private Sub OnidMovimientoChanged()
    End Sub
    Partial Private Sub OnidModoChanging(value As Short)
    End Sub
    Partial Private Sub OnidModoChanged()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnFMovimientoChanging(value As Date)
    End Sub
    Partial Private Sub OnFMovimientoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnTotalPedienteChanging(value As Single)
    End Sub
    Partial Private Sub OnTotalPedienteChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ModoPagoChn() As String
			Get
				Return Me._ModoPagoChn
			End Get
			Set
				If (String.Equals(Me._ModoPagoChn, value) = false) Then
					Me.OnModoPagoChnChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoChn = value
					Me.SendPropertyChanged("ModoPagoChn")
					Me.OnModoPagoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModoPagoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ModoPagoEsp() As String
			Get
				Return Me._ModoPagoEsp
			End Get
			Set
				If (String.Equals(Me._ModoPagoEsp, value) = false) Then
					Me.OnModoPagoEspChanging(value)
					Me.SendPropertyChanging
					Me._ModoPagoEsp = value
					Me.SendPropertyChanged("ModoPagoEsp")
					Me.OnModoPagoEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsuarioPago", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property UsuarioPago() As String
			Get
				Return Me._UsuarioPago
			End Get
			Set
				If (String.Equals(Me._UsuarioPago, value) = false) Then
					Me.OnUsuarioPagoChanging(value)
					Me.SendPropertyChanging
					Me._UsuarioPago = value
					Me.SendPropertyChanged("UsuarioPago")
					Me.OnUsuarioPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMovimiento", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idMovimiento() As Long
			Get
				Return Me._idMovimiento
			End Get
			Set
				If ((Me._idMovimiento = value)  _
							= false) Then
					Me.OnidMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._idMovimiento = value
					Me.SendPropertyChanged("idMovimiento")
					Me.OnidMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idModo", DbType:="SmallInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property idModo() As Short
			Get
				Return Me._idModo
			End Get
			Set
				If ((Me._idModo = value)  _
							= false) Then
					Me.OnidModoChanging(value)
					Me.SendPropertyChanging
					Me._idModo = value
					Me.SendPropertyChanged("idModo")
					Me.OnidModoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property idPuesto() As System.Nullable(Of Long)
			Get
				Return Me._idPuesto
			End Get
			Set
				If (Me._idPuesto.Equals(value) = false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FMovimiento", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property FMovimiento() As Date
			Get
				Return Me._FMovimiento
			End Get
			Set
				If ((Me._FMovimiento = value)  _
							= false) Then
					Me.OnFMovimientoChanging(value)
					Me.SendPropertyChanging
					Me._FMovimiento = value
					Me.SendPropertyChanged("FMovimiento")
					Me.OnFMovimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPediente", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property TotalPediente() As Single
			Get
				Return Me._TotalPediente
			End Get
			Set
				If ((Me._TotalPediente = value)  _
							= false) Then
					Me.OnTotalPedienteChanging(value)
					Me.SendPropertyChanging
					Me._TotalPediente = value
					Me.SendPropertyChanged("TotalPediente")
					Me.OnTotalPedienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWCreditosCliente"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWCreditosCliente
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMorosidad As Long
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _NumAlbaran As String
		
		Private _FAlbaran As System.Nullable(Of Date)
		
		Private _idEmpresa As Long
		
		Private _idCliente As Long
		
		Private _idUsuarioCreacion As System.Nullable(Of Long)
		
		Private _idAlbaran As System.Nullable(Of Long)
		
		Private _Importe As Single
		
		Private _ImporteGestionado As Single
		
		Private _Observacion As String
		
		Private _FUltimaGestion As System.Nullable(Of Date)
		
		Private _FCreacion As Date
		
		Private _Referencia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnNumAlbaranChanging(value As String)
    End Sub
    Partial Private Sub OnNumAlbaranChanged()
    End Sub
    Partial Private Sub OnFAlbaranChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFAlbaranChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanged()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnImporteGestionadoChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteGestionadoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFUltimaGestionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFUltimaGestionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumAlbaran", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property NumAlbaran() As String
			Get
				Return Me._NumAlbaran
			End Get
			Set
				If (String.Equals(Me._NumAlbaran, value) = false) Then
					Me.OnNumAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._NumAlbaran = value
					Me.SendPropertyChanged("NumAlbaran")
					Me.OnNumAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAlbaran", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FAlbaran() As System.Nullable(Of Date)
			Get
				Return Me._FAlbaran
			End Get
			Set
				If (Me._FAlbaran.Equals(value) = false) Then
					Me.OnFAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._FAlbaran = value
					Me.SendPropertyChanged("FAlbaran")
					Me.OnFAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioCreacion", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property idUsuarioCreacion() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioCreacion
			End Get
			Set
				If (Me._idUsuarioCreacion.Equals(value) = false) Then
					Me.OnidUsuarioCreacionChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioCreacion = value
					Me.SendPropertyChanged("idUsuarioCreacion")
					Me.OnidUsuarioCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property idAlbaran() As System.Nullable(Of Long)
			Get
				Return Me._idAlbaran
			End Get
			Set
				If (Me._idAlbaran.Equals(value) = false) Then
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteGestionado", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property ImporteGestionado() As Single
			Get
				Return Me._ImporteGestionado
			End Get
			Set
				If ((Me._ImporteGestionado = value)  _
							= false) Then
					Me.OnImporteGestionadoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteGestionado = value
					Me.SendPropertyChanged("ImporteGestionado")
					Me.OnImporteGestionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUltimaGestion", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FUltimaGestion() As System.Nullable(Of Date)
			Get
				Return Me._FUltimaGestion
			End Get
			Set
				If (Me._FUltimaGestion.Equals(value) = false) Then
					Me.OnFUltimaGestionChanging(value)
					Me.SendPropertyChanging
					Me._FUltimaGestion = value
					Me.SendPropertyChanged("FUltimaGestion")
					Me.OnFUltimaGestionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWDeberesProveedor"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWDeberesProveedor
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idMorosidad As Long
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _NumPedido As String
		
		Private _FPedido As System.Nullable(Of Date)
		
		Private _idEmpresa As Long
		
		Private _idProveedor As Long
		
		Private _idUsuarioCreacion As System.Nullable(Of Long)
		
		Private _idPedido As System.Nullable(Of Long)
		
		Private _Importe As Single
		
		Private _ImporteGestionado As Single
		
		Private _Observacion As String
		
		Private _FUltimaGestion As System.Nullable(Of Date)
		
		Private _FCreacion As Date
		
		Private _Referencia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidMorosidadChanging(value As Long)
    End Sub
    Partial Private Sub OnidMorosidadChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnNumPedidoChanging(value As String)
    End Sub
    Partial Private Sub OnNumPedidoChanged()
    End Sub
    Partial Private Sub OnFPedidoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFPedidoChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As Long)
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioCreacionChanged()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnImporteGestionadoChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteGestionadoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFUltimaGestionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFUltimaGestionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMorosidad", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idMorosidad() As Long
			Get
				Return Me._idMorosidad
			End Get
			Set
				If ((Me._idMorosidad = value)  _
							= false) Then
					Me.OnidMorosidadChanging(value)
					Me.SendPropertyChanging
					Me._idMorosidad = value
					Me.SendPropertyChanged("idMorosidad")
					Me.OnidMorosidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumPedido", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property NumPedido() As String
			Get
				Return Me._NumPedido
			End Get
			Set
				If (String.Equals(Me._NumPedido, value) = false) Then
					Me.OnNumPedidoChanging(value)
					Me.SendPropertyChanging
					Me._NumPedido = value
					Me.SendPropertyChanged("NumPedido")
					Me.OnNumPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPedido", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FPedido() As System.Nullable(Of Date)
			Get
				Return Me._FPedido
			End Get
			Set
				If (Me._FPedido.Equals(value) = false) Then
					Me.OnFPedidoChanging(value)
					Me.SendPropertyChanging
					Me._FPedido = value
					Me.SendPropertyChanged("FPedido")
					Me.OnFPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idProveedor() As Long
			Get
				Return Me._idProveedor
			End Get
			Set
				If ((Me._idProveedor = value)  _
							= false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioCreacion", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property idUsuarioCreacion() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioCreacion
			End Get
			Set
				If (Me._idUsuarioCreacion.Equals(value) = false) Then
					Me.OnidUsuarioCreacionChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioCreacion = value
					Me.SendPropertyChanged("idUsuarioCreacion")
					Me.OnidUsuarioCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property idPedido() As System.Nullable(Of Long)
			Get
				Return Me._idPedido
			End Get
			Set
				If (Me._idPedido.Equals(value) = false) Then
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteGestionado", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property ImporteGestionado() As Single
			Get
				Return Me._ImporteGestionado
			End Get
			Set
				If ((Me._ImporteGestionado = value)  _
							= false) Then
					Me.OnImporteGestionadoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteGestionado = value
					Me.SendPropertyChanged("ImporteGestionado")
					Me.OnImporteGestionadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FUltimaGestion", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FUltimaGestion() As System.Nullable(Of Date)
			Get
				Return Me._FUltimaGestion
			End Get
			Set
				If (Me._FUltimaGestion.Equals(value) = false) Then
					Me.OnFUltimaGestionChanging(value)
					Me.SendPropertyChanging
					Me._FUltimaGestion = value
					Me.SendPropertyChanged("FUltimaGestion")
					Me.OnFUltimaGestionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(8000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PrioridadesTarea"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class PrioridadesTarea
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idPrioridad As Short
		
		Private _PrioridadChn As String
		
		Private _PrioridadEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidPrioridadChanging(value As Short)
    End Sub
    Partial Private Sub OnidPrioridadChanged()
    End Sub
    Partial Private Sub OnPrioridadChnChanging(value As String)
    End Sub
    Partial Private Sub OnPrioridadChnChanged()
    End Sub
    Partial Private Sub OnPrioridadEspChanging(value As String)
    End Sub
    Partial Private Sub OnPrioridadEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPrioridad", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
		Friend Property idPrioridad() As Short
			Get
				Return Me._idPrioridad
			End Get
			Set
				If ((Me._idPrioridad = value)  _
							= false) Then
					Me.OnidPrioridadChanging(value)
					Me.SendPropertyChanging
					Me._idPrioridad = value
					Me.SendPropertyChanged("idPrioridad")
					Me.OnidPrioridadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrioridadChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Friend Property PrioridadChn() As String
			Get
				Return Me._PrioridadChn
			End Get
			Set
				If (String.Equals(Me._PrioridadChn, value) = false) Then
					Me.OnPrioridadChnChanging(value)
					Me.SendPropertyChanging
					Me._PrioridadChn = value
					Me.SendPropertyChanged("PrioridadChn")
					Me.OnPrioridadChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrioridadEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
		Friend Property PrioridadEsp() As String
			Get
				Return Me._PrioridadEsp
			End Get
			Set
				If (String.Equals(Me._PrioridadEsp, value) = false) Then
					Me.OnPrioridadEspChanging(value)
					Me.SendPropertyChanging
					Me._PrioridadEsp = value
					Me.SendPropertyChanged("PrioridadEsp")
					Me.OnPrioridadEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TiposDatoCaractProducto"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class TiposDatoCaractProducto
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTipoDato As Short
		
		Private _TipoDatoChn As String
		
		Private _TipoDatoEsp As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTipoDatoChanging(value As Short)
    End Sub
    Partial Private Sub OnidTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoDatoChnChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChnChanged()
    End Sub
    Partial Private Sub OnTipoDatoEspChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoEspChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipoDato", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
		Friend Property idTipoDato() As Short
			Get
				Return Me._idTipoDato
			End Get
			Set
				If ((Me._idTipoDato = value)  _
							= false) Then
					Me.OnidTipoDatoChanging(value)
					Me.SendPropertyChanging
					Me._idTipoDato = value
					Me.SendPropertyChanged("idTipoDato")
					Me.OnidTipoDatoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDatoChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property TipoDatoChn() As String
			Get
				Return Me._TipoDatoChn
			End Get
			Set
				If (String.Equals(Me._TipoDatoChn, value) = false) Then
					Me.OnTipoDatoChnChanging(value)
					Me.SendPropertyChanging
					Me._TipoDatoChn = value
					Me.SendPropertyChanged("TipoDatoChn")
					Me.OnTipoDatoChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDatoEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
		Friend Property TipoDatoEsp() As String
			Get
				Return Me._TipoDatoEsp
			End Get
			Set
				If (String.Equals(Me._TipoDatoEsp, value) = false) Then
					Me.OnTipoDatoEspChanging(value)
					Me.SendPropertyChanging
					Me._TipoDatoEsp = value
					Me.SendPropertyChanged("TipoDatoEsp")
					Me.OnTipoDatoEspChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuarios"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Usuarios
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idUsuario As Long
		
		Private _NombreSesion As String
		
		Private _Nombre As String
		
		Private _Contraseña As String
		
		Private _PermisoProducto As Integer
		
		Private _PermisoCliente As Integer
		
		Private _PermisoProveedor As Integer
		
		Private _PermisoVenta As Integer
		
		Private _PermisoCompra As Integer
		
		Private _PermisoConfiguracion As Integer
		
		Private _InformesAccesibles As String
		
		Private _IdiomaPreferente As String
		
		Private _TamañoGrid As Short
		
		Private _FCreacion As Date
		
		Private _Activo As Boolean
		
		Private _PuestoEnSesion As String
		
		Private _Apariencia As String
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As Long)
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreSesionChanging(value As String)
    End Sub
    Partial Private Sub OnNombreSesionChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnContraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnContraseñaChanged()
    End Sub
    Partial Private Sub OnPermisoProductoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoProductoChanged()
    End Sub
    Partial Private Sub OnPermisoClienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoClienteChanged()
    End Sub
    Partial Private Sub OnPermisoProveedorChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoProveedorChanged()
    End Sub
    Partial Private Sub OnPermisoVentaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoVentaChanged()
    End Sub
    Partial Private Sub OnPermisoCompraChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoCompraChanged()
    End Sub
    Partial Private Sub OnPermisoConfiguracionChanging(value As Integer)
    End Sub
    Partial Private Sub OnPermisoConfiguracionChanged()
    End Sub
    Partial Private Sub OnInformesAccesiblesChanging(value As String)
    End Sub
    Partial Private Sub OnInformesAccesiblesChanged()
    End Sub
    Partial Private Sub OnIdiomaPreferenteChanging(value As String)
    End Sub
    Partial Private Sub OnIdiomaPreferenteChanged()
    End Sub
    Partial Private Sub OnTamañoGridChanging(value As Short)
    End Sub
    Partial Private Sub OnTamañoGridChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnPuestoEnSesionChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoEnSesionChanged()
    End Sub
    Partial Private Sub OnAparienciaChanging(value As String)
    End Sub
    Partial Private Sub OnAparienciaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idUsuario() As Long
			Get
				Return Me._idUsuario
			End Get
			Set
				If ((Me._idUsuario = value)  _
							= false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreSesion", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property NombreSesion() As String
			Get
				Return Me._NombreSesion
			End Get
			Set
				If (String.Equals(Me._NombreSesion, value) = false) Then
					Me.OnNombreSesionChanging(value)
					Me.SendPropertyChanging
					Me._NombreSesion = value
					Me.SendPropertyChanged("NombreSesion")
					Me.OnNombreSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contraseña", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Contraseña() As String
			Get
				Return Me._Contraseña
			End Get
			Set
				If (String.Equals(Me._Contraseña, value) = false) Then
					Me.OnContraseñaChanging(value)
					Me.SendPropertyChanging
					Me._Contraseña = value
					Me.SendPropertyChanged("Contraseña")
					Me.OnContraseñaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoProducto", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property PermisoProducto() As Integer
			Get
				Return Me._PermisoProducto
			End Get
			Set
				If ((Me._PermisoProducto = value)  _
							= false) Then
					Me.OnPermisoProductoChanging(value)
					Me.SendPropertyChanging
					Me._PermisoProducto = value
					Me.SendPropertyChanged("PermisoProducto")
					Me.OnPermisoProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoCliente", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PermisoCliente() As Integer
			Get
				Return Me._PermisoCliente
			End Get
			Set
				If ((Me._PermisoCliente = value)  _
							= false) Then
					Me.OnPermisoClienteChanging(value)
					Me.SendPropertyChanging
					Me._PermisoCliente = value
					Me.SendPropertyChanged("PermisoCliente")
					Me.OnPermisoClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoProveedor", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property PermisoProveedor() As Integer
			Get
				Return Me._PermisoProveedor
			End Get
			Set
				If ((Me._PermisoProveedor = value)  _
							= false) Then
					Me.OnPermisoProveedorChanging(value)
					Me.SendPropertyChanging
					Me._PermisoProveedor = value
					Me.SendPropertyChanged("PermisoProveedor")
					Me.OnPermisoProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoVenta", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property PermisoVenta() As Integer
			Get
				Return Me._PermisoVenta
			End Get
			Set
				If ((Me._PermisoVenta = value)  _
							= false) Then
					Me.OnPermisoVentaChanging(value)
					Me.SendPropertyChanging
					Me._PermisoVenta = value
					Me.SendPropertyChanged("PermisoVenta")
					Me.OnPermisoVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoCompra", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property PermisoCompra() As Integer
			Get
				Return Me._PermisoCompra
			End Get
			Set
				If ((Me._PermisoCompra = value)  _
							= false) Then
					Me.OnPermisoCompraChanging(value)
					Me.SendPropertyChanging
					Me._PermisoCompra = value
					Me.SendPropertyChanged("PermisoCompra")
					Me.OnPermisoCompraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermisoConfiguracion", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property PermisoConfiguracion() As Integer
			Get
				Return Me._PermisoConfiguracion
			End Get
			Set
				If ((Me._PermisoConfiguracion = value)  _
							= false) Then
					Me.OnPermisoConfiguracionChanging(value)
					Me.SendPropertyChanging
					Me._PermisoConfiguracion = value
					Me.SendPropertyChanged("PermisoConfiguracion")
					Me.OnPermisoConfiguracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InformesAccesibles", DbType:="VarChar(500) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property InformesAccesibles() As String
			Get
				Return Me._InformesAccesibles
			End Get
			Set
				If (String.Equals(Me._InformesAccesibles, value) = false) Then
					Me.OnInformesAccesiblesChanging(value)
					Me.SendPropertyChanging
					Me._InformesAccesibles = value
					Me.SendPropertyChanged("InformesAccesibles")
					Me.OnInformesAccesiblesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdiomaPreferente", DbType:="VarChar(5) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property IdiomaPreferente() As String
			Get
				Return Me._IdiomaPreferente
			End Get
			Set
				If (String.Equals(Me._IdiomaPreferente, value) = false) Then
					Me.OnIdiomaPreferenteChanging(value)
					Me.SendPropertyChanging
					Me._IdiomaPreferente = value
					Me.SendPropertyChanged("IdiomaPreferente")
					Me.OnIdiomaPreferenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TamañoGrid", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property TamañoGrid() As Short
			Get
				Return Me._TamañoGrid
			End Get
			Set
				If ((Me._TamañoGrid = value)  _
							= false) Then
					Me.OnTamañoGridChanging(value)
					Me.SendPropertyChanging
					Me._TamañoGrid = value
					Me.SendPropertyChanged("TamañoGrid")
					Me.OnTamañoGridChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuestoEnSesion", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property PuestoEnSesion() As String
			Get
				Return Me._PuestoEnSesion
			End Get
			Set
				If (String.Equals(Me._PuestoEnSesion, value) = false) Then
					Me.OnPuestoEnSesionChanging(value)
					Me.SendPropertyChanging
					Me._PuestoEnSesion = value
					Me.SendPropertyChanged("PuestoEnSesion")
					Me.OnPuestoEnSesionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apariencia", DbType:="VarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Apariencia() As String
			Get
				Return Me._Apariencia
			End Get
			Set
				If (String.Equals(Me._Apariencia, value) = false) Then
					Me.OnAparienciaChanging(value)
					Me.SendPropertyChanging
					Me._Apariencia = value
					Me.SendPropertyChanged("Apariencia")
					Me.OnAparienciaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vales"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Vales
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idVale As Long
		
		Private _idCliente As System.Nullable(Of Long)
		
		Private _Numero As String
		
		Private _FEmision As Date
		
		Private _FComienzo As System.Nullable(Of Date)
		
		Private _FValidez As System.Nullable(Of Date)
		
		Private _FCancelacion As System.Nullable(Of Date)
		
		Private _Importe As Single
		
		Private _Activo As Boolean
		
		Private _ObtenidoXFidelizacion As Boolean
		
		Private _EsPunto As Boolean
		
		Private _Imprimido As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidValeChanging(value As Long)
    End Sub
    Partial Private Sub OnidValeChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFEmisionChanging(value As Date)
    End Sub
    Partial Private Sub OnFEmisionChanged()
    End Sub
    Partial Private Sub OnFComienzoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFComienzoChanged()
    End Sub
    Partial Private Sub OnFValidezChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFValidezChanged()
    End Sub
    Partial Private Sub OnFCancelacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFCancelacionChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnObtenidoXFidelizacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnObtenidoXFidelizacionChanged()
    End Sub
    Partial Private Sub OnEsPuntoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsPuntoChanged()
    End Sub
    Partial Private Sub OnImprimidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnImprimidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idVale", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idVale() As Long
			Get
				Return Me._idVale
			End Get
			Set
				If ((Me._idVale = value)  _
							= false) Then
					Me.OnidValeChanging(value)
					Me.SendPropertyChanging
					Me._idVale = value
					Me.SendPropertyChanged("idVale")
					Me.OnidValeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As System.Nullable(Of Long)
			Get
				Return Me._idCliente
			End Get
			Set
				If (Me._idCliente.Equals(value) = false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Numero() As String
			Get
				Return Me._Numero
			End Get
			Set
				If (String.Equals(Me._Numero, value) = false) Then
					Me.OnNumeroChanging(value)
					Me.SendPropertyChanging
					Me._Numero = value
					Me.SendPropertyChanged("Numero")
					Me.OnNumeroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEmision", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FEmision() As Date
			Get
				Return Me._FEmision
			End Get
			Set
				If ((Me._FEmision = value)  _
							= false) Then
					Me.OnFEmisionChanging(value)
					Me.SendPropertyChanging
					Me._FEmision = value
					Me.SendPropertyChanged("FEmision")
					Me.OnFEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FComienzo", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FComienzo() As System.Nullable(Of Date)
			Get
				Return Me._FComienzo
			End Get
			Set
				If (Me._FComienzo.Equals(value) = false) Then
					Me.OnFComienzoChanging(value)
					Me.SendPropertyChanging
					Me._FComienzo = value
					Me.SendPropertyChanged("FComienzo")
					Me.OnFComienzoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FValidez", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FValidez() As System.Nullable(Of Date)
			Get
				Return Me._FValidez
			End Get
			Set
				If (Me._FValidez.Equals(value) = false) Then
					Me.OnFValidezChanging(value)
					Me.SendPropertyChanging
					Me._FValidez = value
					Me.SendPropertyChanged("FValidez")
					Me.OnFValidezChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCancelacion", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property FCancelacion() As System.Nullable(Of Date)
			Get
				Return Me._FCancelacion
			End Get
			Set
				If (Me._FCancelacion.Equals(value) = false) Then
					Me.OnFCancelacionChanging(value)
					Me.SendPropertyChanging
					Me._FCancelacion = value
					Me.SendPropertyChanged("FCancelacion")
					Me.OnFCancelacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObtenidoXFidelizacion", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ObtenidoXFidelizacion() As Boolean
			Get
				Return Me._ObtenidoXFidelizacion
			End Get
			Set
				If ((Me._ObtenidoXFidelizacion = value)  _
							= false) Then
					Me.OnObtenidoXFidelizacionChanging(value)
					Me.SendPropertyChanging
					Me._ObtenidoXFidelizacion = value
					Me.SendPropertyChanged("ObtenidoXFidelizacion")
					Me.OnObtenidoXFidelizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsPunto", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property EsPunto() As Boolean
			Get
				Return Me._EsPunto
			End Get
			Set
				If ((Me._EsPunto = value)  _
							= false) Then
					Me.OnEsPuntoChanging(value)
					Me.SendPropertyChanging
					Me._EsPunto = value
					Me.SendPropertyChanged("EsPunto")
					Me.OnEsPuntoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imprimido", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Imprimido() As Boolean
			Get
				Return Me._Imprimido
			End Get
			Set
				If ((Me._Imprimido = value)  _
							= false) Then
					Me.OnImprimidoChanging(value)
					Me.SendPropertyChanging
					Me._Imprimido = value
					Me.SendPropertyChanged("Imprimido")
					Me.OnImprimidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWVales"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWVales
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idVale As Long
		
		Private _idCliente As System.Nullable(Of Long)
		
		Private _Numero As String
		
		Private _FEmision As Date
		
		Private _FValidez As System.Nullable(Of Date)
		
		Private _FCancelacion As System.Nullable(Of Date)
		
		Private _Importe As Single
		
		Private _Activo As Boolean
		
		Private _Nombre As String
		
		Private _ObtenidoXFidelizacion As Boolean
		
		Private _FComienzo As System.Nullable(Of Date)
		
		Private _EsPunto As Boolean
		
		Private _NombreCN As String
		
		Private _Imprimido As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidValeChanging(value As Long)
    End Sub
    Partial Private Sub OnidValeChanged()
    End Sub
    Partial Private Sub OnidClienteChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnFEmisionChanging(value As Date)
    End Sub
    Partial Private Sub OnFEmisionChanged()
    End Sub
    Partial Private Sub OnFValidezChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFValidezChanged()
    End Sub
    Partial Private Sub OnFCancelacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFCancelacionChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Single)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnObtenidoXFidelizacionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnObtenidoXFidelizacionChanged()
    End Sub
    Partial Private Sub OnFComienzoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFComienzoChanged()
    End Sub
    Partial Private Sub OnEsPuntoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsPuntoChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnImprimidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnImprimidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idVale", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idVale() As Long
			Get
				Return Me._idVale
			End Get
			Set
				If ((Me._idVale = value)  _
							= false) Then
					Me.OnidValeChanging(value)
					Me.SendPropertyChanging
					Me._idVale = value
					Me.SendPropertyChanged("idVale")
					Me.OnidValeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idCliente() As System.Nullable(Of Long)
			Get
				Return Me._idCliente
			End Get
			Set
				If (Me._idCliente.Equals(value) = false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Numero() As String
			Get
				Return Me._Numero
			End Get
			Set
				If (String.Equals(Me._Numero, value) = false) Then
					Me.OnNumeroChanging(value)
					Me.SendPropertyChanging
					Me._Numero = value
					Me.SendPropertyChanged("Numero")
					Me.OnNumeroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEmision", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property FEmision() As Date
			Get
				Return Me._FEmision
			End Get
			Set
				If ((Me._FEmision = value)  _
							= false) Then
					Me.OnFEmisionChanging(value)
					Me.SendPropertyChanging
					Me._FEmision = value
					Me.SendPropertyChanged("FEmision")
					Me.OnFEmisionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FValidez", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FValidez() As System.Nullable(Of Date)
			Get
				Return Me._FValidez
			End Get
			Set
				If (Me._FValidez.Equals(value) = false) Then
					Me.OnFValidezChanging(value)
					Me.SendPropertyChanging
					Me._FValidez = value
					Me.SendPropertyChanged("FValidez")
					Me.OnFValidezChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCancelacion", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FCancelacion() As System.Nullable(Of Date)
			Get
				Return Me._FCancelacion
			End Get
			Set
				If (Me._FCancelacion.Equals(value) = false) Then
					Me.OnFCancelacionChanging(value)
					Me.SendPropertyChanging
					Me._FCancelacion = value
					Me.SendPropertyChanged("FCancelacion")
					Me.OnFCancelacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Importe() As Single
			Get
				Return Me._Importe
			End Get
			Set
				If ((Me._Importe = value)  _
							= false) Then
					Me.OnImporteChanging(value)
					Me.SendPropertyChanging
					Me._Importe = value
					Me.SendPropertyChanged("Importe")
					Me.OnImporteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObtenidoXFidelizacion", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ObtenidoXFidelizacion() As Boolean
			Get
				Return Me._ObtenidoXFidelizacion
			End Get
			Set
				If ((Me._ObtenidoXFidelizacion = value)  _
							= false) Then
					Me.OnObtenidoXFidelizacionChanging(value)
					Me.SendPropertyChanging
					Me._ObtenidoXFidelizacion = value
					Me.SendPropertyChanged("ObtenidoXFidelizacion")
					Me.OnObtenidoXFidelizacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FComienzo", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property FComienzo() As System.Nullable(Of Date)
			Get
				Return Me._FComienzo
			End Get
			Set
				If (Me._FComienzo.Equals(value) = false) Then
					Me.OnFComienzoChanging(value)
					Me.SendPropertyChanging
					Me._FComienzo = value
					Me.SendPropertyChanged("FComienzo")
					Me.OnFComienzoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsPunto", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property EsPunto() As Boolean
			Get
				Return Me._EsPunto
			End Get
			Set
				If ((Me._EsPunto = value)  _
							= false) Then
					Me.OnEsPuntoChanging(value)
					Me.SendPropertyChanging
					Me._EsPunto = value
					Me.SendPropertyChanged("EsPunto")
					Me.OnEsPuntoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imprimido", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Imprimido() As Boolean
			Get
				Return Me._Imprimido
			End Get
			Set
				If ((Me._Imprimido = value)  _
							= false) Then
					Me.OnImprimidoChanging(value)
					Me.SendPropertyChanging
					Me._Imprimido = value
					Me.SendPropertyChanged("Imprimido")
					Me.OnImprimidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clientes"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Clientes
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCliente As Long
		
		Private _Codigo As String
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _idTipo As System.Nullable(Of Short)
		
		Private _Identificacion As String
		
		Private _NombreContacto As String
		
		Private _AplicableRE As Boolean
		
		Private _AplicableImpIndirecto As Boolean
		
		Private _Direccion As String
		
		Private _CodigoPostal As String
		
		Private _Localidad As String
		
		Private _Provincia As String
		
		Private _Pais As String
		
		Private _Descuento As System.Nullable(Of Single)
		
		Private _Email As String
		
		Private _Movil As String
		
		Private _Fax As String
		
		Private _Telefono As String
		
		Private _FNacimiento As System.Nullable(Of Date)
		
		Private _Observacion As String
		
		Private _Activo As Boolean
		
		Private _FCreacion As Date
		
		Private _FModificacion As System.Nullable(Of Date)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnidTipoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidTipoChanged()
    End Sub
    Partial Private Sub OnIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionChanged()
    End Sub
    Partial Private Sub OnNombreContactoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreContactoChanged()
    End Sub
    Partial Private Sub OnAplicableREChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplicableREChanged()
    End Sub
    Partial Private Sub OnAplicableImpIndirectoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplicableImpIndirectoChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCodigoPostalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoPostalChanged()
    End Sub
    Partial Private Sub OnLocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnLocalidadChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As String)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnFNacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFNacimientoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipo", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idTipo() As System.Nullable(Of Short)
			Get
				Return Me._idTipo
			End Get
			Set
				If (Me._idTipo.Equals(value) = false) Then
					Me.OnidTipoChanging(value)
					Me.SendPropertyChanging
					Me._idTipo = value
					Me.SendPropertyChanged("idTipo")
					Me.OnidTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identificacion", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Identificacion() As String
			Get
				Return Me._Identificacion
			End Get
			Set
				If (String.Equals(Me._Identificacion, value) = false) Then
					Me.OnIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._Identificacion = value
					Me.SendPropertyChanged("Identificacion")
					Me.OnIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreContacto", DbType:="VarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property NombreContacto() As String
			Get
				Return Me._NombreContacto
			End Get
			Set
				If (String.Equals(Me._NombreContacto, value) = false) Then
					Me.OnNombreContactoChanging(value)
					Me.SendPropertyChanging
					Me._NombreContacto = value
					Me.SendPropertyChanged("NombreContacto")
					Me.OnNombreContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AplicableRE", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property AplicableRE() As Boolean
			Get
				Return Me._AplicableRE
			End Get
			Set
				If ((Me._AplicableRE = value)  _
							= false) Then
					Me.OnAplicableREChanging(value)
					Me.SendPropertyChanging
					Me._AplicableRE = value
					Me.SendPropertyChanged("AplicableRE")
					Me.OnAplicableREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AplicableImpIndirecto", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property AplicableImpIndirecto() As Boolean
			Get
				Return Me._AplicableImpIndirecto
			End Get
			Set
				If ((Me._AplicableImpIndirecto = value)  _
							= false) Then
					Me.OnAplicableImpIndirectoChanging(value)
					Me.SendPropertyChanging
					Me._AplicableImpIndirecto = value
					Me.SendPropertyChanged("AplicableImpIndirecto")
					Me.OnAplicableImpIndirectoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoPostal", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property CodigoPostal() As String
			Get
				Return Me._CodigoPostal
			End Get
			Set
				If (String.Equals(Me._CodigoPostal, value) = false) Then
					Me.OnCodigoPostalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoPostal = value
					Me.SendPropertyChanged("CodigoPostal")
					Me.OnCodigoPostalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Localidad", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Localidad() As String
			Get
				Return Me._Localidad
			End Get
			Set
				If (String.Equals(Me._Localidad, value) = false) Then
					Me.OnLocalidadChanging(value)
					Me.SendPropertyChanging
					Me._Localidad = value
					Me.SendPropertyChanged("Localidad")
					Me.OnLocalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Pais() As String
			Get
				Return Me._Pais
			End Get
			Set
				If (String.Equals(Me._Pais, value) = false) Then
					Me.OnPaisChanging(value)
					Me.SendPropertyChanging
					Me._Pais = value
					Me.SendPropertyChanged("Pais")
					Me.OnPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Descuento() As System.Nullable(Of Single)
			Get
				Return Me._Descuento
			End Get
			Set
				If (Me._Descuento.Equals(value) = false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Movil() As String
			Get
				Return Me._Movil
			End Get
			Set
				If (String.Equals(Me._Movil, value) = false) Then
					Me.OnMovilChanging(value)
					Me.SendPropertyChanging
					Me._Movil = value
					Me.SendPropertyChanged("Movil")
					Me.OnMovilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FNacimiento", DbType:="SmallDateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property FNacimiento() As System.Nullable(Of Date)
			Get
				Return Me._FNacimiento
			End Get
			Set
				If (Me._FNacimiento.Equals(value) = false) Then
					Me.OnFNacimientoChanging(value)
					Me.SendPropertyChanging
					Me._FNacimiento = value
					Me.SendPropertyChanged("FNacimiento")
					Me.OnFNacimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWClientes"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWClientes
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idCliente As Long
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _Identificacion As String
		
		Private _idTipo As System.Nullable(Of Short)
		
		Private _AplicableRE As Boolean
		
		Private _Direccion As String
		
		Private _CodigoPostal As String
		
		Private _Localidad As String
		
		Private _Provincia As String
		
		Private _Pais As String
		
		Private _Observacion As String
		
		Private _FCreacion As Date
		
		Private _TipoIdentificacionChn As String
		
		Private _TipoIdentificacionEsp As String
		
		Private _Pendiente As System.Nullable(Of Double)
		
		Private _Activo As Boolean
		
		Private _FModificacion As System.Nullable(Of Date)
		
		Private _TarjetasPoseidas As System.Nullable(Of Integer)
		
		Private _TarjetasSaldos As System.Nullable(Of Double)
		
		Private _Descuento As System.Nullable(Of Single)
		
		Private _Codigo As String
		
		Private _NombreContacto As String
		
		Private _Telefono As String
		
		Private _Fax As String
		
		Private _Movil As String
		
		Private _Email As String
		
		Private _FNacimiento As System.Nullable(Of Date)
		
		Private _AplicableImpIndirecto As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidClienteChanging(value As Long)
    End Sub
    Partial Private Sub OnidClienteChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionChanged()
    End Sub
    Partial Private Sub OnidTipoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidTipoChanged()
    End Sub
    Partial Private Sub OnAplicableREChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplicableREChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCodigoPostalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoPostalChanged()
    End Sub
    Partial Private Sub OnLocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnLocalidadChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionChnChanged()
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIdentificacionEspChanged()
    End Sub
    Partial Private Sub OnPendienteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPendienteChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    Partial Private Sub OnTarjetasPoseidasChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTarjetasPoseidasChanged()
    End Sub
    Partial Private Sub OnTarjetasSaldosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTarjetasSaldosChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreContactoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreContactoChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As String)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnFNacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFNacimientoChanged()
    End Sub
    Partial Private Sub OnAplicableImpIndirectoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAplicableImpIndirectoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idCliente", DbType:="BigInt NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idCliente() As Long
			Get
				Return Me._idCliente
			End Get
			Set
				If ((Me._idCliente = value)  _
							= false) Then
					Me.OnidClienteChanging(value)
					Me.SendPropertyChanging
					Me._idCliente = value
					Me.SendPropertyChanged("idCliente")
					Me.OnidClienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identificacion", DbType:="VarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Identificacion() As String
			Get
				Return Me._Identificacion
			End Get
			Set
				If (String.Equals(Me._Identificacion, value) = false) Then
					Me.OnIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._Identificacion = value
					Me.SendPropertyChanged("Identificacion")
					Me.OnIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipo", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idTipo() As System.Nullable(Of Short)
			Get
				Return Me._idTipo
			End Get
			Set
				If (Me._idTipo.Equals(value) = false) Then
					Me.OnidTipoChanging(value)
					Me.SendPropertyChanging
					Me._idTipo = value
					Me.SendPropertyChanged("idTipo")
					Me.OnidTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AplicableRE", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property AplicableRE() As Boolean
			Get
				Return Me._AplicableRE
			End Get
			Set
				If ((Me._AplicableRE = value)  _
							= false) Then
					Me.OnAplicableREChanging(value)
					Me.SendPropertyChanging
					Me._AplicableRE = value
					Me.SendPropertyChanged("AplicableRE")
					Me.OnAplicableREChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="NVarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoPostal", DbType:="VarChar(20)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property CodigoPostal() As String
			Get
				Return Me._CodigoPostal
			End Get
			Set
				If (String.Equals(Me._CodigoPostal, value) = false) Then
					Me.OnCodigoPostalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoPostal = value
					Me.SendPropertyChanged("CodigoPostal")
					Me.OnCodigoPostalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Localidad", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Localidad() As String
			Get
				Return Me._Localidad
			End Get
			Set
				If (String.Equals(Me._Localidad, value) = false) Then
					Me.OnLocalidadChanging(value)
					Me.SendPropertyChanging
					Me._Localidad = value
					Me.SendPropertyChanged("Localidad")
					Me.OnLocalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Pais() As String
			Get
				Return Me._Pais
			End Get
			Set
				If (String.Equals(Me._Pais, value) = false) Then
					Me.OnPaisChanging(value)
					Me.SendPropertyChanging
					Me._Pais = value
					Me.SendPropertyChanged("Pais")
					Me.OnPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionChn", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property TipoIdentificacionChn() As String
			Get
				Return Me._TipoIdentificacionChn
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionChn, value) = false) Then
					Me.OnTipoIdentificacionChnChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionChn = value
					Me.SendPropertyChanged("TipoIdentificacionChn")
					Me.OnTipoIdentificacionChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIdentificacionEsp", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property TipoIdentificacionEsp() As String
			Get
				Return Me._TipoIdentificacionEsp
			End Get
			Set
				If (String.Equals(Me._TipoIdentificacionEsp, value) = false) Then
					Me.OnTipoIdentificacionEspChanging(value)
					Me.SendPropertyChanging
					Me._TipoIdentificacionEsp = value
					Me.SendPropertyChanged("TipoIdentificacionEsp")
					Me.OnTipoIdentificacionEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pendiente", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Pendiente() As System.Nullable(Of Double)
			Get
				Return Me._Pendiente
			End Get
			Set
				If (Me._Pendiente.Equals(value) = false) Then
					Me.OnPendienteChanging(value)
					Me.SendPropertyChanging
					Me._Pendiente = value
					Me.SendPropertyChanged("Pendiente")
					Me.OnPendienteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TarjetasPoseidas", DbType:="Int", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property TarjetasPoseidas() As System.Nullable(Of Integer)
			Get
				Return Me._TarjetasPoseidas
			End Get
			Set
				If (Me._TarjetasPoseidas.Equals(value) = false) Then
					Me.OnTarjetasPoseidasChanging(value)
					Me.SendPropertyChanging
					Me._TarjetasPoseidas = value
					Me.SendPropertyChanged("TarjetasPoseidas")
					Me.OnTarjetasPoseidasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TarjetasSaldos", DbType:="Float", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property TarjetasSaldos() As System.Nullable(Of Double)
			Get
				Return Me._TarjetasSaldos
			End Get
			Set
				If (Me._TarjetasSaldos.Equals(value) = false) Then
					Me.OnTarjetasSaldosChanging(value)
					Me.SendPropertyChanging
					Me._TarjetasSaldos = value
					Me.SendPropertyChanged("TarjetasSaldos")
					Me.OnTarjetasSaldosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property Descuento() As System.Nullable(Of Single)
			Get
				Return Me._Descuento
			End Get
			Set
				If (Me._Descuento.Equals(value) = false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreContacto", DbType:="VarChar(200)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property NombreContacto() As String
			Get
				Return Me._NombreContacto
			End Get
			Set
				If (String.Equals(Me._NombreContacto, value) = false) Then
					Me.OnNombreContactoChanging(value)
					Me.SendPropertyChanging
					Me._NombreContacto = value
					Me.SendPropertyChanged("NombreContacto")
					Me.OnNombreContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="VarChar(50)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
		Public Property Movil() As String
			Get
				Return Me._Movil
			End Get
			Set
				If (String.Equals(Me._Movil, value) = false) Then
					Me.OnMovilChanging(value)
					Me.SendPropertyChanging
					Me._Movil = value
					Me.SendPropertyChanged("Movil")
					Me.OnMovilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FNacimiento", DbType:="SmallDateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
		Public Property FNacimiento() As System.Nullable(Of Date)
			Get
				Return Me._FNacimiento
			End Get
			Set
				If (Me._FNacimiento.Equals(value) = false) Then
					Me.OnFNacimientoChanging(value)
					Me.SendPropertyChanging
					Me._FNacimiento = value
					Me.SendPropertyChanged("FNacimiento")
					Me.OnFNacimientoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AplicableImpIndirecto", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
		Public Property AplicableImpIndirecto() As Boolean
			Get
				Return Me._AplicableImpIndirecto
			End Get
			Set
				If ((Me._AplicableImpIndirecto = value)  _
							= false) Then
					Me.OnAplicableImpIndirectoChanging(value)
					Me.SendPropertyChanging
					Me._AplicableImpIndirecto = value
					Me.SendPropertyChanged("AplicableImpIndirecto")
					Me.OnAplicableImpIndirectoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tareas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Tareas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTarea As Long
		
		Private _idUsuario As System.Nullable(Of Long)
		
		Private _FechaTarea As Date
		
		Private _Aviso As Date
		
		Private _Tarea As String
		
		Private _Prioridad As Short
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTareaChanging(value As Long)
    End Sub
    Partial Private Sub OnidTareaChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    Partial Private Sub OnFechaTareaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaTareaChanged()
    End Sub
    Partial Private Sub OnAvisoChanging(value As Date)
    End Sub
    Partial Private Sub OnAvisoChanged()
    End Sub
    Partial Private Sub OnTareaChanging(value As String)
    End Sub
    Partial Private Sub OnTareaChanged()
    End Sub
    Partial Private Sub OnPrioridadChanging(value As Short)
    End Sub
    Partial Private Sub OnPrioridadChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTarea", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idTarea() As Long
			Get
				Return Me._idTarea
			End Get
			Set
				If ((Me._idTarea = value)  _
							= false) Then
					Me.OnidTareaChanging(value)
					Me.SendPropertyChanging
					Me._idTarea = value
					Me.SendPropertyChanged("idTarea")
					Me.OnidTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaTarea", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FechaTarea() As Date
			Get
				Return Me._FechaTarea
			End Get
			Set
				If ((Me._FechaTarea = value)  _
							= false) Then
					Me.OnFechaTareaChanging(value)
					Me.SendPropertyChanging
					Me._FechaTarea = value
					Me.SendPropertyChanged("FechaTarea")
					Me.OnFechaTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aviso", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Aviso() As Date
			Get
				Return Me._Aviso
			End Get
			Set
				If ((Me._Aviso = value)  _
							= false) Then
					Me.OnAvisoChanging(value)
					Me.SendPropertyChanging
					Me._Aviso = value
					Me.SendPropertyChanged("Aviso")
					Me.OnAvisoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tarea", DbType:="VarChar(500) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Tarea() As String
			Get
				Return Me._Tarea
			End Get
			Set
				If (String.Equals(Me._Tarea, value) = false) Then
					Me.OnTareaChanging(value)
					Me.SendPropertyChanging
					Me._Tarea = value
					Me.SendPropertyChanged("Tarea")
					Me.OnTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prioridad", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Prioridad() As Short
			Get
				Return Me._Prioridad
			End Get
			Set
				If ((Me._Prioridad = value)  _
							= false) Then
					Me.OnPrioridadChanging(value)
					Me.SendPropertyChanging
					Me._Prioridad = value
					Me.SendPropertyChanged("Prioridad")
					Me.OnPrioridadChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VWTareas"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class VWTareas
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idTarea As Long
		
		Private _FechaTarea As Date
		
		Private _Aviso As Date
		
		Private _Tarea As String
		
		Private _Prioridad As Short
		
		Private _PrioridadChn As String
		
		Private _PrioridadEsp As String
		
		Private _Nombre As String
		
		Private _idUsuario As System.Nullable(Of Long)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidTareaChanging(value As Long)
    End Sub
    Partial Private Sub OnidTareaChanged()
    End Sub
    Partial Private Sub OnFechaTareaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaTareaChanged()
    End Sub
    Partial Private Sub OnAvisoChanging(value As Date)
    End Sub
    Partial Private Sub OnAvisoChanged()
    End Sub
    Partial Private Sub OnTareaChanging(value As String)
    End Sub
    Partial Private Sub OnTareaChanged()
    End Sub
    Partial Private Sub OnPrioridadChanging(value As Short)
    End Sub
    Partial Private Sub OnPrioridadChanged()
    End Sub
    Partial Private Sub OnPrioridadChnChanging(value As String)
    End Sub
    Partial Private Sub OnPrioridadChnChanged()
    End Sub
    Partial Private Sub OnPrioridadEspChanging(value As String)
    End Sub
    Partial Private Sub OnPrioridadEspChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnidUsuarioChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTarea", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idTarea() As Long
			Get
				Return Me._idTarea
			End Get
			Set
				If ((Me._idTarea = value)  _
							= false) Then
					Me.OnidTareaChanging(value)
					Me.SendPropertyChanging
					Me._idTarea = value
					Me.SendPropertyChanged("idTarea")
					Me.OnidTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaTarea", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property FechaTarea() As Date
			Get
				Return Me._FechaTarea
			End Get
			Set
				If ((Me._FechaTarea = value)  _
							= false) Then
					Me.OnFechaTareaChanging(value)
					Me.SendPropertyChanging
					Me._FechaTarea = value
					Me.SendPropertyChanged("FechaTarea")
					Me.OnFechaTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aviso", DbType:="DateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Aviso() As Date
			Get
				Return Me._Aviso
			End Get
			Set
				If ((Me._Aviso = value)  _
							= false) Then
					Me.OnAvisoChanging(value)
					Me.SendPropertyChanging
					Me._Aviso = value
					Me.SendPropertyChanged("Aviso")
					Me.OnAvisoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tarea", DbType:="VarChar(500) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Tarea() As String
			Get
				Return Me._Tarea
			End Get
			Set
				If (String.Equals(Me._Tarea, value) = false) Then
					Me.OnTareaChanging(value)
					Me.SendPropertyChanging
					Me._Tarea = value
					Me.SendPropertyChanged("Tarea")
					Me.OnTareaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prioridad", DbType:="SmallInt NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Prioridad() As Short
			Get
				Return Me._Prioridad
			End Get
			Set
				If ((Me._Prioridad = value)  _
							= false) Then
					Me.OnPrioridadChanging(value)
					Me.SendPropertyChanging
					Me._Prioridad = value
					Me.SendPropertyChanged("Prioridad")
					Me.OnPrioridadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrioridadChn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PrioridadChn() As String
			Get
				Return Me._PrioridadChn
			End Get
			Set
				If (String.Equals(Me._PrioridadChn, value) = false) Then
					Me.OnPrioridadChnChanging(value)
					Me.SendPropertyChanging
					Me._PrioridadChn = value
					Me.SendPropertyChanged("PrioridadChn")
					Me.OnPrioridadChnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrioridadEsp", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property PrioridadEsp() As String
			Get
				Return Me._PrioridadEsp
			End Get
			Set
				If (String.Equals(Me._PrioridadEsp, value) = false) Then
					Me.OnPrioridadEspChanging(value)
					Me.SendPropertyChanging
					Me._PrioridadEsp = value
					Me.SendPropertyChanged("PrioridadEsp")
					Me.OnPrioridadEspChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuario", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property idUsuario() As System.Nullable(Of Long)
			Get
				Return Me._idUsuario
			End Get
			Set
				If (Me._idUsuario.Equals(value) = false) Then
					Me.OnidUsuarioChanging(value)
					Me.SendPropertyChanging
					Me._idUsuario = value
					Me.SendPropertyChanged("idUsuario")
					Me.OnidUsuarioChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RevolucionPreciosCompra"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class RevolucionPreciosCompra
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idItem As Long
		
		Private _idProducto As Long
		
		Private _Fecha As Date
		
		Private _idProveedor As System.Nullable(Of Long)
		
		Private _PrecioFinal As Single
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidItemChanging(value As Long)
    End Sub
    Partial Private Sub OnidItemChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As Date)
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnPrecioFinalChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioFinalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idItem", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idItem() As Long
			Get
				Return Me._idItem
			End Get
			Set
				If ((Me._idItem = value)  _
							= false) Then
					Me.OnidItemChanging(value)
					Me.SendPropertyChanging
					Me._idItem = value
					Me.SendPropertyChanged("idItem")
					Me.OnidItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Fecha() As Date
			Get
				Return Me._Fecha
			End Get
			Set
				If ((Me._Fecha = value)  _
							= false) Then
					Me.OnFechaChanging(value)
					Me.SendPropertyChanging
					Me._Fecha = value
					Me.SendPropertyChanged("Fecha")
					Me.OnFechaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idProveedor() As System.Nullable(Of Long)
			Get
				Return Me._idProveedor
			End Get
			Set
				If (Me._idProveedor.Equals(value) = false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioFinal", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property PrecioFinal() As Single
			Get
				Return Me._PrecioFinal
			End Get
			Set
				If ((Me._PrecioFinal = value)  _
							= false) Then
					Me.OnPrecioFinalChanging(value)
					Me.SendPropertyChanging
					Me._PrecioFinal = value
					Me.SendPropertyChanged("PrecioFinal")
					Me.OnPrecioFinalChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineasImpuestoAlbaran"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class LineasImpuestoAlbaran
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLineaImpuesto As Long
		
		Private _idAlbaran As Long
		
		Private _Base As Single
		
		Private _Impuesto As Single
		
		Private _Recargo As Single
		
		Private _ImporteImpuesto As System.Nullable(Of Single)
		
		Private _ImporteRecargo As System.Nullable(Of Single)
		
		Private _Total As System.Nullable(Of Single)
		
		Private _Albaran As EntityRef(Of Albaranes)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaImpuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaImpuestoChanged()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Single)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As Single)
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnRecargoChanging(value As Single)
    End Sub
    Partial Private Sub OnRecargoChanged()
    End Sub
    Partial Private Sub OnImporteImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteImpuestoChanged()
    End Sub
    Partial Private Sub OnImporteRecargoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteRecargoChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLineaImpuesto", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLineaImpuesto() As Long
			Get
				Return Me._idLineaImpuesto
			End Get
			Set
				If ((Me._idLineaImpuesto = value)  _
							= false) Then
					Me.OnidLineaImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._idLineaImpuesto = value
					Me.SendPropertyChanged("idLineaImpuesto")
					Me.OnidLineaImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idAlbaran() As Long
			Get
				Return Me._idAlbaran
			End Get
			Set
				If ((Me._idAlbaran = value)  _
							= false) Then
					If Me._Albaran.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Base() As Single
			Get
				Return Me._Base
			End Get
			Set
				If ((Me._Base = value)  _
							= false) Then
					Me.OnBaseChanging(value)
					Me.SendPropertyChanging
					Me._Base = value
					Me.SendPropertyChanged("Base")
					Me.OnBaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Impuesto() As Single
			Get
				Return Me._Impuesto
			End Get
			Set
				If ((Me._Impuesto = value)  _
							= false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recargo", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Recargo() As Single
			Get
				Return Me._Recargo
			End Get
			Set
				If ((Me._Recargo = value)  _
							= false) Then
					Me.OnRecargoChanging(value)
					Me.SendPropertyChanging
					Me._Recargo = value
					Me.SendPropertyChanged("Recargo")
					Me.OnRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteImpuesto", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property ImporteImpuesto() As System.Nullable(Of Single)
			Get
				Return Me._ImporteImpuesto
			End Get
			Set
				If (Me._ImporteImpuesto.Equals(value) = false) Then
					Me.OnImporteImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteImpuesto = value
					Me.SendPropertyChanged("ImporteImpuesto")
					Me.OnImporteImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteRecargo", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property ImporteRecargo() As System.Nullable(Of Single)
			Get
				Return Me._ImporteRecargo
			End Get
			Set
				If (Me._ImporteRecargo.Equals(value) = false) Then
					Me.OnImporteRecargoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteRecargo = value
					Me.SendPropertyChanged("ImporteRecargo")
					Me.OnImporteRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Total() As System.Nullable(Of Single)
			Get
				Return Me._Total
			End Get
			Set
				If (Me._Total.Equals(value) = false) Then
					Me.OnTotalChanging(value)
					Me.SendPropertyChanging
					Me._Total = value
					Me.SendPropertyChanged("Total")
					Me.OnTotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Albaranes_LineasImpuestoAlbaran", Storage:="_Albaran", ThisKey:="idAlbaran", OtherKey:="idAlbaran", IsForeignKey:=true)>  _
		Public Property Albaran() As Albaranes
			Get
				Return Me._Albaran.Entity
			End Get
			Set
				Dim previousValue As Albaranes = Me._Albaran.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Albaran.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Albaran.Entity = Nothing
						previousValue.LineasImpuestoAlbaran.Remove(Me)
					End If
					Me._Albaran.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineasImpuestoAlbaran.Add(Me)
						Me._idAlbaran = value.idAlbaran
					Else
						Me._idAlbaran = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Albaran")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Albaran = CType(Nothing, EntityRef(Of Albaranes))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineasImpuestoFactura"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class LineasImpuestoFactura
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLineaImpuesto As Long
		
		Private _idFactura As Long
		
		Private _Base As Single
		
		Private _Impuesto As Single
		
		Private _Recargo As Single
		
		Private _ImporteImpuesto As System.Nullable(Of Single)
		
		Private _ImporteRecargo As System.Nullable(Of Single)
		
		Private _Total As System.Nullable(Of Single)
		
		Private _Facturas As EntityRef(Of Facturas)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaImpuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaImpuestoChanged()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnBaseChanging(value As Single)
    End Sub
    Partial Private Sub OnBaseChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As Single)
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnRecargoChanging(value As Single)
    End Sub
    Partial Private Sub OnRecargoChanged()
    End Sub
    Partial Private Sub OnImporteImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteImpuestoChanged()
    End Sub
    Partial Private Sub OnImporteRecargoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImporteRecargoChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLineaImpuesto", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLineaImpuesto() As Long
			Get
				Return Me._idLineaImpuesto
			End Get
			Set
				If ((Me._idLineaImpuesto = value)  _
							= false) Then
					Me.OnidLineaImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._idLineaImpuesto = value
					Me.SendPropertyChanged("idLineaImpuesto")
					Me.OnidLineaImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idFactura() As Long
			Get
				Return Me._idFactura
			End Get
			Set
				If ((Me._idFactura = value)  _
							= false) Then
					If Me._Facturas.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Base", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Base() As Single
			Get
				Return Me._Base
			End Get
			Set
				If ((Me._Base = value)  _
							= false) Then
					Me.OnBaseChanging(value)
					Me.SendPropertyChanging
					Me._Base = value
					Me.SendPropertyChanged("Base")
					Me.OnBaseChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Impuesto() As Single
			Get
				Return Me._Impuesto
			End Get
			Set
				If ((Me._Impuesto = value)  _
							= false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recargo", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Recargo() As Single
			Get
				Return Me._Recargo
			End Get
			Set
				If ((Me._Recargo = value)  _
							= false) Then
					Me.OnRecargoChanging(value)
					Me.SendPropertyChanging
					Me._Recargo = value
					Me.SendPropertyChanged("Recargo")
					Me.OnRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteImpuesto", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property ImporteImpuesto() As System.Nullable(Of Single)
			Get
				Return Me._ImporteImpuesto
			End Get
			Set
				If (Me._ImporteImpuesto.Equals(value) = false) Then
					Me.OnImporteImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteImpuesto = value
					Me.SendPropertyChanged("ImporteImpuesto")
					Me.OnImporteImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImporteRecargo", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property ImporteRecargo() As System.Nullable(Of Single)
			Get
				Return Me._ImporteRecargo
			End Get
			Set
				If (Me._ImporteRecargo.Equals(value) = false) Then
					Me.OnImporteRecargoChanging(value)
					Me.SendPropertyChanging
					Me._ImporteRecargo = value
					Me.SendPropertyChanged("ImporteRecargo")
					Me.OnImporteRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", AutoSync:=AutoSync.Always, DbType:="Real", IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Total() As System.Nullable(Of Single)
			Get
				Return Me._Total
			End Get
			Set
				If (Me._Total.Equals(value) = false) Then
					Me.OnTotalChanging(value)
					Me.SendPropertyChanging
					Me._Total = value
					Me.SendPropertyChanged("Total")
					Me.OnTotalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Facturas_LineasImpuestoFactura", Storage:="_Facturas", ThisKey:="idFactura", OtherKey:="idFactura", IsForeignKey:=true)>  _
		Public Property Factura() As Facturas
			Get
				Return Me._Facturas.Entity
			End Get
			Set
				Dim previousValue As Facturas = Me._Facturas.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Facturas.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Facturas.Entity = Nothing
						previousValue.LineasImpuestoFactura.Remove(Me)
					End If
					Me._Facturas.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineasImpuestoFactura.Add(Me)
						Me._idFactura = value.idFactura
					Else
						Me._idFactura = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Factura")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Facturas = CType(Nothing, EntityRef(Of Facturas))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Proveedores"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Proveedores
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idProveedor As Long
		
		Private _Nombre As String
		
		Private _NombreCN As String
		
		Private _Identificacion As String
		
		Private _idTipo As System.Nullable(Of Short)
		
		Private _NombreContacto As String
		
		Private _Direccion As String
		
		Private _CodigoPostal As String
		
		Private _Localidad As String
		
		Private _Provincia As String
		
		Private _Pais As String
		
		Private _Email As String
		
		Private _Movil As String
		
		Private _Fax As String
		
		Private _Telefono As String
		
		Private _Observacion As String
		
		Private _Activo As Boolean
		
		Private _DescuentoHabitual As Double
		
		Private _PrecioImpIndIncluido As Boolean
		
		Private _FCreacion As Date
		
		Private _FModificacion As System.Nullable(Of Date)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As Long)
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnNombreCNChanging(value As String)
    End Sub
    Partial Private Sub OnNombreCNChanged()
    End Sub
    Partial Private Sub OnIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionChanged()
    End Sub
    Partial Private Sub OnidTipoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidTipoChanged()
    End Sub
    Partial Private Sub OnNombreContactoChanging(value As String)
    End Sub
    Partial Private Sub OnNombreContactoChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnCodigoPostalChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoPostalChanged()
    End Sub
    Partial Private Sub OnLocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnLocalidadChanged()
    End Sub
    Partial Private Sub OnProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnProvinciaChanged()
    End Sub
    Partial Private Sub OnPaisChanging(value As String)
    End Sub
    Partial Private Sub OnPaisChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnMovilChanging(value As String)
    End Sub
    Partial Private Sub OnMovilChanged()
    End Sub
    Partial Private Sub OnFaxChanging(value As String)
    End Sub
    Partial Private Sub OnFaxChanged()
    End Sub
    Partial Private Sub OnTelefonoChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonoChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnDescuentoHabitualChanging(value As Double)
    End Sub
    Partial Private Sub OnDescuentoHabitualChanged()
    End Sub
    Partial Private Sub OnPrecioImpIncChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrecioImpIncChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idProveedor() As Long
			Get
				Return Me._idProveedor
			End Get
			Set
				If ((Me._idProveedor = value)  _
							= false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCN", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property NombreCN() As String
			Get
				Return Me._NombreCN
			End Get
			Set
				If (String.Equals(Me._NombreCN, value) = false) Then
					Me.OnNombreCNChanging(value)
					Me.SendPropertyChanging
					Me._NombreCN = value
					Me.SendPropertyChanged("NombreCN")
					Me.OnNombreCNChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identificacion", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Identificacion() As String
			Get
				Return Me._Identificacion
			End Get
			Set
				If (String.Equals(Me._Identificacion, value) = false) Then
					Me.OnIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._Identificacion = value
					Me.SendPropertyChanged("Identificacion")
					Me.OnIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idTipo", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idTipo() As System.Nullable(Of Short)
			Get
				Return Me._idTipo
			End Get
			Set
				If (Me._idTipo.Equals(value) = false) Then
					Me.OnidTipoChanging(value)
					Me.SendPropertyChanging
					Me._idTipo = value
					Me.SendPropertyChanged("idTipo")
					Me.OnidTipoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreContacto", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property NombreContacto() As String
			Get
				Return Me._NombreContacto
			End Get
			Set
				If (String.Equals(Me._NombreContacto, value) = false) Then
					Me.OnNombreContactoChanging(value)
					Me.SendPropertyChanging
					Me._NombreContacto = value
					Me.SendPropertyChanged("NombreContacto")
					Me.OnNombreContactoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Direccion() As String
			Get
				Return Me._Direccion
			End Get
			Set
				If (String.Equals(Me._Direccion, value) = false) Then
					Me.OnDireccionChanging(value)
					Me.SendPropertyChanging
					Me._Direccion = value
					Me.SendPropertyChanged("Direccion")
					Me.OnDireccionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoPostal", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property CodigoPostal() As String
			Get
				Return Me._CodigoPostal
			End Get
			Set
				If (String.Equals(Me._CodigoPostal, value) = false) Then
					Me.OnCodigoPostalChanging(value)
					Me.SendPropertyChanging
					Me._CodigoPostal = value
					Me.SendPropertyChanged("CodigoPostal")
					Me.OnCodigoPostalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Localidad", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Localidad() As String
			Get
				Return Me._Localidad
			End Get
			Set
				If (String.Equals(Me._Localidad, value) = false) Then
					Me.OnLocalidadChanging(value)
					Me.SendPropertyChanging
					Me._Localidad = value
					Me.SendPropertyChanged("Localidad")
					Me.OnLocalidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Provincia", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Provincia() As String
			Get
				Return Me._Provincia
			End Get
			Set
				If (String.Equals(Me._Provincia, value) = false) Then
					Me.OnProvinciaChanging(value)
					Me.SendPropertyChanging
					Me._Provincia = value
					Me.SendPropertyChanged("Provincia")
					Me.OnProvinciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pais", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Pais() As String
			Get
				Return Me._Pais
			End Get
			Set
				If (String.Equals(Me._Pais, value) = false) Then
					Me.OnPaisChanging(value)
					Me.SendPropertyChanging
					Me._Pais = value
					Me.SendPropertyChanged("Pais")
					Me.OnPaisChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Movil", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Movil() As String
			Get
				Return Me._Movil
			End Get
			Set
				If (String.Equals(Me._Movil, value) = false) Then
					Me.OnMovilChanging(value)
					Me.SendPropertyChanging
					Me._Movil = value
					Me.SendPropertyChanged("Movil")
					Me.OnMovilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fax", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Fax() As String
			Get
				Return Me._Fax
			End Get
			Set
				If (String.Equals(Me._Fax, value) = false) Then
					Me.OnFaxChanging(value)
					Me.SendPropertyChanging
					Me._Fax = value
					Me.SendPropertyChanged("Fax")
					Me.OnFaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefono", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Telefono() As String
			Get
				Return Me._Telefono
			End Get
			Set
				If (String.Equals(Me._Telefono, value) = false) Then
					Me.OnTelefonoChanging(value)
					Me.SendPropertyChanging
					Me._Telefono = value
					Me.SendPropertyChanged("Telefono")
					Me.OnTelefonoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(500)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescuentoHabitual", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property DescuentoHabitual() As Double
			Get
				Return Me._DescuentoHabitual
			End Get
			Set
				If ((Me._DescuentoHabitual = value)  _
							= false) Then
					Me.OnDescuentoHabitualChanging(value)
					Me.SendPropertyChanging
					Me._DescuentoHabitual = value
					Me.SendPropertyChanged("DescuentoHabitual")
					Me.OnDescuentoHabitualChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioImpIndIncluido", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property PrecioImpInc() As Boolean
			Get
				Return Me._PrecioImpIndIncluido
			End Get
			Set
				If ((Me._PrecioImpIndIncluido = value)  _
							= false) Then
					Me.OnPrecioImpIncChanging(value)
					Me.SendPropertyChanging
					Me._PrecioImpIndIncluido = value
					Me.SendPropertyChanged("PrecioImpInc")
					Me.OnPrecioImpIncChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineasFactura"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class LineasFactura
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idFactura As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _Referencia As String
		
		Private _DescripcionProducto As String
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Descuento As Single
		
		Private _Impuesto As System.Nullable(Of Single)
		
		Private _Recargo As System.Nullable(Of Single)
		
		Private _PrecioFinal As Single
		
		Private _Facturas As EntityRef(Of Facturas)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidFacturaChanging(value As Long)
    End Sub
    Partial Private Sub OnidFacturaChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnPrecioNetoChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioNetoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Single)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnRecargoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnRecargoChanged()
    End Sub
    Partial Private Sub OnPrecioFinalChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioFinalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFactura", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idFactura() As Long
			Get
				Return Me._idFactura
			End Get
			Set
				If ((Me._idFactura = value)  _
							= false) Then
					If Me._Facturas.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidFacturaChanging(value)
					Me.SendPropertyChanging
					Me._idFactura = value
					Me.SendPropertyChanged("idFactura")
					Me.OnidFacturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Precio", Storage:="_Precio", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PrecioNeto() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioNetoChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("PrecioNeto")
					Me.OnPrecioNetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Descuento() As Single
			Get
				Return Me._Descuento
			End Get
			Set
				If ((Me._Descuento = value)  _
							= false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Impuesto() As System.Nullable(Of Single)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recargo", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Recargo() As System.Nullable(Of Single)
			Get
				Return Me._Recargo
			End Get
			Set
				If (Me._Recargo.Equals(value) = false) Then
					Me.OnRecargoChanging(value)
					Me.SendPropertyChanging
					Me._Recargo = value
					Me.SendPropertyChanged("Recargo")
					Me.OnRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioFinal", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property PrecioFinal() As Single
			Get
				Return Me._PrecioFinal
			End Get
			Set
				If ((Me._PrecioFinal = value)  _
							= false) Then
					Me.OnPrecioFinalChanging(value)
					Me.SendPropertyChanging
					Me._PrecioFinal = value
					Me.SendPropertyChanged("PrecioFinal")
					Me.OnPrecioFinalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Facturas_LineasFactura", Storage:="_Facturas", ThisKey:="idFactura", OtherKey:="idFactura", IsForeignKey:=true)>  _
		Public Property Factura() As Facturas
			Get
				Return Me._Facturas.Entity
			End Get
			Set
				Dim previousValue As Facturas = Me._Facturas.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Facturas.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Facturas.Entity = Nothing
						previousValue.LineasFactura.Remove(Me)
					End If
					Me._Facturas.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineasFactura.Add(Me)
						Me._idFactura = value.idFactura
					Else
						Me._idFactura = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Factura")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Facturas = CType(Nothing, EntityRef(Of Facturas))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineasAlbaran"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class LineasAlbaran
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idAlbaran As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _Referencia As String
		
		Private _DescripcionProducto As String
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Descuento As Single
		
		Private _Impuesto As System.Nullable(Of Single)
		
		Private _Recargo As System.Nullable(Of Single)
		
		Private _PrecioFinal As Single
		
		Private _Albaran As EntityRef(Of Albaranes)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidAlbaranChanging(value As Long)
    End Sub
    Partial Private Sub OnidAlbaranChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnPrecioNetoChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioNetoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Single)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnRecargoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnRecargoChanged()
    End Sub
    Partial Private Sub OnPrecioFinalChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioFinalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idAlbaran", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idAlbaran() As Long
			Get
				Return Me._idAlbaran
			End Get
			Set
				If ((Me._idAlbaran = value)  _
							= false) Then
					If Me._Albaran.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidAlbaranChanging(value)
					Me.SendPropertyChanging
					Me._idAlbaran = value
					Me.SendPropertyChanged("idAlbaran")
					Me.OnidAlbaranChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Precio", Storage:="_Precio", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PrecioNeto() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioNetoChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("PrecioNeto")
					Me.OnPrecioNetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Descuento() As Single
			Get
				Return Me._Descuento
			End Get
			Set
				If ((Me._Descuento = value)  _
							= false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Impuesto() As System.Nullable(Of Single)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recargo", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Recargo() As System.Nullable(Of Single)
			Get
				Return Me._Recargo
			End Get
			Set
				If (Me._Recargo.Equals(value) = false) Then
					Me.OnRecargoChanging(value)
					Me.SendPropertyChanging
					Me._Recargo = value
					Me.SendPropertyChanged("Recargo")
					Me.OnRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioFinal", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property PrecioFinal() As Single
			Get
				Return Me._PrecioFinal
			End Get
			Set
				If ((Me._PrecioFinal = value)  _
							= false) Then
					Me.OnPrecioFinalChanging(value)
					Me.SendPropertyChanging
					Me._PrecioFinal = value
					Me.SendPropertyChanged("PrecioFinal")
					Me.OnPrecioFinalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Albaranes_LineasAlbaran", Storage:="_Albaran", ThisKey:="idAlbaran", OtherKey:="idAlbaran", IsForeignKey:=true)>  _
		Public Property Albaran() As Albaranes
			Get
				Return Me._Albaran.Entity
			End Get
			Set
				Dim previousValue As Albaranes = Me._Albaran.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Albaran.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Albaran.Entity = Nothing
						previousValue.LineasAlbaran.Remove(Me)
					End If
					Me._Albaran.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineasAlbaran.Add(Me)
						Me._idAlbaran = value.idAlbaran
					Else
						Me._idAlbaran = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Albaran")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Albaran = CType(Nothing, EntityRef(Of Albaranes))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LineasPedido"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class LineasPedido
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idLinea As Long
		
		Private _idPedido As Long
		
		Private _idProducto As System.Nullable(Of Long)
		
		Private _DescripcionProducto As String
		
		Private _Precio As Single
		
		Private _Cantidad As Single
		
		Private _Impuesto As System.Nullable(Of Single)
		
		Private _Recargo As System.Nullable(Of Single)
		
		Private _Descuento As Single
		
		Private _PrecioFinal As Single
		
		Private _Pedidos As EntityRef(Of Pedidos)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidLineaChanging(value As Long)
    End Sub
    Partial Private Sub OnidLineaChanged()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnidProductoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnDescripcionProductoChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionProductoChanged()
    End Sub
    Partial Private Sub OnPrecioNetoChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioNetoChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As Single)
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnImpuestoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnImpuestoChanged()
    End Sub
    Partial Private Sub OnRecargoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnRecargoChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As Single)
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnPrecioFinalChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioFinalChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idLinea", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idLinea() As Long
			Get
				Return Me._idLinea
			End Get
			Set
				If ((Me._idLinea = value)  _
							= false) Then
					Me.OnidLineaChanging(value)
					Me.SendPropertyChanging
					Me._idLinea = value
					Me.SendPropertyChanged("idLinea")
					Me.OnidLineaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idPedido() As Long
			Get
				Return Me._idPedido
			End Get
			Set
				If ((Me._idPedido = value)  _
							= false) Then
					If Me._Pedidos.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idProducto() As System.Nullable(Of Long)
			Get
				Return Me._idProducto
			End Get
			Set
				If (Me._idProducto.Equals(value) = false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionProducto", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property DescripcionProducto() As String
			Get
				Return Me._DescripcionProducto
			End Get
			Set
				If (String.Equals(Me._DescripcionProducto, value) = false) Then
					Me.OnDescripcionProductoChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionProducto = value
					Me.SendPropertyChanged("DescripcionProducto")
					Me.OnDescripcionProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Precio", Storage:="_Precio", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property PrecioNeto() As Single
			Get
				Return Me._Precio
			End Get
			Set
				If ((Me._Precio = value)  _
							= false) Then
					Me.OnPrecioNetoChanging(value)
					Me.SendPropertyChanging
					Me._Precio = value
					Me.SendPropertyChanged("PrecioNeto")
					Me.OnPrecioNetoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Cantidad() As Single
			Get
				Return Me._Cantidad
			End Get
			Set
				If ((Me._Cantidad = value)  _
							= false) Then
					Me.OnCantidadChanging(value)
					Me.SendPropertyChanging
					Me._Cantidad = value
					Me.SendPropertyChanged("Cantidad")
					Me.OnCantidadChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Impuesto", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Impuesto() As System.Nullable(Of Single)
			Get
				Return Me._Impuesto
			End Get
			Set
				If (Me._Impuesto.Equals(value) = false) Then
					Me.OnImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._Impuesto = value
					Me.SendPropertyChanged("Impuesto")
					Me.OnImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recargo", DbType:="Real"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Recargo() As System.Nullable(Of Single)
			Get
				Return Me._Recargo
			End Get
			Set
				If (Me._Recargo.Equals(value) = false) Then
					Me.OnRecargoChanging(value)
					Me.SendPropertyChanging
					Me._Recargo = value
					Me.SendPropertyChanged("Recargo")
					Me.OnRecargoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Descuento() As Single
			Get
				Return Me._Descuento
			End Get
			Set
				If ((Me._Descuento = value)  _
							= false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioFinal", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property PrecioFinal() As Single
			Get
				Return Me._PrecioFinal
			End Get
			Set
				If ((Me._PrecioFinal = value)  _
							= false) Then
					Me.OnPrecioFinalChanging(value)
					Me.SendPropertyChanging
					Me._PrecioFinal = value
					Me.SendPropertyChanged("PrecioFinal")
					Me.OnPrecioFinalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Pedidos_LineasPedido", Storage:="_Pedidos", ThisKey:="idPedido", OtherKey:="idPedido", IsForeignKey:=true)>  _
		Public Property Pedidos() As Pedidos
			Get
				Return Me._Pedidos.Entity
			End Get
			Set
				Dim previousValue As Pedidos = Me._Pedidos.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Pedidos.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Pedidos.Entity = Nothing
						previousValue.LineasPedido.Remove(Me)
					End If
					Me._Pedidos.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.LineasPedido.Add(Me)
						Me._idPedido = value.idPedido
					Else
						Me._idPedido = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Pedidos")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Pedidos = CType(Nothing, EntityRef(Of Pedidos))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Productos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Productos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idProducto As Long
		
		Private _idUnidadMedida As System.Nullable(Of Long)
		
		Private _idFamilia As System.Nullable(Of Long)
		
		Private _idMarca As System.Nullable(Of Long)
		
		Private _idUbicacion As System.Nullable(Of Long)
		
		Private _idOferta As System.Nullable(Of Long)
		
		Private _idImpuesto As System.Nullable(Of Short)
		
		Private _Referencia As String
		
		Private _Descripcion As String
		
		Private _DescripcionLarga As String
		
		Private _Coste As Single
		
		Private _PrecioVenta As Single
		
		Private _Descuento As System.Nullable(Of Single)
		
		Private _UnidadXCaja As System.Nullable(Of Single)
		
		Private _StockSuelto As System.Nullable(Of Single)
		
		Private _StockCaja As System.Nullable(Of Single)
		
		Private _UnidadVenta As Single
		
		Private _ControlStock As Boolean
		
		Private _PrecioVariable As Boolean
		
		Private _Observacion As String
		
		Private _FCreacion As Date
		
		Private _FModificacion As System.Nullable(Of Date)
		
		Private _Activo As Boolean
		
		Private _PrecioImpInc As Boolean
		
		Private _Fidelizable As Boolean
		
		Private _PorcentajeFacturacion As Double
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidProductoChanging(value As Long)
    End Sub
    Partial Private Sub OnidProductoChanged()
    End Sub
    Partial Private Sub OnidUnidadMedidaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUnidadMedidaChanged()
    End Sub
    Partial Private Sub OnidFamiliaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidFamiliaChanged()
    End Sub
    Partial Private Sub OnidMarcaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidMarcaChanged()
    End Sub
    Partial Private Sub OnidUbicacionChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUbicacionChanged()
    End Sub
    Partial Private Sub OnidOfertaChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidOfertaChanged()
    End Sub
    Partial Private Sub OnidImpuestoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnidImpuestoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnDescripcionLargaChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionLargaChanged()
    End Sub
    Partial Private Sub OnCosteChanging(value As Single)
    End Sub
    Partial Private Sub OnCosteChanged()
    End Sub
    Partial Private Sub OnPrecioVentaChanging(value As Single)
    End Sub
    Partial Private Sub OnPrecioVentaChanged()
    End Sub
    Partial Private Sub OnDescuentoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnDescuentoChanged()
    End Sub
    Partial Private Sub OnUnidadXCajaChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnUnidadXCajaChanged()
    End Sub
    Partial Private Sub OnStockSueltoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnStockSueltoChanged()
    End Sub
    Partial Private Sub OnStockCajaChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnStockCajaChanged()
    End Sub
    Partial Private Sub OnUnidadVentaChanging(value As Single)
    End Sub
    Partial Private Sub OnUnidadVentaChanged()
    End Sub
    Partial Private Sub OnControlStockChanging(value As Boolean)
    End Sub
    Partial Private Sub OnControlStockChanged()
    End Sub
    Partial Private Sub OnPrecioVariableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrecioVariableChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnFModificacionChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFModificacionChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnPrecioImpIncChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrecioImpIncChanged()
    End Sub
    Partial Private Sub OnFidelizableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFidelizableChanged()
    End Sub
    Partial Private Sub OnPorcentajeFacturacionChanging(value As Double)
    End Sub
    Partial Private Sub OnPorcentajeFacturacionChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProducto", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idProducto() As Long
			Get
				Return Me._idProducto
			End Get
			Set
				If ((Me._idProducto = value)  _
							= false) Then
					Me.OnidProductoChanging(value)
					Me.SendPropertyChanging
					Me._idProducto = value
					Me.SendPropertyChanged("idProducto")
					Me.OnidProductoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUnidadMedida", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idUnidadMedida() As System.Nullable(Of Long)
			Get
				Return Me._idUnidadMedida
			End Get
			Set
				If (Me._idUnidadMedida.Equals(value) = false) Then
					Me.OnidUnidadMedidaChanging(value)
					Me.SendPropertyChanging
					Me._idUnidadMedida = value
					Me.SendPropertyChanged("idUnidadMedida")
					Me.OnidUnidadMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFamilia", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idFamilia() As System.Nullable(Of Long)
			Get
				Return Me._idFamilia
			End Get
			Set
				If (Me._idFamilia.Equals(value) = false) Then
					Me.OnidFamiliaChanging(value)
					Me.SendPropertyChanging
					Me._idFamilia = value
					Me.SendPropertyChanged("idFamilia")
					Me.OnidFamiliaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idMarca", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idMarca() As System.Nullable(Of Long)
			Get
				Return Me._idMarca
			End Get
			Set
				If (Me._idMarca.Equals(value) = false) Then
					Me.OnidMarcaChanging(value)
					Me.SendPropertyChanging
					Me._idMarca = value
					Me.SendPropertyChanged("idMarca")
					Me.OnidMarcaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUbicacion", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property idUbicacion() As System.Nullable(Of Long)
			Get
				Return Me._idUbicacion
			End Get
			Set
				If (Me._idUbicacion.Equals(value) = false) Then
					Me.OnidUbicacionChanging(value)
					Me.SendPropertyChanging
					Me._idUbicacion = value
					Me.SendPropertyChanged("idUbicacion")
					Me.OnidUbicacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idOferta", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property idOferta() As System.Nullable(Of Long)
			Get
				Return Me._idOferta
			End Get
			Set
				If (Me._idOferta.Equals(value) = false) Then
					Me.OnidOfertaChanging(value)
					Me.SendPropertyChanging
					Me._idOferta = value
					Me.SendPropertyChanged("idOferta")
					Me.OnidOfertaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idImpuesto", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property idImpuesto() As System.Nullable(Of Short)
			Get
				Return Me._idImpuesto
			End Get
			Set
				If (Me._idImpuesto.Equals(value) = false) Then
					Me.OnidImpuestoChanging(value)
					Me.SendPropertyChanging
					Me._idImpuesto = value
					Me.SendPropertyChanged("idImpuesto")
					Me.OnidImpuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescripcionLarga", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property DescripcionLarga() As String
			Get
				Return Me._DescripcionLarga
			End Get
			Set
				If (String.Equals(Me._DescripcionLarga, value) = false) Then
					Me.OnDescripcionLargaChanging(value)
					Me.SendPropertyChanging
					Me._DescripcionLarga = value
					Me.SendPropertyChanged("DescripcionLarga")
					Me.OnDescripcionLargaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coste", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Coste() As Single
			Get
				Return Me._Coste
			End Get
			Set
				If ((Me._Coste = value)  _
							= false) Then
					Me.OnCosteChanging(value)
					Me.SendPropertyChanging
					Me._Coste = value
					Me.SendPropertyChanged("Coste")
					Me.OnCosteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioVenta", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property PrecioVenta() As Single
			Get
				Return Me._PrecioVenta
			End Get
			Set
				If ((Me._PrecioVenta = value)  _
							= false) Then
					Me.OnPrecioVentaChanging(value)
					Me.SendPropertyChanging
					Me._PrecioVenta = value
					Me.SendPropertyChanged("PrecioVenta")
					Me.OnPrecioVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descuento", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Descuento() As System.Nullable(Of Single)
			Get
				Return Me._Descuento
			End Get
			Set
				If (Me._Descuento.Equals(value) = false) Then
					Me.OnDescuentoChanging(value)
					Me.SendPropertyChanging
					Me._Descuento = value
					Me.SendPropertyChanged("Descuento")
					Me.OnDescuentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadXCaja", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property UnidadXCaja() As System.Nullable(Of Single)
			Get
				Return Me._UnidadXCaja
			End Get
			Set
				If (Me._UnidadXCaja.Equals(value) = false) Then
					Me.OnUnidadXCajaChanging(value)
					Me.SendPropertyChanging
					Me._UnidadXCaja = value
					Me.SendPropertyChanged("UnidadXCaja")
					Me.OnUnidadXCajaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockSuelto", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property StockSuelto() As System.Nullable(Of Single)
			Get
				Return Me._StockSuelto
			End Get
			Set
				If (Me._StockSuelto.Equals(value) = false) Then
					Me.OnStockSueltoChanging(value)
					Me.SendPropertyChanging
					Me._StockSuelto = value
					Me.SendPropertyChanged("StockSuelto")
					Me.OnStockSueltoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockCaja", DbType:="Real", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property StockCaja() As System.Nullable(Of Single)
			Get
				Return Me._StockCaja
			End Get
			Set
				If (Me._StockCaja.Equals(value) = false) Then
					Me.OnStockCajaChanging(value)
					Me.SendPropertyChanging
					Me._StockCaja = value
					Me.SendPropertyChanged("StockCaja")
					Me.OnStockCajaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadVenta", DbType:="Real NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property UnidadVenta() As Single
			Get
				Return Me._UnidadVenta
			End Get
			Set
				If ((Me._UnidadVenta = value)  _
							= false) Then
					Me.OnUnidadVentaChanging(value)
					Me.SendPropertyChanging
					Me._UnidadVenta = value
					Me.SendPropertyChanged("UnidadVenta")
					Me.OnUnidadVentaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlStock", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property ControlStock() As Boolean
			Get
				Return Me._ControlStock
			End Get
			Set
				If ((Me._ControlStock = value)  _
							= false) Then
					Me.OnControlStockChanging(value)
					Me.SendPropertyChanging
					Me._ControlStock = value
					Me.SendPropertyChanged("ControlStock")
					Me.OnControlStockChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioVariable", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property PrecioVariable() As Boolean
			Get
				Return Me._PrecioVariable
			End Get
			Set
				If ((Me._PrecioVariable = value)  _
							= false) Then
					Me.OnPrecioVariableChanging(value)
					Me.SendPropertyChanging
					Me._PrecioVariable = value
					Me.SendPropertyChanged("PrecioVariable")
					Me.OnPrecioVariableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property Observacion() As String
			Get
				Return Me._Observacion
			End Get
			Set
				If (String.Equals(Me._Observacion, value) = false) Then
					Me.OnObservacionChanging(value)
					Me.SendPropertyChanging
					Me._Observacion = value
					Me.SendPropertyChanged("Observacion")
					Me.OnObservacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FModificacion", DbType:="SmallDateTime", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property FModificacion() As System.Nullable(Of Date)
			Get
				Return Me._FModificacion
			End Get
			Set
				If (Me._FModificacion.Equals(value) = false) Then
					Me.OnFModificacionChanging(value)
					Me.SendPropertyChanging
					Me._FModificacion = value
					Me.SendPropertyChanged("FModificacion")
					Me.OnFModificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property Activo() As Boolean
			Get
				Return Me._Activo
			End Get
			Set
				If ((Me._Activo = value)  _
							= false) Then
					Me.OnActivoChanging(value)
					Me.SendPropertyChanging
					Me._Activo = value
					Me.SendPropertyChanged("Activo")
					Me.OnActivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrecioImpInc", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property PrecioImpInc() As Boolean
			Get
				Return Me._PrecioImpInc
			End Get
			Set
				If ((Me._PrecioImpInc = value)  _
							= false) Then
					Me.OnPrecioImpIncChanging(value)
					Me.SendPropertyChanging
					Me._PrecioImpInc = value
					Me.SendPropertyChanged("PrecioImpInc")
					Me.OnPrecioImpIncChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fidelizable", DbType:="Bit NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
		Public Property Fidelizable() As Boolean
			Get
				Return Me._Fidelizable
			End Get
			Set
				If ((Me._Fidelizable = value)  _
							= false) Then
					Me.OnFidelizableChanging(value)
					Me.SendPropertyChanging
					Me._Fidelizable = value
					Me.SendPropertyChanged("Fidelizable")
					Me.OnFidelizableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PorcentajeFacturacion", DbType:="Float NOT NULL", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
		Public Property PorcentajeFacturacion() As Double
			Get
				Return Me._PorcentajeFacturacion
			End Get
			Set
				If ((Me._PorcentajeFacturacion = value)  _
							= false) Then
					Me.OnPorcentajeFacturacionChanging(value)
					Me.SendPropertyChanging
					Me._PorcentajeFacturacion = value
					Me.SendPropertyChanged("PorcentajeFacturacion")
					Me.OnPorcentajeFacturacionChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Pedidos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Pedidos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idPedido As Long
		
		Private _idProveedor As System.Nullable(Of Long)
		
		Private _idUsuarioEmitido As System.Nullable(Of Long)
		
		Private _NumPedido As String
		
		Private _FPedido As Date
		
		Private _FCreacion As Date
		
		Private _Pago As Single
		
		Private _Pagado As Boolean
		
		Private _NumeracionPedido As Long
		
		Private _ImpIndIncluido As Boolean
		
		Private _LineasPedido As EntitySet(Of LineasPedido)
		
		Private serializing As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidPedidoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPedidoChanged()
    End Sub
    Partial Private Sub OnidProveedorChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidProveedorChanged()
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnidUsuarioEmitidoChanged()
    End Sub
    Partial Private Sub OnNumPedidoChanging(value As String)
    End Sub
    Partial Private Sub OnNumPedidoChanged()
    End Sub
    Partial Private Sub OnFPedidoChanging(value As Date)
    End Sub
    Partial Private Sub OnFPedidoChanged()
    End Sub
    Partial Private Sub OnFCreacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFCreacionChanged()
    End Sub
    Partial Private Sub OnPagoChanging(value As Single)
    End Sub
    Partial Private Sub OnPagoChanged()
    End Sub
    Partial Private Sub OnPagadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPagadoChanged()
    End Sub
    Partial Private Sub OnNumeracionPedidoChanging(value As Long)
    End Sub
    Partial Private Sub OnNumeracionPedidoChanged()
    End Sub
    Partial Private Sub OnImpIndIncluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnImpIndIncluidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPedido", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idPedido() As Long
			Get
				Return Me._idPedido
			End Get
			Set
				If ((Me._idPedido = value)  _
							= false) Then
					Me.OnidPedidoChanging(value)
					Me.SendPropertyChanging
					Me._idPedido = value
					Me.SendPropertyChanged("idPedido")
					Me.OnidPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idProveedor", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idProveedor() As System.Nullable(Of Long)
			Get
				Return Me._idProveedor
			End Get
			Set
				If (Me._idProveedor.Equals(value) = false) Then
					Me.OnidProveedorChanging(value)
					Me.SendPropertyChanging
					Me._idProveedor = value
					Me.SendPropertyChanged("idProveedor")
					Me.OnidProveedorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idUsuarioEmitido", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property idUsuarioEmitido() As System.Nullable(Of Long)
			Get
				Return Me._idUsuarioEmitido
			End Get
			Set
				If (Me._idUsuarioEmitido.Equals(value) = false) Then
					Me.OnidUsuarioEmitidoChanging(value)
					Me.SendPropertyChanging
					Me._idUsuarioEmitido = value
					Me.SendPropertyChanged("idUsuarioEmitido")
					Me.OnidUsuarioEmitidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumPedido", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property NumPedido() As String
			Get
				Return Me._NumPedido
			End Get
			Set
				If (String.Equals(Me._NumPedido, value) = false) Then
					Me.OnNumPedidoChanging(value)
					Me.SendPropertyChanging
					Me._NumPedido = value
					Me.SendPropertyChanged("NumPedido")
					Me.OnNumPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FPedido", DbType:="DateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property FPedido() As Date
			Get
				Return Me._FPedido
			End Get
			Set
				If ((Me._FPedido = value)  _
							= false) Then
					Me.OnFPedidoChanging(value)
					Me.SendPropertyChanging
					Me._FPedido = value
					Me.SendPropertyChanged("FPedido")
					Me.OnFPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FCreacion", DbType:="SmallDateTime NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property FCreacion() As Date
			Get
				Return Me._FCreacion
			End Get
			Set
				If ((Me._FCreacion = value)  _
							= false) Then
					Me.OnFCreacionChanging(value)
					Me.SendPropertyChanging
					Me._FCreacion = value
					Me.SendPropertyChanged("FCreacion")
					Me.OnFCreacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pago", DbType:="Real NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Pago() As Single
			Get
				Return Me._Pago
			End Get
			Set
				If ((Me._Pago = value)  _
							= false) Then
					Me.OnPagoChanging(value)
					Me.SendPropertyChanging
					Me._Pago = value
					Me.SendPropertyChanged("Pago")
					Me.OnPagoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pagado", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Pagado() As Boolean
			Get
				Return Me._Pagado
			End Get
			Set
				If ((Me._Pagado = value)  _
							= false) Then
					Me.OnPagadoChanging(value)
					Me.SendPropertyChanging
					Me._Pagado = value
					Me.SendPropertyChanged("Pagado")
					Me.OnPagadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeracionPedido", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property NumeracionPedido() As Long
			Get
				Return Me._NumeracionPedido
			End Get
			Set
				If ((Me._NumeracionPedido = value)  _
							= false) Then
					Me.OnNumeracionPedidoChanging(value)
					Me.SendPropertyChanging
					Me._NumeracionPedido = value
					Me.SendPropertyChanged("NumeracionPedido")
					Me.OnNumeracionPedidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImpIndIncluido", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ImpIndIncluido() As Boolean
			Get
				Return Me._ImpIndIncluido
			End Get
			Set
				If ((Me._ImpIndIncluido = value)  _
							= false) Then
					Me.OnImpIndIncluidoChanging(value)
					Me.SendPropertyChanging
					Me._ImpIndIncluido = value
					Me.SendPropertyChanged("ImpIndIncluido")
					Me.OnImpIndIncluidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Pedidos_LineasPedido", Storage:="_LineasPedido", ThisKey:="idPedido", OtherKey:="idPedido"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11, EmitDefaultValue:=false)>  _
		Public Property LineasPedido() As EntitySet(Of LineasPedido)
			Get
				If (Me.serializing  _
							AndAlso (Me._LineasPedido.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._LineasPedido
			End Get
			Set
				Me._LineasPedido.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_LineasPedido(ByVal entity As LineasPedido)
			Me.SendPropertyChanging
			entity.Pedidos = Me
		End Sub
		
		Private Sub detach_LineasPedido(ByVal entity As LineasPedido)
			Me.SendPropertyChanging
			entity.Pedidos = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._LineasPedido = New EntitySet(Of LineasPedido)(AddressOf Me.attach_LineasPedido, AddressOf Me.detach_LineasPedido)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Configuraciones"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Configuraciones
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idConfiguracion As Long
		
		Private _Parametro As String
		
		Private _Valor As String
		
		Private _idEmpresa As Long
		
		Private _Empresas As EntityRef(Of Empresas)
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidConfiguracionChanging(value As Long)
    End Sub
    Partial Private Sub OnidConfiguracionChanged()
    End Sub
    Partial Private Sub OnParametroChanging(value As String)
    End Sub
    Partial Private Sub OnParametroChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    Partial Private Sub OnidEmpresaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEmpresaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idConfiguracion", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idConfiguracion() As Long
			Get
				Return Me._idConfiguracion
			End Get
			Set
				If ((Me._idConfiguracion = value)  _
							= false) Then
					Me.OnidConfiguracionChanging(value)
					Me.SendPropertyChanging
					Me._idConfiguracion = value
					Me.SendPropertyChanged("idConfiguracion")
					Me.OnidConfiguracionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Parametro", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Parametro() As String
			Get
				Return Me._Parametro
			End Get
			Set
				If (String.Equals(Me._Parametro, value) = false) Then
					Me.OnParametroChanging(value)
					Me.SendPropertyChanging
					Me._Parametro = value
					Me.SendPropertyChanged("Parametro")
					Me.OnParametroChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEmpresa", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property idEmpresa() As Long
			Get
				Return Me._idEmpresa
			End Get
			Set
				If ((Me._idEmpresa = value)  _
							= false) Then
					If Me._Empresas.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnidEmpresaChanging(value)
					Me.SendPropertyChanging
					Me._idEmpresa = value
					Me.SendPropertyChanged("idEmpresa")
					Me.OnidEmpresaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Empresas_Configuraciones", Storage:="_Empresas", ThisKey:="idEmpresa", OtherKey:="idEmpresa", IsForeignKey:=true)>  _
		Public Property Empresa() As Empresas
			Get
				Return Me._Empresas.Entity
			End Get
			Set
				Dim previousValue As Empresas = Me._Empresas.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Empresas.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Empresas.Entity = Nothing
						previousValue.Configuraciones.Remove(Me)
					End If
					Me._Empresas.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Configuraciones.Add(Me)
						Me._idEmpresa = value.idEmpresa
					Else
						Me._idEmpresa = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("Empresa")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Empresas = CType(Nothing, EntityRef(Of Empresas))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DiseñosEtiqueta"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class DiseñosEtiqueta
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idDiseño As Long
		
		Private _idEtiqueta As Long
		
		Private _TipoEtiqueta As Char
		
		Private _Nombre As String
		
		Private _Descripcion As String
		
		Private _XMLDiseño As System.Xml.Linq.XElement
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidDiseñoChanging(value As Long)
    End Sub
    Partial Private Sub OnidDiseñoChanged()
    End Sub
    Partial Private Sub OnidEtiquetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEtiquetaChanged()
    End Sub
    Partial Private Sub OnTipoEtiquetaChanging(value As Char)
    End Sub
    Partial Private Sub OnTipoEtiquetaChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnXMLDiseñoChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnXMLDiseñoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idDiseño", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idDiseño() As Long
			Get
				Return Me._idDiseño
			End Get
			Set
				If ((Me._idDiseño = value)  _
							= false) Then
					Me.OnidDiseñoChanging(value)
					Me.SendPropertyChanging
					Me._idDiseño = value
					Me.SendPropertyChanged("idDiseño")
					Me.OnidDiseñoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEtiqueta", DbType:="BigInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property idEtiqueta() As Long
			Get
				Return Me._idEtiqueta
			End Get
			Set
				If ((Me._idEtiqueta = value)  _
							= false) Then
					Me.OnidEtiquetaChanging(value)
					Me.SendPropertyChanging
					Me._idEtiqueta = value
					Me.SendPropertyChanged("idEtiqueta")
					Me.OnidEtiquetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoEtiqueta", DbType:="Char(1) NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TipoEtiqueta() As Char
			Get
				Return Me._TipoEtiqueta
			End Get
			Set
				If ((Me._TipoEtiqueta = value)  _
							= false) Then
					Me.OnTipoEtiquetaChanging(value)
					Me.SendPropertyChanging
					Me._TipoEtiqueta = value
					Me.SendPropertyChanged("TipoEtiqueta")
					Me.OnTipoEtiquetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Nombre() As String
			Get
				Return Me._Nombre
			End Get
			Set
				If (String.Equals(Me._Nombre, value) = false) Then
					Me.OnNombreChanging(value)
					Me.SendPropertyChanging
					Me._Nombre = value
					Me.SendPropertyChanged("Nombre")
					Me.OnNombreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="NVarChar(250)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Descripcion() As String
			Get
				Return Me._Descripcion
			End Get
			Set
				If (String.Equals(Me._Descripcion, value) = false) Then
					Me.OnDescripcionChanging(value)
					Me.SendPropertyChanging
					Me._Descripcion = value
					Me.SendPropertyChanged("Descripcion")
					Me.OnDescripcionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLDiseño", DbType:="Xml NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property XMLDiseño() As System.Xml.Linq.XElement
			Get
				Return Me._XMLDiseño
			End Get
			Set
				If (Object.Equals(Me._XMLDiseño, value) = false) Then
					Me.OnXMLDiseñoChanging(value)
					Me.SendPropertyChanging
					Me._XMLDiseño = value
					Me.SendPropertyChanged("XMLDiseño")
					Me.OnXMLDiseñoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:=""),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class EtiquetasEnHoja
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idEtiqueta As Long
		
		Private _Referencia As String
		
		Private _Ancho As Double
		
		Private _Alto As Double
		
		Private _Filas As Short
		
		Private _Columnas As Short
		
		Private _EspacioH As Double
		
		Private _EspacioV As Double
		
		Private _MargenIzq As Double
		
		Private _MargenDer As Double
		
		Private _MargenSup As Double
		
		Private _MargenInf As Double
		
		Private _Usos As Integer
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidEtiquetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEtiquetaChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnAnchoChanging(value As Double)
    End Sub
    Partial Private Sub OnAnchoChanged()
    End Sub
    Partial Private Sub OnAltoChanging(value As Double)
    End Sub
    Partial Private Sub OnAltoChanged()
    End Sub
    Partial Private Sub OnFilasChanging(value As Short)
    End Sub
    Partial Private Sub OnFilasChanged()
    End Sub
    Partial Private Sub OnColumnasChanging(value As Short)
    End Sub
    Partial Private Sub OnColumnasChanged()
    End Sub
    Partial Private Sub OnEspacioHChanging(value As Double)
    End Sub
    Partial Private Sub OnEspacioHChanged()
    End Sub
    Partial Private Sub OnEspacioVChanging(value As Double)
    End Sub
    Partial Private Sub OnEspacioVChanged()
    End Sub
    Partial Private Sub OnMargenIzqChanging(value As Double)
    End Sub
    Partial Private Sub OnMargenIzqChanged()
    End Sub
    Partial Private Sub OnMargenDerChanging(value As Double)
    End Sub
    Partial Private Sub OnMargenDerChanged()
    End Sub
    Partial Private Sub OnMargenSupChanging(value As Double)
    End Sub
    Partial Private Sub OnMargenSupChanged()
    End Sub
    Partial Private Sub OnMargenInfChanging(value As Double)
    End Sub
    Partial Private Sub OnMargenInfChanged()
    End Sub
    Partial Private Sub OnUsosChanging(value As Integer)
    End Sub
    Partial Private Sub OnUsosChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEtiqueta", DbType:="BigInt NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idEtiqueta() As Long
			Get
				Return Me._idEtiqueta
			End Get
			Set
				If ((Me._idEtiqueta = value)  _
							= false) Then
					Me.OnidEtiquetaChanging(value)
					Me.SendPropertyChanging
					Me._idEtiqueta = value
					Me.SendPropertyChanged("idEtiqueta")
					Me.OnidEtiquetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ancho", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Ancho() As Double
			Get
				Return Me._Ancho
			End Get
			Set
				If ((Me._Ancho = value)  _
							= false) Then
					Me.OnAnchoChanging(value)
					Me.SendPropertyChanging
					Me._Ancho = value
					Me.SendPropertyChanged("Ancho")
					Me.OnAnchoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alto", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Alto() As Double
			Get
				Return Me._Alto
			End Get
			Set
				If ((Me._Alto = value)  _
							= false) Then
					Me.OnAltoChanging(value)
					Me.SendPropertyChanging
					Me._Alto = value
					Me.SendPropertyChanged("Alto")
					Me.OnAltoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Filas", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Filas() As Short
			Get
				Return Me._Filas
			End Get
			Set
				If ((Me._Filas = value)  _
							= false) Then
					Me.OnFilasChanging(value)
					Me.SendPropertyChanging
					Me._Filas = value
					Me.SendPropertyChanged("Filas")
					Me.OnFilasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Columnas", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Columnas() As Short
			Get
				Return Me._Columnas
			End Get
			Set
				If ((Me._Columnas = value)  _
							= false) Then
					Me.OnColumnasChanging(value)
					Me.SendPropertyChanging
					Me._Columnas = value
					Me.SendPropertyChanged("Columnas")
					Me.OnColumnasChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EspacioH", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property EspacioH() As Double
			Get
				Return Me._EspacioH
			End Get
			Set
				If ((Me._EspacioH = value)  _
							= false) Then
					Me.OnEspacioHChanging(value)
					Me.SendPropertyChanging
					Me._EspacioH = value
					Me.SendPropertyChanged("EspacioH")
					Me.OnEspacioHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EspacioV", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property EspacioV() As Double
			Get
				Return Me._EspacioV
			End Get
			Set
				If ((Me._EspacioV = value)  _
							= false) Then
					Me.OnEspacioVChanging(value)
					Me.SendPropertyChanging
					Me._EspacioV = value
					Me.SendPropertyChanged("EspacioV")
					Me.OnEspacioVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MargenIzq", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property MargenIzq() As Double
			Get
				Return Me._MargenIzq
			End Get
			Set
				If ((Me._MargenIzq = value)  _
							= false) Then
					Me.OnMargenIzqChanging(value)
					Me.SendPropertyChanging
					Me._MargenIzq = value
					Me.SendPropertyChanged("MargenIzq")
					Me.OnMargenIzqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MargenDer", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property MargenDer() As Double
			Get
				Return Me._MargenDer
			End Get
			Set
				If ((Me._MargenDer = value)  _
							= false) Then
					Me.OnMargenDerChanging(value)
					Me.SendPropertyChanging
					Me._MargenDer = value
					Me.SendPropertyChanged("MargenDer")
					Me.OnMargenDerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MargenSup", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property MargenSup() As Double
			Get
				Return Me._MargenSup
			End Get
			Set
				If ((Me._MargenSup = value)  _
							= false) Then
					Me.OnMargenSupChanging(value)
					Me.SendPropertyChanging
					Me._MargenSup = value
					Me.SendPropertyChanged("MargenSup")
					Me.OnMargenSupChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MargenInf", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property MargenInf() As Double
			Get
				Return Me._MargenInf
			End Get
			Set
				If ((Me._MargenInf = value)  _
							= false) Then
					Me.OnMargenInfChanging(value)
					Me.SendPropertyChanging
					Me._MargenInf = value
					Me.SendPropertyChanged("MargenInf")
					Me.OnMargenInfChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usos", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Usos() As Integer
			Get
				Return Me._Usos
			End Get
			Set
				If ((Me._Usos = value)  _
							= false) Then
					Me.OnUsosChanging(value)
					Me.SendPropertyChanging
					Me._Usos = value
					Me.SendPropertyChanged("Usos")
					Me.OnUsosChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:=""),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class EtiquetasEnRollo
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idEtiqueta As Long
		
		Private _Referencia As String
		
		Private _Ancho As Double
		
		Private _Alto As Double
		
		Private _GAP As Double
		
		Private _UnidadMedida As String
		
		Private _Usos As Integer
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidEtiquetaChanging(value As Long)
    End Sub
    Partial Private Sub OnidEtiquetaChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnAnchoChanging(value As Double)
    End Sub
    Partial Private Sub OnAnchoChanged()
    End Sub
    Partial Private Sub OnAltoChanging(value As Double)
    End Sub
    Partial Private Sub OnAltoChanged()
    End Sub
    Partial Private Sub OnGAPChanging(value As Double)
    End Sub
    Partial Private Sub OnGAPChanged()
    End Sub
    Partial Private Sub OnUnidadMedidaChanging(value As String)
    End Sub
    Partial Private Sub OnUnidadMedidaChanged()
    End Sub
    Partial Private Sub OnUsosChanging(value As Integer)
    End Sub
    Partial Private Sub OnUsosChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idEtiqueta", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idEtiqueta() As Long
			Get
				Return Me._idEtiqueta
			End Get
			Set
				If ((Me._idEtiqueta = value)  _
							= false) Then
					Me.OnidEtiquetaChanging(value)
					Me.SendPropertyChanging
					Me._idEtiqueta = value
					Me.SendPropertyChanged("idEtiqueta")
					Me.OnidEtiquetaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Referencia() As String
			Get
				Return Me._Referencia
			End Get
			Set
				If (String.Equals(Me._Referencia, value) = false) Then
					Me.OnReferenciaChanging(value)
					Me.SendPropertyChanging
					Me._Referencia = value
					Me.SendPropertyChanged("Referencia")
					Me.OnReferenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ancho", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Ancho() As Double
			Get
				Return Me._Ancho
			End Get
			Set
				If ((Me._Ancho = value)  _
							= false) Then
					Me.OnAnchoChanging(value)
					Me.SendPropertyChanging
					Me._Ancho = value
					Me.SendPropertyChanged("Ancho")
					Me.OnAnchoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alto", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Alto() As Double
			Get
				Return Me._Alto
			End Get
			Set
				If ((Me._Alto = value)  _
							= false) Then
					Me.OnAltoChanging(value)
					Me.SendPropertyChanging
					Me._Alto = value
					Me.SendPropertyChanged("Alto")
					Me.OnAltoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GAP", DbType:="Float NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property GAP() As Double
			Get
				Return Me._GAP
			End Get
			Set
				If ((Me._GAP = value)  _
							= false) Then
					Me.OnGAPChanging(value)
					Me.SendPropertyChanging
					Me._GAP = value
					Me.SendPropertyChanged("GAP")
					Me.OnGAPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidadMedida", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property UnidadMedida() As String
			Get
				Return Me._UnidadMedida
			End Get
			Set
				If (String.Equals(Me._UnidadMedida, value) = false) Then
					Me.OnUnidadMedidaChanging(value)
					Me.SendPropertyChanging
					Me._UnidadMedida = value
					Me.SendPropertyChanged("UnidadMedida")
					Me.OnUnidadMedidaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usos", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Usos() As Integer
			Get
				Return Me._Usos
			End Get
			Set
				If ((Me._Usos = value)  _
							= false) Then
					Me.OnUsosChanging(value)
					Me.SendPropertyChanging
					Me._Usos = value
					Me.SendPropertyChanged("Usos")
					Me.OnUsosChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Puestos"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Puestos
		Inherits Data.Entity.LinqEntityBase
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _idPuesto As Long
		
		Private _Puesto As String
		
		Private _Identificacion As String
		
		Private _EsCajaCentral As Boolean
		
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidPuestoChanging(value As Long)
    End Sub
    Partial Private Sub OnidPuestoChanged()
    End Sub
    Partial Private Sub OnPuestoChanging(value As String)
    End Sub
    Partial Private Sub OnPuestoChanged()
    End Sub
    Partial Private Sub OnIdentificacionChanging(value As String)
    End Sub
    Partial Private Sub OnIdentificacionChanged()
    End Sub
    Partial Private Sub OnEsCajaCentralChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEsCajaCentralChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idPuesto", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property idPuesto() As Long
			Get
				Return Me._idPuesto
			End Get
			Set
				If ((Me._idPuesto = value)  _
							= false) Then
					Me.OnidPuestoChanging(value)
					Me.SendPropertyChanging
					Me._idPuesto = value
					Me.SendPropertyChanged("idPuesto")
					Me.OnidPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Puesto", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Puesto() As String
			Get
				Return Me._Puesto
			End Get
			Set
				If (String.Equals(Me._Puesto, value) = false) Then
					Me.OnPuestoChanging(value)
					Me.SendPropertyChanging
					Me._Puesto = value
					Me.SendPropertyChanged("Puesto")
					Me.OnPuestoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identificacion", DbType:="VarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Identificacion() As String
			Get
				Return Me._Identificacion
			End Get
			Set
				If (String.Equals(Me._Identificacion, value) = false) Then
					Me.OnIdentificacionChanging(value)
					Me.SendPropertyChanging
					Me._Identificacion = value
					Me.SendPropertyChanged("Identificacion")
					Me.OnIdentificacionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EsCajaCentral", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property EsCajaCentral() As Boolean
			Get
				Return Me._EsCajaCentral
			End Get
			Set
				If ((Me._EsCajaCentral = value)  _
							= false) Then
					Me.OnEsCajaCentralChanging(value)
					Me.SendPropertyChanging
					Me._EsCajaCentral = value
					Me.SendPropertyChanged("EsCajaCentral")
					Me.OnEsCajaCentralChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class SPInformeCompraResult
		
		Private _inf_compra As System.Nullable(Of Double)
		
		Private _inf_numpedido As System.Nullable(Of Integer)
		
		Private _inf_año As System.Nullable(Of Integer)
		
		Private _inf_mes As System.Nullable(Of Integer)
		
		Private _inf_mesaño As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_compra", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property inf_compra() As System.Nullable(Of Double)
			Get
				Return Me._inf_compra
			End Get
			Set
				If (Me._inf_compra.Equals(value) = false) Then
					Me._inf_compra = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_numpedido", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property inf_numpedido() As System.Nullable(Of Integer)
			Get
				Return Me._inf_numpedido
			End Get
			Set
				If (Me._inf_numpedido.Equals(value) = false) Then
					Me._inf_numpedido = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_año", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property inf_año() As System.Nullable(Of Integer)
			Get
				Return Me._inf_año
			End Get
			Set
				If (Me._inf_año.Equals(value) = false) Then
					Me._inf_año = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_mes", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property inf_mes() As System.Nullable(Of Integer)
			Get
				Return Me._inf_mes
			End Get
			Set
				If (Me._inf_mes.Equals(value) = false) Then
					Me._inf_mes = value
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inf_mesaño", DbType:="VarChar(8)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property inf_mesaño() As String
			Get
				Return Me._inf_mesaño
			End Get
			Set
				If (String.Equals(Me._inf_mesaño, value) = false) Then
					Me._inf_mesaño = value
				End If
			End Set
		End Property
	End Class
End Namespace
